---
title: "NTM CT Scoring - Initial Agreement"
author: "Tim Vigers"
date: "today"
date-format: long
format:
  html:
    toc: true
    toc-depth: 5
    toc-float: true
    code-fold: false
    self-contained: true
    fig-cap-location: top
    page-layout: full
editor: source
---

```{r}
#| include: false
library(tidyverse)
library(redcapAPI)
library(lmerTest)
library(performance)
library(broom.mixed)
library(knitr)
# Import data
api <- read.table("~/Documents/Work/Vigers/CF/Stacey Martiniano/NTM CT Scoring/api.txt",
                  header = F
)
rcon <- redcapConnection(
  url = "https://redcap.ucdenver.edu/api/",
  token = api[1, 1]
)
data <- exportRecords(rcon, labels = F)
data <- data.frame(lapply(data, as.character))
data$scan_id = as.numeric(data$scan_id)
# Make scorer IDs by initial
data$scorer <- paste0(
  toupper(substr(data$reader_first_name, 1, 1)),
  toupper(substr(data$reader_last_name, 1, 1))
)
data$scorer[data$scorer=="GG"]="GS"
# Revert duplicate IDs back to original to match with gold standard
training = read.csv("~/Documents/Work/Vigers/CF/Stacey Martiniano/NTM CT Scoring/Data_Clean/training.key.csv")
dups = read.csv("~/Documents/Work/Vigers/CF/Stacey Martiniano/NTM CT Scoring/Data_Clean/duplicated.key.csv")
training$Training_id = as.numeric(sub("T00","",training$Training_id))
# Change duplicates to OG IDs
old <- dups$duplicated_ssid..dates.shifted..17.days.
new <- dups$original_ssid
data$scan_id[data$scan_id %in% old] <- new[match(data$scan_id, old, nomatch = 0)]
# Change training IDs to OG IDs
old <- training$Training_id
new = training$Cffid.Scoring.Set
data$scan_id[data$scan_id %in% old] <- new[match(data$scan_id, old, nomatch = 0)]
```

# Gold standards

## Excluding bronchiectasis

```{r}
#| echo: false
# Gold standard data
gs = data %>% 
  arrange(scan_id, scorer) %>%
  filter(scan_id %in% training$Cffid.Scoring.Set) %>%
  group_by(scorer,scan_id) %>%
  slice_max(scoresheet_timestamp) %>%
  select(scorer, scan_id, bronchiectasis_rul:atelectasis___6) %>%
  ungroup() %>% pivot_longer(bronchiectasis_rul:atelectasis___6,
                             names_to = c("feature", "location"),
                             names_pattern = "(.*)_(.*)$"
  ) %>% 
  mutate(
    feature = gsub("__", "", feature),
    feature = str_to_title(gsub("_", " ", feature))
  ) 
gs$location <- factor(gs$location,
                      levels = c("1", "2", "3", "4", "5", "6", "ling", "lll", 
                                 "lul", "rll", "rml", "rul"),
                      labels = c("RUL", "RML", "RLL", "LUL", "Ling", "LLL", 
                                 "Ling", "LLL", "LUL", "RLL", "RML", "RUL")
)
# Exclude bronchiectasis
gs = gs %>% filter(feature != "Bronchiectasis")
gs$value = factor(gs$value,levels = c("Unchecked","Checked"),
                  labels = c("Absent","Present"))
# GS as reference group
gs$scorer = factor(gs$scorer,levels = c("GS","AF","DL","JW"))
gs$value = factor(gs$value)
# Plot
gs %>%
  ggplot(., aes(x = scorer, y = location, fill = value)) +
  geom_tile(color = "black") +
  theme_bw() +
  labs(fill = "", x = "Scorer", y = "Location") +
  facet_grid(rows = vars(scan_id),cols = vars(feature))
```

### Comparison between raters

```{r}
# Mixed model
mod1 <- glmer(value ~ scorer+(1|scan_id)+(1|feature)+(1|location), 
              data=gs,family = "binomial")
res = tidy(mod1,exponentiate = T,effects="fixed")
kable(res %>% select(-effect),digits = 3)
```

Across all training scans, JW was significantly different from the gold standard ("Intercept"). Adjusted ICC was `r round(icc(mod1)$ICC_adjusted,3)`, indicating moderate agreement between raters.

### Comparison within features

```{r results='asis'}
invisible(lapply(unique(gs$feature), function(f){
  cat("\n")
  cat("###",f)
  cat("\n")
  cat("\n")
  mod <- tryCatch(glmer(value ~ scorer+(1|scan_id)+(1|location), 
                        data=gs[gs$feature==f,],family = "binomial"),
                  error=function(err) NULL,warning=function(war) NULL)
  if(!is.null(mod)){
    res = tidy(mod,exponentiate = T,effects="fixed")
    print(kable(res %>% select(-effect),digits = 3))
    cat("\n")
    cat("Adjusted ICC was",round(icc(mod)$ICC_adjusted,3))
    cat("\n")
  } else {
    cat("\n")
    cat("Model did not converge (likely due to low variability).")
    cat("\n")
  }
}))
```
