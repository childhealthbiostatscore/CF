---
title: "The Changing Face of Pediatric Pulmonary Exacerbations in CF (NACFC 2023)"
author: "Tim Vigers"
date: "today"
format:
  html:
    toc: false
    code-fold: true
    self-contained: true
    fig-cap-location: top
    page-layout: full
editor: source
---

```{r}
#| include: false
library(tidyverse)
library(gtsummary)
library(ggpubr)
source("~/GitHub/CF/Scott Sagel/PEx in CF/create_pex_analysis_dataset.R")
load("~/Library/CloudStorage/OneDrive-TheUniversityofColoradoDenver/Vigers/CF/Scott Sagel/PEx in CF/Data_Cleaned/analysis_dataset.RData")
# Colors for plots
yellow <- "#f8b80a"
red <- "#e30022"
purple <- "#7b2670"
blue <- "#022451"
```

# Data cleaning notes

1. FEV1 % predicted at discharge was calculated using the `rspiro` package and GLI-2012 equations.
  - We did not distinguish between NE and SE Asian when capturing race, so all Asian participants were assumed to be NE Asian for these calculations (this was picked randomly).
  - Some participants are under age 3 and/or under 1 meter in height, so the ppFEV1 calculations may not be exactly accurate for these people.
2. For each person with multiple admissions, continuous variables were averaged prior to generating summary tables.
3. If a participant was on a modulators during any admission, they were counted as on modulators for that year.

# Summary Statistics (Per Person)

```{r}
#| label: tbl-all
#| tbl-cap: Summary by Year
#| message: false
summary_table %>%
  select(-sid, -redcap_data_access_group) %>%
  select(num_hosp, days_admit:ppfev1_diff, age_at_admit, everything()) %>%
  tbl_summary(
    by = admit_year,
    type = list(num_hosp ~ "continuous"),
    statistic = list(
      all_continuous() ~ "{mean} ({sd})",
      num_hosp ~ "{median} [{p25}, {p75}]",
      days_admit ~ "{median} [{p25}, {p75}]"
    ),
    missing_text = "(Missing)",
    label = labels
  ) %>%
  add_p(
    test = list(
      all_continuous() ~ "t.test",
      num_hosp ~ "wilcox.test",
      days_admit ~ "wilcox.test"
    ),
    test.args = all_tests("fisher.test") ~ list(simulate.p.value = T)
  ) %>%
  separate_p_footnotes()
```

```{r}
#| label: tbl-site
#| tbl-cap: Stratified by Site
#| message: false
summary_table %>%
  select(-sid, -cftr_mod_spec) %>%
  select(num_hosp, days_admit:ppfev1_diff, age_at_admit, everything()) %>%
  tbl_strata(
    strata = redcap_data_access_group,
    .tbl_fun =
      ~ .x %>%
        tbl_summary(
          by = admit_year,
          type = list(num_hosp ~ "continuous"),
          statistic = list(
            all_continuous() ~ "{mean} ({sd})",
            num_hosp ~ "{median} [{p25}, {p75}]",
            days_admit ~ "{median} [{p25}, {p75}]"
          ),
          missing_text = "(Missing)",
          label = labels
        ) %>%
        add_p(
          test = list(
            all_continuous() ~ "t.test",
            num_hosp ~ "wilcox.test",
            days_admit ~ "wilcox.test"
          ),
          test.args = all_tests("fisher.test") ~ list(simulate.p.value = T)
        ) %>%
        separate_p_footnotes()
  )
```

# Plots

## Slide 9

```{r}
# Number of hospitalizations
df %>%
  ggplot(aes(x = factor(admit_year), fill = factor(admit_year))) +
  geom_bar() +
  xlab("Site") +
  ylab("Num. of Hospitalizations") +
  theme_bw() +
  theme(legend.position = "none") +
  scale_fill_manual(values = c(purple, yellow))
# % hospitalized 2 or more times in both years
df %>%
  group_by(sid, admit_year) %>%
  summarise(n = n(), .groups = "drop") %>%
  group_by(admit_year) %>%
  summarise(perc = mean(n >= 2) * 100, .groups = "drop") %>%
  ggplot(aes(x = factor(admit_year), y = perc, fill = factor(admit_year))) +
  geom_bar(position = "dodge", stat = "identity") +
  geom_signif(
    xmin = 1, xmax = 2, y_position = 50, map_signif_level = T,
    annotation = "<0.001"
  ) +
  xlab("Site") +
  ylab("Percent With >= 2 Hospitalizations") +
  theme_bw() +
  theme(legend.position = "none") +
  scale_fill_manual(values = c(purple, yellow))
```

## Slide 10 

For the box and whisker plot of age at admission, we used the average age for people who were admitted more than once in a given year. 

```{r}
#| warning: false
#| message: false
# Age
df %>%
  group_by(sid, redcap_data_access_group, admit_year) %>%
  summarise(age_at_admit = mean(age_at_admit, na.rm = T), .groups = "drop") %>%
  ggplot(aes(x = factor(admit_year), y = age_at_admit, fill = factor(admit_year))) +
  geom_boxplot() +
  geom_signif(
    xmin = 1, xmax = 2, y_position = 28, map_signif_level = T,
    annotation = 0.15
  ) +
  xlab("Site") +
  ylab("Age at Admission") +
  theme_bw() +
  theme(legend.position = "none") +
  scale_fill_manual(values = c(purple, red))
# Sex
df %>%
  group_by(admit_year, sid) %>%
  summarise(sex = unique(sex)) %>%
  summarise(Male = mean(sex == "Male") * 100, Female = mean(sex == "Female") * 100) %>%
  pivot_longer(c(Male, Female), names_to = "sex", values_to = "perc") %>%
  ggplot(aes(x = factor(admit_year), y = perc, fill = factor(sex))) +
  geom_bar(position = "stack", stat = "identity") +
  geom_signif(
    xmin = 1, xmax = 2, y_position = 105, map_signif_level = T,
    annotation = 0.12
  ) +
  ylab("%") +
  theme_bw() +
  theme(legend.title = element_blank(), axis.title.x = element_blank()) +
  scale_fill_manual(values = c(yellow, red))
# Race
df %>%
  group_by(admit_year, sid) %>%
  summarise(race = unique(race)) %>%
  summarise(
    White = mean(race == "White") * 100,
    `Black or African-American` = mean(race == "Black or African-American") * 100,
    Asian = mean(race == "NE Asian") * 100,
    `Other/mixed` = mean(race == "Other/mixed") * 100
  ) %>%
  pivot_longer(c(
    White, `Black or African-American`,
    Asian, `Other/mixed`
  ), names_to = "race", values_to = "perc") %>%
  ggplot(aes(x = factor(admit_year), y = perc, fill = factor(race))) +
  geom_bar(position = "stack", stat = "identity") +
  geom_signif(
    xmin = 1, xmax = 2, y_position = 105, map_signif_level = T,
    annotation = 0.012
  ) +
  ylab("%") +
  theme_bw() +
  theme(legend.title = element_blank(), axis.title.x = element_blank()) +
  scale_fill_manual(values = c(red, purple, blue, yellow))
# Ethnicity
df %>%
  group_by(admit_year, sid) %>%
  summarise(ethnicity = unique(ethnicity)) %>%
  summarise(
    `Hispanic or Latino` = mean(ethnicity == "Hispanic or Latino") * 100,
    `Not Hispanic or Latino` = mean(ethnicity == "Not Hispanic or Latino") * 100,
    `Unknown or not reported` = mean(ethnicity == "Unknown or not reported") * 100
  ) %>%
  pivot_longer(c(
    `Hispanic or Latino`, `Not Hispanic or Latino`, `Unknown or not reported`
  ), names_to = "ethnicity", values_to = "perc") %>%
  ggplot(aes(x = factor(admit_year), y = perc, fill = factor(ethnicity))) +
  geom_bar(position = "stack", stat = "identity") +
  geom_signif(
    xmin = 1, xmax = 2, y_position = 105, map_signif_level = T,
    annotation = 0.088
  ) +
  ylab("%") +
  theme_bw() +
  theme(legend.title = element_blank(), axis.title.x = element_blank()) +
  scale_fill_manual(values = c(red, purple, yellow))
```

## Slide 11

```{r}
#| message: false
# Genotype
df %>%
  group_by(admit_year, sid) %>%
  summarise(genotype = unique(genotype)) %>%
  summarise(
    `No F508del` = mean(genotype == "No F508del") * 100,
    `F508del heterozygous` = mean(genotype == "F508del heterozygous") * 100,
    `F508del homozygous` = mean(genotype == "F508del homozygous") * 100
  ) %>%
  pivot_longer(c(
    `No F508del`, `F508del heterozygous`, `F508del homozygous`
  ), names_to = "genotype", values_to = "perc") %>%
  ggplot(aes(x = factor(admit_year), y = perc, fill = factor(genotype))) +
  geom_bar(position = "stack", stat = "identity") +
  geom_signif(
    xmin = 1, xmax = 2, y_position = 105, map_signif_level = T,
    annotation = "<0.001"
  ) +
  ylab("%") +
  theme_bw() +
  theme(legend.title = element_blank(), axis.title.x = element_blank()) +
  scale_fill_manual(values = c(red, purple, yellow))
```

## Slide 12

For people with multiple admissions, FEV1 % predicted was averaged at admission and at discharge. Baseline FEV1 % predicted is the average of up to 6 months of FEV1 measures prior to first admission.

```{r}
#| warning: false
df %>%
  group_by(admit_year, sid) %>%
  summarise(across(ppfev1_admit:ppfev1_baseline, ~ mean(.x, na.rm = T)),
    .groups = "drop"
  ) %>%
  rename(
    Admission = ppfev1_admit, Discharge = ppfev1_discharge,
    Baseline = ppfev1_baseline
  ) %>%
  pivot_longer(c(Admission, Discharge, Baseline)) %>%
  mutate(name = factor(name, levels = c("Baseline", "Admission", "Discharge"))) %>%
  ggplot(aes(
    x = name, y = value,
    fill = factor(admit_year)
  )) +
  geom_boxplot() +
  geom_pwc(
    aes(group = admit_year),
    tip.length = 0.01,
    method = "t_test", label = "p.format"
  ) +
  ylab("FEV1 % predicted") +
  theme_bw() +
  theme(
    legend.title = element_blank(), legend.position = "bottom",
    axis.title.x = element_blank()
  ) +
  scale_fill_manual(values = c(purple, yellow))
```

```{r}
# Proportions who returned to >= 90% and >= 100% at discharge
df %>%
  mutate(
    returned_90 = ppfev1_discharge >= ppfev1_baseline * 0.9,
    returned_100 = ppfev1_discharge >= ppfev1_baseline
  ) %>%
  select(sid, admit_year, redcap_repeat_instance, contains("returned")) %>%
  group_by(admit_year) %>%
  summarise(
    returned_90 = mean(returned_90, na.rm = T) * 100,
    returned_100 = mean(returned_100, na.rm = T) * 100
  ) %>%
  pivot_longer(c(returned_90, returned_100)) %>%
  mutate(name = factor(name,
    levels = c("returned_90", "returned_100"),
    labels = c(
      "Returned to 90% of Baseline",
      "Returned to 100% of Baseline"
    )
  )) %>%
  ggplot(aes(x = factor(name), y = value, fill = factor(admit_year))) +
  geom_bar(position = "dodge", stat = "identity") +
  geom_signif(
    xmin = c(0.75, 1.75), xmax = c(1.25, 2.25), y_position = 95, map_signif_level = T,
    annotation = c(0.7, 0.2)
  ) +
  ylab("Percent of Admissions") +
  theme_bw() +
  theme(axis.title.x = element_blank(), legend.title = element_blank()) +
  scale_fill_manual(values = c(purple, yellow))
```

The above plot represents the proportion of admissions where the patient returned to close to baseline lung function, and was not aggregated by patient. In other words, multiple admissions for the same patient were considered independent in this case. 
