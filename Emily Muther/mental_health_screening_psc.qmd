---
title: "PSC Screening in Cystic Fibrosis"
author: "Tim Vigers"
date: "today"
date-format: long
format:
  html:
    toc: true
    toc-depth: 5
    toc-float: true
    code-fold: true
    self-contained: true
    fig-cap-location: top
    page-layout: full
editor: source
---

```{r setup}
#| include: false
library(tidyverse)
library(readxl)
library(arsenal)
library(lubridate)
library(lmerTest)
library(GLMMadaptive)
library(knitr)
home_dir <- switch(Sys.info()["sysname"],
  "Darwin" = "/Users/tim/Library/CloudStorage/OneDrive-TheUniversityofColoradoDenver/Vigers/CF",
  "Windows" = "C:/Users/Tim/OneDrive - The University of Colorado Denver/Vigers/CF",
  "Linux" = "/home/tim/OneDrive/Vigers/CF"
)
github_dir <- switch(Sys.info()["sysname"],
  "Darwin" = "/Users/tim/Documents/GitHub",
  "Windows" = "C:/Users/Tim/Documents/GitHub",
  "Linux" = "/home/tim/Documents/GitHub"
)
knitr::opts_knit$set(root.dir = home_dir)
```

```{r data cleaning}
#| message: false
# Import
df <- read_excel("./Emily Muther/Muther Research Group - General/PSC manuscript 2025/Data_Raw/PSC_9-20-19 thru 4-18-25_pulled 4-21-25.xlsx")
df$`Contact Date` <- mdy(df$`Contact Date`)
# Fill down MRN abd contact date
df <- df %>%
  fill(`Pat Mrn Id`, .direction = "down")
df <- df %>%
  group_by(`Pat Mrn Id`, `AGE AT CONTACT`) %>%
  fill(`Contact Date`)
# Classify insurance per Emily
df$Insurance <- factor(df$`Payor Name`,
  levels = c(
    "MEDICAID", "MEDICAID NEW MEXICO", "MEDICAID WYOMING", "UNITED HEALTHCARE",
    "CIGNA", "ANTHEM BCBS", "ROCKY MOUNTAIN HEALTH PLAN", "AETNA",
    "MEDICAID OTHER STATES", "TRICARE", "CICP", "CHP+COLORADO ACCESS",
    "CU GME HEALTH", "MIDLANDS CHOICE", "BRIGHT HEALTH", "FIRST HEALTH GROUP",
    "ROCKY MOUNTAIN MEDICAID", "KAISER", "MEDICAID NEBRASKA",
    "MEDICAID OKLAHOMA", "EBMS", "COFINITY", "SIMPLIFIED BENEFITS ADMINISTRATORS",
    "FRIDAY HEALTH PLANS", "SELECTHEALTH, INC."
  ),
  labels = c(
    "Public", "Public", "Public", "Private", "Private", "Private", "Public",
    "Private", "Public", "Private", "Public", "Public", "Private", "Private",
    "Private", "Private", "Public", "Private", "Public", "Public", "Private",
    "Private", "Private", "Private", "Private"
  )
)
# Convert to wide
df <- df %>%
  select(
    `Pat Mrn Id`, `Contact Date`, `AGE AT CONTACT`, Insurance,
    `Internalizing subscale`, `Attention subscale`, `Externalizing subscale`,
    Score
  ) %>%
  distinct() %>%
  pivot_wider(names_from = Insurance, values_from = Insurance) %>%
  unite("Insurance", Public, Private, `NA`, remove = T, na.rm = T)
df$Insurance <- factor(df$Insurance,
  levels = c("", "Private", "Public", "Public_Private"),
  labels = c("None", "Private", "Public", "Both")
)
# Add data from Elin
demo <- read_excel("./Emily Muther/Muther Research Group - General/PSC manuscript 2025/Data_Raw/PSC Data 2025 05 21.xlsx", sheet = "Demographics")
demo$`Pat Mrn Id` <- as.character(demo$`Pat Mrn Id`)
demo$Genotype <- rowSums(demo[, c("Mutation 1", "Mutation 2")] == "F508del")
demo$Genotype <- factor(demo$Genotype,
  levels = c(2, 1, 0),
  labels = c("F508del homozygous", "F508del heterozygous", "Other/Other")
)
demo$Sex <- factor(demo$Sex, levels = c("M", "F"), labels = c("Male", "Female"))
races <- c(
  "Asian", "Black/African-American", "White", "Native American/Alaska Native",
  "Middle Eastern/Arabic", "Race Unknown"
)
demo$Race <- apply(demo %>% select(Asian:`Race Unknown`), 1, function(r) {
  w <- which(r == T)
  if (length(w) > 1 | w == 6) {
    "Unknown/More than one"
  } else {
    races[w]
  }
})
demo$Race <- factor(demo$Race)
demo$`Hispanic or Latino` <-
  factor(demo$`Hispanic or Latino`, levels = c(F, T), labels = c("No", "Yes"))
visits <- read_excel("./Emily Muther/Muther Research Group - General/PSC manuscript 2025/Data_Raw/PSC Data 2025 05 21.xlsx", sheet = "Visits")
visits$`Pat Mrn Id` <- as.character(visits$`Pat Mrn Id`)
visits <- visits %>% select(-`FEV1 raw value`)
# Combine levels of family income
df <- left_join(df, demo, by = join_by(`Pat Mrn Id`))
df <- left_join(df, visits, by = join_by(`Pat Mrn Id`, `Contact Date`))
# Convert to numeric
df$`AGE AT CONTACT` <- as.numeric(df$`AGE AT CONTACT`)
df$`Internalizing subscale` <- as.numeric(df$`Internalizing subscale`)
df$`Attention subscale` <- as.numeric(df$`Attention subscale`)
df$`Externalizing subscale` <- as.numeric(df$`Externalizing subscale`)
df$Score <- as.numeric(df$Score)
# Make age group
df$`Age Group` <- cut(df$`AGE AT CONTACT`,
  breaks = c(-Inf, 6, 10, Inf),
  labels = c("Age < 6", "Age >= 6 and < 10", "Age >= 10"), right = F
)
# Make variables for 0 scores and elevated scores on each scale
df$`Internalizing subscale elevated` <- factor(df$`Internalizing subscale` >= 5,
  levels = c(F, T), labels = c("Not elevated", "Elevated")
)
df$`Internalizing subscale symptoms` <- factor(df$`Internalizing subscale` > 0,
  levels = c(F, T),
  labels = c(
    "No internalizing symptoms (score = 0)",
    "Any internalizing symptoms (score > 0)"
  )
)
df$`Attention subscale elevated` <- factor(df$`Attention subscale` >= 7,
  levels = c(F, T), labels = c("Not elevated", "Elevated")
)
df$`Attention subscale symptoms` <- factor(df$`Attention subscale` > 0,
  levels = c(F, T),
  labels = c(
    "No attention symptoms (score = 0)",
    "Any attention symptoms (score > 0)"
  )
)
df$`Externalizing subscale elevated` <- factor(df$`Internalizing subscale` >= 7,
  levels = c(F, T), labels = c("Not elevated", "Elevated")
)
df$`Externalizing subscale symptoms` <- factor(df$`Externalizing subscale` > 0,
  levels = c(F, T),
  labels = c(
    "No externalizing symptoms (score = 0)",
    "Any externalizing symptoms (score > 0)"
  )
)
df$`Score elevated` <- factor(
  df$Score >= 15 |
    df$`Internalizing subscale` >= 5 |
    df$`Attention subscale` >= 7 |
    df$`Internalizing subscale` >= 7,
  levels = c(F, T), labels = c("Not elevated", "Elevated")
)
df$`Any symptoms` <- factor(df$Score > 0,
  levels = c(F, T),
  labels = c(
    "No symptoms (total score = 0)",
    "Any symptoms (total score > 0)"
  )
)
# Determine if they were ever elevated on each subscale
df <- df %>%
  group_by(`Pat Mrn Id`) %>%
  mutate(
    `Internalizing subscale ever elevated` =
      any(`Internalizing subscale elevated` == "Elevated"),
    `Attention subscale ever elevated` =
      any(`Attention subscale elevated` == "Elevated"),
    `Externalizing subscale ever elevated` =
      any(`Externalizing subscale elevated` == "Elevated"),
    `Score ever elevated` = any(`Score elevated` == "Elevated"),
  )
# Set table options
mycontrols <-
  tableby.control(
    numeric.stats = c("N", "Nmiss", "medianq1q3", "range"),
    cat.stats = c("N", "Nmiss", "countpct")
  )
# Basic formula
f <- ~ Genotype + Race + `Hispanic or Latino` + Insurance +
  `Annual Family Income` + BMI + `FEV1 % predicted` + Alyftrek + Kalydeco +
  Orkambi + Symdeko + Trikafta +
  `Internalizing subscale` + `Internalizing subscale elevated` + `Internalizing subscale symptoms` +
  `Attention subscale` + `Attention subscale elevated` + `Attention subscale symptoms` +
  `Externalizing subscale` + `Externalizing subscale elevated` + `Externalizing subscale symptoms` +
  Score + `Score elevated` + `Any symptoms`
```

# Score summary at first visit

## By age group

```{r results='asis'}
first_visit <- df %>%
  group_by(`Pat Mrn Id`) %>%
  slice_min(`AGE AT CONTACT`)
t1 <- tableby(update(f, `Age Group` ~ .), data = first_visit)
summary(t1, pfootnote = T)
```

# Plots of participants who were ever elevated

## Internalizing subscale

```{r}
ggplot(
  subset(df, `Internalizing subscale ever elevated` == T),
  aes(x = `AGE AT CONTACT`, y = `Internalizing subscale`)
) +
  geom_hline(yintercept = 5, color = "red") +
  geom_point() +
  geom_line(aes(group = `Pat Mrn Id`)) +
  theme_bw()
```

## Attention subscale

```{r}
ggplot(
  subset(df, `Attention subscale ever elevated` == T),
  aes(x = `AGE AT CONTACT`, y = `Attention subscale`)
) +
  geom_hline(yintercept = 7, color = "red") +
  geom_point() +
  geom_line(aes(group = `Pat Mrn Id`)) +
  theme_bw()
```

## Externalizing subscale

```{r}
ggplot(
  subset(df, `Externalizing subscale ever elevated` == T),
  aes(x = `AGE AT CONTACT`, y = `Externalizing subscale`)
) +
  geom_hline(yintercept = 7, color = "red") +
  geom_point() +
  geom_line(aes(group = `Pat Mrn Id`)) +
  theme_bw()
```

## Total score

```{r}
ggplot(
  subset(df, `Score ever elevated` == T),
  aes(x = `AGE AT CONTACT`, y = Score)
) +
  geom_hline(yintercept = 15, color = "red") +
  geom_point() +
  geom_line(aes(group = `Pat Mrn Id`)) +
  theme_bw()
```
