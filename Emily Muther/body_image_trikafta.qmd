---
title: "Body Image and Trikafta"
author: "Tim Vigers"
date: "today"
date-format: long
format:
  html:
    toc: true
    toc-depth: 5
    toc-float: true
    code-fold: true
    self-contained: true
    fig-cap-location: top
    page-layout: full
execute:
  echo: false
editor: source
---

# Data Cleaning Steps

1.  Participants who answered "I don't know" or "no" on the variable `TakingTrikafta` were excluded from these analyses.

```{r warning=FALSE}
#| include: false
library(tidyverse)
library(gtsummary)
library(kableExtra)
library(foreign)
library(plotly)
library(broom)
library(report)
library(sjPlot)
# Read in data
df = read.spss("/Users/timvigers/Documents/Work/Vigers/CF/Emily Muther/Body Image and Trikafta/Data_Raw/TrikaftaBodyImage3.6.23.sav",to.data.frame = T)
# Filter
df = df %>% 
  filter(TakingTrikafta=="yes")
# Trim white space
df = df %>%
  mutate(across(where(is.character),trimws))
# Replace blanks with NA
df[df==""]=NA
# Categorical variables
df$FRS_Category = relevel(df$FRS_Category,ref = "neutral")
```

# Descriptive analyses

## Demographics

```{r}
#| label: demographics
df %>% select(Age,Gender,Race,Ethnicity) %>%
  tbl_summary(
    by = Gender,
    statistic = list(
      all_continuous() ~ "{mean} ({sd})"
    ),
    missing_text = "(Missing)"
  )
```

## Frequency of reported changes

```{r}
#| label: changes
df %>% select(ChangestoBreathing:MoodChangesSideEf,FeelTrikafta) %>%
  tbl_summary(
    type = list(
      all_categorical() ~ "categorical"
    ),
    missing_text = "(Missing)"
  )
```

# Mental health scores by FRS category

## PHQ9

### Odds of an elevated score

Results are reported as odds ratios, with the FRS "neutral" category as the reference group.

```{r}
mod = glm(PHQ9_elevated ~ FRS_Category,data = df,family = "binomial")
res = tidy(mod,exponentiate = T)
kable(res,digits = 3)
```

`r report(mod)`

### Association with FRS category in those with elevated scores.

Results are reported as expected counts, with the FRS "neutral" category as the reference group.

```{r}
mod = glm(PHQ9_Total~ FRS_Category,data = df[df$PHQ9_elevated=="yes",],family = "poisson")
res = tidy(mod,exponentiate = T)
kable(res,digits = 3)
```

`r report(mod)`

## GAD7

### Odds of an elevated score

Results are reported as odds ratios, with the FRS "neutral" category as the reference group.

```{r}
mod = glm(GAD7_elevated ~ FRS_Category,data = df,family = "binomial")
res = tidy(mod,exponentiate = T)
kable(res,digits = 3)
```

`r report(mod)`

### Association with FRS category in those with elevated scores.

Results are reported as expected counts, with the FRS "neutral" category as the reference group.

```{r}
mod = glm(GAD7_Total~ FRS_Category,data = df[df$GAD7_elevated=="yes",],family = "poisson")
res = tidy(mod,exponentiate = T)
kable(res,digits = 3)
```

`r report(mod)`

# Mental health scores by BES

## PHQ9

### BE_APPEARANCE_MEAN

#### Odds of an elevated score

Results are reported as odds ratios for a one-unit change in the predictor.

```{r}
mod1 = glm(PHQ9_elevated ~ BE_APPEARANCE_MEAN,data = df,family = "binomial")
res = tidy(mod1,exponentiate = T)
kable(res,digits = 3)
```

`r report(mod)`

#### Association with BE_APPEARANCE_MEAN in those with elevated scores.

Results are reported as expected counts, with the FRS "neutral" category as the reference group.

```{r}
mod2 = glm(PHQ9_Total~ BE_APPEARANCE_MEAN,data = df[df$PHQ9_elevated=="yes",],family = "poisson")
res = tidy(mod2,exponentiate = T)
kable(res,digits = 3)
```

`r report(mod)`

### BE_ATTRIBUTION_MEAN

#### Odds of an elevated score

Results are reported as odds ratios for a one-unit change in the predictor.

```{r}
mod3 = glm(PHQ9_elevated ~ BE_ATTRIBUTION_MEAN,data = df,family = "binomial")
res = tidy(mod3,exponentiate = T)
kable(res,digits = 3)
```

`r report(mod)`

#### Association with BE_ATTRIBUTION_MEAN in those with elevated scores.

Results are reported as expected counts, with the FRS "neutral" category as the reference group.

```{r}
mod4 = glm(PHQ9_Total~ BE_ATTRIBUTION_MEAN,data = df[df$PHQ9_elevated=="yes",],family = "poisson")
res = tidy(mod4,exponentiate = T)
kable(res,digits = 3)
```

`r report(mod)`

### BE_WEIGHT_MEAN

#### Odds of an elevated score

Results are reported as odds ratios for a one-unit change in the predictor.

```{r}
mod5 = glm(PHQ9_elevated ~ BE_WEIGHT_MEAN,data = df,family = "binomial")
res = tidy(mod5,exponentiate = T)
kable(res,digits = 3)
```

`r report(mod)`

#### Association with BE_WEIGHT_MEAN in those with elevated scores.

Results are reported as expected counts, with the FRS "neutral" category as the reference group.

```{r}
mod6 = glm(PHQ9_Total~ BE_WEIGHT_MEAN,data = df[df$PHQ9_elevated=="yes",],family = "poisson")
res = tidy(mod6,exponentiate = T)
kable(res,digits = 3)
```

`r report(mod)`

### Forest plot of logistic regression results

```{r}
plot_models(mod1,mod3,mod5) + theme_bw() + theme(legend.position = "none")
```

## GAD7

### BE_APPEARANCE_MEAN

#### Odds of an elevated score

Results are reported as odds ratios for a one-unit change in the predictor.

```{r}
mod1 = glm(GAD7_elevated ~ BE_APPEARANCE_MEAN,data = df,family = "binomial")
res = tidy(mod1,exponentiate = T)
kable(res,digits = 3)
```

`r report(mod)`

#### Association with BE_APPEARANCE_MEAN in those with elevated scores.

Results are reported as expected counts, with the FRS "neutral" category as the reference group.

```{r}
mod2 = glm(GAD7_Total~ BE_APPEARANCE_MEAN,data = df[df$GAD7_elevated=="yes",],family = "poisson")
res = tidy(mod2,exponentiate = T)
kable(res,digits = 3)
```

`r report(mod)`

### BE_ATTRIBUTION_MEAN

#### Odds of an elevated score

Results are reported as odds ratios for a one-unit change in the predictor.

```{r}
mod3 = glm(GAD7_elevated ~ BE_ATTRIBUTION_MEAN,data = df,family = "binomial")
res = tidy(mod3,exponentiate = T)
kable(res,digits = 3)
```

`r report(mod)`

#### Association with BE_ATTRIBUTION_MEAN in those with elevated scores.

Results are reported as expected counts, with the FRS "neutral" category as the reference group.

```{r}
mod4 = glm(GAD7_Total~ BE_ATTRIBUTION_MEAN,data = df[df$GAD7_elevated=="yes",],family = "poisson")
res = tidy(mod4,exponentiate = T)
kable(res,digits = 3)
```

`r report(mod)`

### BE_WEIGHT_MEAN

#### Odds of an elevated score

Results are reported as odds ratios for a one-unit change in the predictor.

```{r}
mod5 = glm(GAD7_elevated ~ BE_WEIGHT_MEAN,data = df,family = "binomial")
res = tidy(mod5,exponentiate = T)
kable(res,digits = 3)
```

`r report(mod)`

#### Association with BE_WEIGHT_MEAN in those with elevated scores.

Results are reported as expected counts, with the FRS "neutral" category as the reference group.

```{r}
mod6 = glm(GAD7_Total~ BE_WEIGHT_MEAN,data = df[df$GAD7_elevated=="yes",],family = "poisson")
res = tidy(mod6,exponentiate = T)
kable(res,digits = 3)
```

`r report(mod)`

### Forest plot of logistic regression results

```{r}
plot_models(mod1,mod3,mod5) + theme_bw() + theme(legend.position = "none")
```