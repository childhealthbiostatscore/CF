---
title: "Body Image and Trikafta"
author: "Tim Vigers"
date: "today"
date-format: long
format:
  html:
    toc: true
    toc-depth: 5
    toc-float: true
    code-fold: true
    self-contained: true
    fig-cap-location: top
    page-layout: full
execute:
  echo: false
editor: source
---

# Data Cleaning Steps

1.  Participants who answered "I don't know" or "no" on the variable `TakingTrikafta` were excluded from these analyses.

```{r warning=FALSE}
#| include: false
library(tidyverse)
library(gtsummary)
library(kableExtra)
library(foreign)
library(plotly)
library(broom)
library(report)
library(sjPlot)
library(ggstats)
home_dir <- switch(Sys.info()["sysname"],
  "Darwin" = "/Users/timvigers/Library/CloudStorage/OneDrive-TheUniversityofColoradoDenver/Vigers/CF",
  "Windows" = "C:/Users/Tim/OneDrive - The University of Colorado Denver/Vigers/CF",
  "Linux" = "/home/timvigers/OneDrive/Vigers/CF"
)
knitr::opts_knit$set(root.dir = home_dir)
```

```{r}
#| warning: false
# Read in data
df <- read.spss("./Emily Muther/General - Muther Research Group/BodyImage_Trikafta/Data/TrikaftaBodyImage3.6.23.sav", to.data.frame = T)
# Filter
df <- df %>%
  filter(TakingTrikafta == "yes")
# Trim white space
df <- df %>%
  mutate(across(where(is.character), trimws))
# Replace blanks with NA
df[df == ""] <- NA
# Categorical variables
df$FRS_Category <- relevel(df$FRS_Category, ref = "neutral")
```

# Descriptive analyses

## Demographics

```{r}
#| label: demographics
df %>%
  select(Age, Gender, Race, Ethnicity) %>%
  tbl_summary(
    by = Gender,
    statistic = list(
      all_continuous() ~ "{mean} ({sd})"
    ),
    missing_text = "(Missing)"
  )
```

## Frequency of reported changes

```{r}
#| label: changes
df %>%
  select(ChangestoBreathing:MoodChangesSideEf, FeelTrikafta) %>%
  tbl_summary(
    type = list(
      all_categorical() ~ "categorical"
    ),
    missing_text = "(Missing)"
  )
```

# Mental health scores by FRS category

## PHQ9

### Odds of an elevated score

Results are reported as odds ratios, with the FRS "neutral" category as the reference group.

```{r}
mod <- glm(PHQ9_elevated ~ FRS_Category, data = df, family = "binomial")
tbl_regression(mod)
```

### Association with FRS category in those with elevated scores.

Results are reported as expected counts, with the FRS "neutral" category as the reference group.

```{r}
mod2 <- glm(PHQ9_Total ~ FRS_Category,
  data = df[df$PHQ9_elevated == "yes", ],
  family = "poisson"
)
tbl_regression(mod2)
```

## GAD7

### Odds of an elevated score

Results are reported as odds ratios, with the FRS "neutral" category as the reference group.

```{r}
mod3 <- glm(GAD7_elevated ~ FRS_Category, data = df, family = "binomial")
tbl_regression(mod3)
```

### Association with FRS category in those with elevated scores.

Results are reported as expected counts, with the FRS "neutral" category as the reference group.

```{r}
mod4 <- glm(GAD7_Total ~ FRS_Category, data = df[df$GAD7_elevated == "yes", ], family = "poisson")
tbl_regression(mod4)
```

# Mental health scores by BES

## PHQ9

### BE_APPEARANCE_MEAN

#### Odds of an elevated score

Results are reported as odds ratios for a one-unit change in the predictor.

```{r}
mod5 <- glm(PHQ9_elevated ~ BE_APPEARANCE_MEAN, data = df, family = "binomial")
tbl_regression(mod5)
```

#### Association with BE_APPEARANCE_MEAN in those with elevated scores.

Results are reported as expected counts, with the FRS "neutral" category as the reference group.

```{r}
mod6 <- glm(PHQ9_Total ~ BE_APPEARANCE_MEAN,
  data = df[df$PHQ9_elevated == "yes", ],
  family = "poisson"
)
tbl_regression(mod6)
```

### BE_ATTRIBUTION_MEAN

#### Odds of an elevated score

Results are reported as odds ratios for a one-unit change in the predictor.

```{r}
mod7 <- glm(PHQ9_elevated ~ BE_ATTRIBUTION_MEAN, data = df, family = "binomial")
tbl_regression(mod7)
```

#### Association with BE_ATTRIBUTION_MEAN in those with elevated scores.

Results are reported as expected counts, with the FRS "neutral" category as the reference group.

```{r}
mod8 <- glm(PHQ9_Total ~ BE_ATTRIBUTION_MEAN,
  data = df[df$PHQ9_elevated == "yes", ],
  family = "poisson"
)
tbl_regression(mod8)
```

### BE_WEIGHT_MEAN

#### Odds of an elevated score

Results are reported as odds ratios for a one-unit change in the predictor.

```{r}
mod9 <- glm(PHQ9_elevated ~ BE_WEIGHT_MEAN, data = df, family = "binomial")
tbl_regression(mod9)
```

#### Association with BE_WEIGHT_MEAN in those with elevated scores.

Results are reported as expected counts, with the FRS "neutral" category as the reference group.

```{r}
mod10 <- glm(PHQ9_Total ~ BE_WEIGHT_MEAN,
  data = df[df$PHQ9_elevated == "yes", ],
  family = "poisson"
)
tbl_regression(mod10)
```

### Forest plot of logistic regression results

## GAD7

### BE_APPEARANCE_MEAN

#### Odds of an elevated score

Results are reported as odds ratios for a one-unit change in the predictor.

```{r}
mod11 <- glm(GAD7_elevated ~ BE_APPEARANCE_MEAN, data = df, family = "binomial")
tbl_regression(mod11)
```

#### Association with BE_APPEARANCE_MEAN in those with elevated scores.

Results are reported as expected counts, with the FRS "neutral" category as the reference group.

```{r}
mod12 <- glm(GAD7_Total ~ BE_APPEARANCE_MEAN, data = df[df$GAD7_elevated == "yes", ], family = "poisson")
tbl_regression(mod12)
```

### BE_ATTRIBUTION_MEAN

#### Odds of an elevated score

Results are reported as odds ratios for a one-unit change in the predictor.

```{r}
mod13 <- glm(GAD7_elevated ~ BE_ATTRIBUTION_MEAN, data = df, family = "binomial")
tbl_regression(mod13)
```

#### Association with BE_ATTRIBUTION_MEAN in those with elevated scores.

Results are reported as expected counts, with the FRS "neutral" category as the reference group.

```{r}
mod14 <- glm(GAD7_Total ~ BE_ATTRIBUTION_MEAN,
  data = df[df$GAD7_elevated == "yes", ],
  family = "poisson"
)
tbl_regression(mod14)
```

### BE_WEIGHT_MEAN

#### Odds of an elevated score

Results are reported as odds ratios for a one-unit change in the predictor.

```{r}
mod15 <- glm(GAD7_elevated ~ BE_WEIGHT_MEAN, data = df, family = "binomial")
tbl_regression(mod15)
```

#### Association with BE_WEIGHT_MEAN in those with elevated scores.

Results are reported as expected counts, with the FRS "neutral" category as the reference group.

```{r}
mod16 <- glm(GAD7_Total ~ BE_WEIGHT_MEAN,
  data = df[df$GAD7_elevated == "yes", ],
  family = "poisson"
)
tbl_regression(mod16)
```

### Forest plot of logistic regression results

```{r}
ggcoef_compare(list("PHQ9" = mod,
  "PHQ9" = mod5, "PHQ9" = mod7, "PHQ9" = mod9,"GAD7" = mod3,
  "GAD7" = mod11, "GAD7" = mod13, "GAD7" = mod15
), exponentiate = T)
```
