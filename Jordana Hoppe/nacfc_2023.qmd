---
title: "Remote Collection of Respiratory Samples (NACFC 2023)"
author: "Tim Vigers"
date: "today"
date-format: long
format:
  html:
    toc: true
    toc-depth: 5
    toc-float: true
    code-fold: true
    self-contained: true
    fig-cap-location: top
    page-layout: full
editor: source
---

```{r}
#| include: false
library(pander)
library(tidyverse)
library(caret)
library(irr)
library(gtsummary)
df <- read.csv("/Users/timvigers/Documents/Work/Vigers/CF/Jordana Hoppe/Home Collection/Data_Clean/clinical_2023-06-20.csv", na.strings = "")
surveys <- read.csv("/Users/timvigers/Documents/Work/Vigers/CF/Jordana Hoppe/Home Collection/Data_Clean/surveys_2023-06-20.csv", na.strings = "")
# Combined genotype
df$Mutation.1[df$Mutation.1 != "F508del"] <- "Other"
df$Mutation.2[df$Mutation.2 != "F508del"] <- "Other"
df$Genotype <- paste(df$Mutation.1, df$Mutation.2, sep = "/")
# Age
df$Age <- difftime(df$Date.of.clinic.culture.collection, df$Patient.DOB) / 365.25
# Combine race columns
df <- df %>%
  rowwise() %>%
  mutate(
    Race = paste(
      which(c_across(Race..choice.American.Indian.or.Alaska.Native.:
      Race..choice.Unknown.or.not.reported.) == "Checked"),
      collapse = "+"
    ),
    Race = factor(Race, levels = c("1", "5"), labels = c("American Indian or Alaska Native", "White"))
  )
# Shorten organism names
bugs <- colnames(df)[grep("If.culture.was.positive..select.all.organisms.isolated...choice.", colnames(df))]
bugs <- sub("If.culture.was.positive..select.all.organisms.isolated...choice.", "", bugs)
bugs <- bugs[1:16]
colnames(df) <- sub("If.culture.was.positive..select.all.organisms.isolated...choice.", "", colnames(df))
bug_names <- c(
  "Methicillin sensitive Staph aureus",
  "Methicillin resistant Staph aureus", "A. xylosoxidans",
  "Achromobacter (not xylosoxidans)", "Acinetobacter", "H. influenzae",
  "P. aeruginosa", "P. aeruginosa (mucoid)",
  "Pseudomonas species (not aeruginosa)", "B. cepacia complex",
  "Stenotrophomonas", "Aspergillus", "Penicillium species",
  "Sceosporium species", "M. avium complex", "M. abscessus"
)
```

```{r}
#| label: tbl-1
#| tbl-cap: Participant Characteristics
df %>%
  select(
    Age, FEV1...predicted, FVC...predicted,
    Sex, Race, Hispanic.or.Latinx, Rural.location.
  ) %>%
  tbl_summary(
    label = list(
      Age ~ "Age at clinic culture collection",
      FEV1...predicted ~ "ppFEV", FVC...predicted ~ "ppFVC",
      Hispanic.or.Latinx ~ "Hispanic or Latinx",
      Rural.location. ~ "Rural location?"
    ),
    statistic = list(
      all_continuous() ~ "{mean} ({sd})"
    )
  )
```

### Agreement between all 3 methods

Fleiss' kappa is interpreted analagously to Cohen's kappa, but applies to more than two tests. Tables with NaN and NAs indicate that all tests had the same values (i.e. all absent or all present).

| Cohen's Kappa | Interpretation         |
|---------------|------------------------|
| 0             | No agreement           |
| 0.10 - 0.20   | Slight agreement       |
| 0.21 - 0.40   | Fair agreement         |
| 0.41 - 0.60   | Moderate agreement     |
| 0.61 - 0.80   | Substantial agreement  |
| 0.81 - 0.99   | Near perfect agreement |
| 1             | Perfect agreement      |

```{r}
fleiss <- function(bug) {
  d <- df[, c(bug, paste0(bug, ".1"), paste0(bug, ".2"))]
  colnames(d) <- c("Clinic", "Delayed", "Home")
  d[d == "Checked"] <- "Present"
  d[d == "Unchecked"] <- "Absent"
  fk <- kappam.fleiss(d)
  cat("\n")
  cat("##", bug_names[which(bugs == bug)])
  cat("\n")
  print(ftable(d))
  cat("\n")
  cat("Overall Fleiss' kappa for the three tests was", round(fk$value, 3), paste0("(p = ", format.pval(fk$p.value, digits = 3, eps = 0.001), ")"))
  cat("\n")
}
```

```{r}
fleiss(bug = "Methicillin.sensitive.Staph.aureus.")
```

```{r}
fleiss(bug = "Methicillin.resistant.Staph.aureus.")
```

```{r}
fleiss("A..xylosoxidans.")
```

```{r}
fleiss("Achromobacter.not.xylosoxidans.")
```

```{r}
fleiss("Acinetobacter.")
```

```{r}
fleiss("H..influenzae.")
```

```{r}
fleiss("P..aeruginosa.")
```

```{r}
fleiss("P..aeruginosa..mucoid..")
```

```{r}
fleiss("Pseudomonas.species..not.aeruginosa.")
```

```{r}
fleiss("B..cepacia.complex.")
```

```{r}
fleiss("Stenotrophomonas.")
```

```{r}
fleiss("Aspergillus.")
```

```{r}
fleiss("Penicillium.species.")
```

```{r}
fleiss("Sceosporium.species.")
```

```{r}
fleiss("M..avium.complex.")
```

```{r}
fleiss("M..abscessus.")
```

### Figure

```{r message=FALSE}
f <- df %>%
  select(Subject.ID, contains("Methicillin.sensitive"), contains("H..influenzae."))
colnames(f) <- c(
  "ID", paste("MSSA", c("Clinic", "Delayed", "Home")),
  paste("H. influenzae", c("Clinic", "Delayed", "Home"))
)

counts <- f %>%
  pivot_longer(`MSSA Clinic`:`H. influenzae Home`,
    names_to = c("Bug", "Test"),
    names_pattern = "(.*) (.*)"
  ) %>%
  filter(value == "Checked") %>%
  group_by(Bug, ID) %>%
  summarise(Test = paste0(Test, collapse = "+")) %>%
  count(Test) %>%
  mutate(prop = prop.table(n))

ggplot(counts, aes(x = Bug, y = n, fill = Test, label = n)) +
  geom_col(colour = "black", position = "fill") +
  geom_text(aes(label = n), position = position_fill(vjust = 0.5),size=5) +
  scale_y_continuous(labels = scales::percent) +
  scale_fill_brewer(palette = "Pastel1") +
  xlab("Pathogen") +
  ylab("% of Samples") +
  theme_bw() +
  theme(text = element_text(size = 20))
```

# No pathogens detected 

Among those with no pathogens detected in clinic (n = 14), 6 had pathogens detected in delayed samples, and 3 had pathogens detected at home.

```{r results='asis'}
# For those who tested negative for any bugs in clinic, did they also test
# negative for all at home
f <- df %>%
  select(Subject.ID, contains(bugs)) %>%
  mutate(across(
    -Subject.ID,
    ~ as.numeric(factor(.x, levels = c("Unchecked", "Checked"))) - 1
  )) %>%
  rowwise() %>%
  mutate(
    `Clinic % Positive` = mean(c_across(all_of(bugs))) * 100,
    `Delayed % Positive` = mean(c_across(all_of(paste0(bugs, ".1")))) * 100,
    `Home % Positive` = mean(c_across(all_of(paste0(bugs, ".2")))) * 100
  ) %>%
  select(Subject.ID, `Clinic % Positive`:`Home % Positive`) %>%
  filter(`Clinic % Positive` == 0)
knitr::kable(f)
```

```{r}
f <- f %>%
  mutate(across(c("Clinic % Positive", "Delayed % Positive", "Home % Positive"), ~ .x == 0))
kappam.fleiss(f[, 2:4])
```
