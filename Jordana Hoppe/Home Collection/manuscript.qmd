---
title: "Remote Collection of Respiratory Samples"
author: "Tim Vigers"
date: "today"
date-format: long
format:
  html:
    toc: true
    toc-depth: 5
    toc-float: true
    code-fold: true
    self-contained: true
    fig-cap-location: top
    page-layout: full
    theme:
      light: flatly
      dark: darkly
bibliography: /Users/timvigers/Library/CloudStorage/OneDrive-TheUniversityofColoradoDenver/Miscellaneous/zotero.bib
csl: /Users/timvigers/Library/CloudStorage/OneDrive-TheUniversityofColoradoDenver/Miscellaneous/american-medical-association.csl
editor: source
---

```{r libraries}
#| include: false
library(tidyverse)
library(lubridate)
library(gtsummary)
library(irr)
library(eulerr)
library(kableExtra)
library(caret)
library(likert)
switch(Sys.info()[["sysname"]],
  Windows = {
    home_dir <- "C:/Users/Tim/OneDrive - The University of Colorado Denver/Vigers/CF"
  },
  Darwin = {
    home_dir <- "/Users/timvigers/Library/CloudStorage/OneDrive-TheUniversityofColoradoDenver/Vigers/CF"
  }
)
knitr::opts_knit$set(root.dir = home_dir)
```

```{r data cleaning, include=FALSE}
# Use REDCap import
source("/Users/timvigers/GitHub/CF/Jordana Hoppe/Home Collection/home_collection_data.r")
source("/Users/timvigers/GitHub/CF/Jordana Hoppe/Home Collection/home_collection_surveys.r")
# Exclude missing subjects
data_exclude <- c("009-07", "009-17", "009-25", "009-37")
survey_exclude <- c(15, 27, 30, 34, 47)
# Fix missing labels
labels <- label(data)[which(label(data) != "")]
labels[paste0(names(labels), ".factor")] <- as.character(labels)
survey_labels <- label(survey_data)[which(label(survey_data) != "")]
survey_labels[paste0(names(survey_labels), ".factor")] <- as.character(survey_labels)
labels <- c(labels, survey_labels)
# Combine race columns
races <- c(
  "American Indian or Alaska Native", "Asian", "Black or African-American",
  "Native Hawaiian or Other Pacific Islander", "White", "More than one race",
  "Unknown or not reported"
)
data$race <- apply(data, 1, function(r) {
  w <- which(r[paste0("race___", 1:7)] == 1)
  paste0(races[w], collapse = "/")
})
# Age
data$age <- round(as.numeric(ymd(data$clinic_date) - ymd(data$pt_dob)) / 365.25, 1)
# Find tests with no growth
data$clinic_cx_no_growth.factor <- apply(data, 1, function(r) {
  sum(as.numeric(r[grep("clinic_cx_results___\\d$", names(r))]), na.rm = T)
})
data$clinic_cx_no_growth.factor <- factor(data$clinic_cx_no_growth.factor,
  levels = 0:2,
  labels = c("No Growth", "Some Growth", "Some Growth")
)
data$res_cx_no_growth.factor <- apply(data, 1, function(r) {
  sum(as.numeric(r[grep("res_cx_results___\\d$", names(r))]), na.rm = T)
})
data$res_cx_no_growth.factor <- factor(data$res_cx_no_growth.factor,
  levels = 0:2,
  labels = c("No Growth", "Some Growth", "Some Growth")
)
data$home_cx_no_growth.factor <- apply(data, 1, function(r) {
  sum(as.numeric(r[grep("home_cx_results___\\d$", names(r))]), na.rm = T)
})
data$home_cx_no_growth.factor <- factor(data$home_cx_no_growth.factor,
  levels = 0:2,
  labels = c("No Growth", "Some Growth", "Some Growth")
)
# Additional labels for tables
labels["race"] <- "Race"
labels["age"] <- "Age at Clinic Visit"
# Genotype format
data$Genotype <- paste0(
  data$mutation1.factor == "F508del", "/", data$mutation2.factor == "F508del"
)
data$Genotype <- factor(data$Genotype,
  levels = c("TRUE/TRUE", "TRUE/FALSE", "FALSE/FALSE"),
  labels = c("F508del/F508del", "F508del/Other", "Other/Other")
)
```

# Summary Tables

## Table 1: Participant Characteristics

```{r}
#| label: tbl-1
#| tbl-cap: Participant Characteristics
data %>%
  select(
    age, pt_sex.factor, race, ethnicity.factor, mutation1.factor,
    mutation2.factor, Genotype, rural_location.factor, fev1_pp, fvc_pp
  ) %>%
  mutate(
    mutation1.factor = droplevels(mutation1.factor),
    mutation2.factor = droplevels(mutation2.factor)
  ) %>%
  tbl_summary(
    label = labels, missing_text = "Missing",
    statistic = list(all_continuous() ~ "{mean} ({sd})")
  ) %>%
  as_kable_extra()
```

It appears that the two participants who were previously marked as unknown race are now considered more than one race.

## Table 2: Survey Results

```{r}
#| label: tbl-2
#| tbl-cap: Survey Results
survey_data %>%
  filter(!participant_id %in% survey_exclude) %>%
  select(q1.factor:q6b___4.factor) %>%
  tbl_summary(
    label = labels, missing_text = "Missing"
  ) %>%
  as_kable_extra()
```

## Table 3: Clinic Culture Results

```{r}
#| label: tbl-3
#| tbl-cap: Clinic Culture Results
data %>%
  filter(!subject_id %in% data_exclude) %>%
  select(clinic_cx_source.factor:clinic_burk_sp.factor) %>%
  tbl_summary(
    label = labels, missing_text = "Missing"
  ) %>%
  as_kable_extra()
```

## Table 4: Delayed Culture Results

```{r}
#| label: tbl-4
#| tbl-cap: Delayed Culture Results
data %>%
  filter(!subject_id %in% data_exclude) %>%
  select(research_cx.factor:res_burk_sp.factor) %>%
  tbl_summary(
    label = labels, missing_text = "Missing"
  ) %>%
  as_kable_extra()
```

## Table 5: Home Culture Results

```{r}
#| label: tbl-5
#| tbl-cap: Home Culture Results
data %>%
  filter(!subject_id %in% data_exclude) %>%
  select(home_cx.factor:home_burk_sp.factor) %>%
  tbl_summary(
    label = labels, missing_text = "Missing"
  ) %>%
  as_kable_extra()
```

For Yes/No variables in @tbl-2 through @tbl-5, the percentage of "Yes" answers is shown.

# Agreement

Fleiss' kappa is interpreted analagously to Cohen's kappa, but applies to more than two tests. Tables with NaN and NAs indicate that all tests had the same values (i.e. all absent or all present).

| Cohen's Kappa | Interpretation         |
|---------------|------------------------|
| 0             | No agreement           |
| 0.10 - 0.20   | Slight agreement       |
| 0.21 - 0.40   | Fair agreement         |
| 0.41 - 0.60   | Moderate agreement     |
| 0.61 - 0.80   | Substantial agreement  |
| 0.81 - 0.99   | Near perfect agreement |
| 1             | Perfect agreement      |

```{r}
agreement <- function(result_pattern, df = data) {
  cols <- paste0(
    c("clinic_cx_", "res_cx_", "home_cx_"),
    paste0(result_pattern, ".factor")
  )
  d <- df[, cols]
  colnames(d) <- c("Clinic", "Delayed", "Home")
  d <- d %>%
    mutate(across(everything(), ~ as.character(.)))
  d[d == "NA"] <- NA
  d[d == "Unchecked"] <- "Absent"
  d[d == "Checked"] <- "Present"
  fk <- kappam.fleiss(d)
  cat("\n")
  cat("### Agreement between all three methods")
  cat("\n")
  cat("\n")
  cat("#### Fleiss' kappa")
  cat("\n")
  cat("\n")
  f <- ftable(d)
  f %>%
    as.data.frame(.) %>%
    kable(.) %>%
    kable_styling(., "striped") %>%
    print(.)
  cat("\n")
  cat("\n")
  cat(
    "Overall Fleiss' kappa for the three tests was", round(fk$value, 3),
    paste0("(p = ", format.pval(fk$p.value, digits = 3, eps = 0.001), ")")
  )
  cat("\n")
  cat("\n")
  cat("#### Euler diagram")
  cat("\n")
  d %>%
    mutate(across(everything(), ~ as.numeric(. == "Present" | . == "No Growth"))) %>%
    drop_na(.) %>%
    euler(.) %>%
    plot(., quantities = T) %>%
    print(.)
  cat("\n")
  cat("\n")
  cat("### Pairwise agreement")
  cat("\n")
  d <- data.frame(lapply(d, factor, levels = c("Absent", "Present")))
  cat("\n")
  cat("#### Clinic vs. delayed (clinic as reference)")
  cat("\n")
  cat("\n")
  cat("##### Confusion matrix")
  cat("\n")
  cat("\n")
  c <- confusionMatrix((d[, "Delayed"]),
    reference = d[, "Clinic"], positive = "Present", mode = "everything"
  )
  print(kable(c$table, digits = 3))
  cat("\n")
  cat("\n")
  cat("##### Agreement")
  cat("\n")
  cat("\n")
  print(kable(c$overall, digits = 3, col.names = NULL))
  cat("\n")
  cat("\n")
  cat("##### Sensitivity, specificity, etc.")
  cat("\n")
  cat("\n")
  print(kable(c$byClass, digits = 3, col.names = NULL))
  cat("\n")
  cat("\n")
  cat("#### Clinic vs. home (clinic as reference)")
  cat("\n")
  cat("\n")
  cat("##### Confusion matrix")
  cat("\n")
  cat("\n")
  c <- confusionMatrix((d[, "Home"]),
    reference = d[, "Clinic"], positive = "Present", mode = "everything"
  )
  print(kable(c$table, digits = 3))
  cat("\n")
  cat("\n")
  cat("##### Agreement")
  cat("\n")
  cat("\n")
  print(kable(c$overall, digits = 3, col.names = NULL))
  cat("\n")
  cat("\n")
  cat("##### Sensitivity, specificity, etc.")
  cat("\n")
  cat("\n")
  print(kable(c$byClass, digits = 3, col.names = NULL))
  cat("\n")
  cat("\n")
  cat("#### Home vs. delayed (delayed as reference)")
  cat("\n")
  cat("\n")
  cat("##### Confusion matrix")
  cat("\n")
  cat("\n")
  c <- confusionMatrix((d[, "Home"]),
    reference = d[, "Delayed"], positive = "Present", mode = "everything"
  )
  print(kable(c$table, digits = 3))
  cat("\n")
  cat("\n")
  cat("##### Agreement")
  cat("\n")
  cat("\n")
  print(kable(c$overall, digits = 3, col.names = NULL))
  cat("\n")
  cat("\n")
  cat("##### Sensitivity, specificity, etc.")
  cat("\n")
  cat("\n")
  print(kable(c$byClass, digits = 3, col.names = NULL))
  cat("\n")
  cat("\n")
}
```

## MSSA

```{r results='asis'}
agreement("results___1")
```

## MRSA

```{r results='asis'}
agreement("results___2")
```

## A. xylosoxidans

```{r results='asis'}
agreement("results___16")
```

## Achromobacter (not xylosoxidans)

```{r results='asis'}
agreement("results___17")
```

## Acinetobacter

```{r results='asis'}
agreement("results___10")
```

## H. influenzae

```{r results='asis'}
agreement("results___3")
```

## P. aeruginosa

```{r results='asis'}
agreement("results___4")
```

## P. aeruginosa (mucoid)

```{r results='asis'}
agreement("results___5")
```

## Pseudomonas species (not aeruginosa)

```{r results='asis'}
agreement("results___6")
```

## B. cepacia complex

```{r results='asis'}
agreement("results___7")
```

## Stenotrophomonas

```{r results='asis'}
agreement("results___8")
```

## Aspergillus

```{r results='asis'}
agreement("results___9")
```

## Penicillium species

```{r results='asis'}
agreement("results___12")
```

## Sceosporium species 

```{r results='asis'}
agreement("results___13")
```

## M. avium complex

```{r results='asis'}
agreement("results___14")
```

## M. abscessus

```{r results='asis'}
agreement("results___15")
```

## No growth

```{r results='asis'}
agreement("no_growth")
```

# Survey results

```{r}
# List columns by number of possible answers
levels3 <- "q2.factor"
levels5 <- c("difficulty.factor", "shipping.factor")
checkboxes <- c(
  paste0("barriers___", 1:4, ".factor"),
  paste0("q6a___", 1:5, ".factor"),
  paste0("q6b___", 1:4, ".factor")
)
yn <- c(
  "q1.factor", "q3.factor", "previous.factor", "goodsample.factor", "q4.factor",
  "q5.factor", "q6.factor"
)
# Subset and label
t <- survey_data %>%
  filter(!participant_id %in% survey_exclude) %>%
  select(participant_id, q1.factor:q6b___4.factor)
labels <- as.character(label(survey_data)[sub("\\.factor", "", colnames(t))])
names(labels) <- colnames(t)
```

## Plots

```{r}
yn_df <- t %>%
  select(all_of(yn)) %>%
  rename(any_of(setNames(names(labels), labels)))
yn_df <- data.frame(lapply(yn_df, factor, levels = c("No", "Yes")), check.names = F)
plot(likert(yn_df))
```

```{r}
check_df <- t %>%
  select(all_of(checkboxes)) %>%
  rename(any_of(setNames(names(labels), labels)))
plot(likert(check_df))
```

```{r}
df3 <- t %>%
  select(all_of(levels3)) %>%
  rename(any_of(setNames(names(labels), labels)))
plot(likert(df3))
```

```{r}
df5 <- t %>%
  select(all_of(levels5)) %>%
  rename(any_of(setNames(names(labels), labels)))
plot(likert(df5))
```
