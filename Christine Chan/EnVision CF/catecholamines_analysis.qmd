---
title: "Catecholamines and Hypoglycemia"
author: "Tim Vigers"
date: "today"
date-format: long
format:
  html:
    toc: true
    toc-depth: 5
    toc-float: true
    code-fold: true
    self-contained: true
    fig-cap-location: top
    page-layout: full
    theme:
      light: flatly
      dark: darkly
editor: source
---

```{r setup}
#| include: false
library(tidyverse)
library(gt)
library(gtsummary)
library(lmerTest)
library(emmeans)
home_dir <- switch(Sys.info()["sysname"],
  "Darwin" = "/Users/timvigers/Library/CloudStorage/OneDrive-TheUniversityofColoradoDenver/Vigers/CF",
  "Windows" = "C:/Users/Tim/OneDrive - The University of Colorado Denver/Vigers/CF",
  "Linux" = "/home/tim/OneDrive/Vigers/CF"
)
knitr::opts_knit$set(root.dir = home_dir)
```

# Data cleaning

- BMI percentiles were calculated using the `childsds` R package, assuming that male = 1 and female = 2 for the `Sex` variable. Those with age > 20 were considered age = 20 for the purposes of percentile calculations.

- Epinephrine, norepinephrine, and insulin were log transformed for modeling purposes.

```{r data cleaning}
# Import cleaned data
df <- read.csv("./Christine Chan/EnVision CF/Data_Clean/analysis_dataset.csv",
  na.strings = ""
)
# Timepoint and variables lists
timepoints <- c(0, 10, 30, 60, 90, 120, 150, 180)
limited_timepoints <- c(0, 120, 150, 180)
glucoses <- paste0("Glucose_", timepoints)
insulins <- paste0("Insulin_", timepoints)
epinephrines <- paste0("Epinephrine_", timepoints)
norepinephrines <- paste0("Norepinephrine_", timepoints)
# For this analysis, we only want those with catecholamines measured
df$catecholamines <- apply(
  df[, c(epinephrines, norepinephrines)], 1,
  function(r) {
    any(!is.na(r))
  }
)
df <- df %>% filter(catecholamines)
# Make a long dataset for mixed models
lmm_df <- df %>%
  select(
    study_id, Hypo60, Hypo70,
    all_of(c(glucoses, insulins, epinephrines, norepinephrines))
  ) %>%
  pivot_longer(all_of(c(glucoses, insulins, epinephrines, norepinephrines)),
    names_to = c(".value", "Timepoint"),
    names_pattern = "(.*)_(.*)"
  )
```

# Demographics at first visit

```{r}
#| label: tbl-1
#| tbl-cap: Participant characteristics (overall)
df %>%
  select(
    redcap_data_access_group, age_visit:ethnicity, cftr_mutation_1,
    cftr_mutation_2
  ) %>%
  tbl_summary(by = redcap_data_access_group, missing_text = "Missing") %>%
  add_overall()
```

# Hypoglycemia defined as < 70 mg/dL at any point

## Demographics

IA0005, IA0006, IA0017, IA0042, and IA0079 had catecholamines measured at multiple timepoints but these are treated as independent in the table below.

```{r}
#| label: tbl-70
#| tbl-cap: BG < 70 at Any Point
#| warning: false
df %>%
  select(
    Hypo70, age_visit:cftr_mutation_2, hypoglycemia_symptoms_yesno,
    all_of(paste0("Glucose_", timepoints)),
    all_of(paste0("Insulin_", timepoints)),
    all_of(paste0("Epinephrine_", limited_timepoints)),
    all_of(paste0("Norepinephrine_", limited_timepoints))
  ) %>%
  tbl_summary(by = Hypo70, missing_text = "Missing") %>%
  add_overall() %>%
  add_p() %>%
  separate_p_footnotes()
```

## Glucose

Glucose was modeled using a linear mixed effect model with random intercept for participant and time treated as a categorical variable.

```{r}
#| warning: false
# Fit
mod <- lmer(Glucose ~ Timepoint * Hypo70 + (1 | study_id),
  data = lmm_df
)
mod %>% tbl_regression(intercept = T)
means <- data.frame(emmeans(mod, c("Timepoint", "Hypo70"), type = "response"))
colnames(means) <- c(
  "Timepoint", "Hypo70", "Mean", "SE", "df", "CI Lower Limit", "CI Upper Limit"
)
means %>%
  gt(caption = "LS Means") %>%
  fmt_number(decimals = 2)
# Plot
ggplot(means, aes(
  x = as.numeric(as.character(Timepoint)), y = Mean, colour = Hypo70,
  group = Hypo70
)) +
  geom_point() +
  geom_errorbar(aes(ymin = `CI Lower Limit`, ymax = `CI Upper Limit`),
    width = 3
  ) +
  geom_line() +
  scale_x_continuous(breaks = timepoints) +
  ylab("LS Mean Glucose") +
  xlab("Timepoint") +
  theme_bw() +
  theme(legend.title = element_blank())
```

## Insulin

Insulin was modeled using a linear mixed effect model with random intercept for participant and time treated as a categorical variable.

```{r}
#| warning: false
# Fit
mod <- lmer(log(Insulin) ~ Timepoint * Hypo70 + (1 | study_id),
  data = lmm_df
)
mod %>% tbl_regression(intercept = T, exponentiate = T)
means <- data.frame(emmeans(mod, c("Timepoint", "Hypo70"), type = "response"))
colnames(means) <- c(
  "Timepoint", "Hypo70", "Mean", "SE", "df", "CI Lower Limit", "CI Upper Limit"
)
means %>%
  gt(caption = "LS Means") %>%
  fmt_number(decimals = 2)
# Plot
ggplot(means, aes(
  x = as.numeric(as.character(Timepoint)), y = Mean, colour = Hypo70,
  group = Hypo70
)) +
  geom_point() +
  geom_errorbar(aes(ymin = `CI Lower Limit`, ymax = `CI Upper Limit`),
    width = 3
  ) +
  geom_line() +
  scale_x_continuous(breaks = timepoints) +
  ylab("LS Mean Insulin") +
  xlab("Timepoint") +
  theme_bw() +
  theme(legend.title = element_blank())
```

## Epinephrine

Epinephrine was modeled using a linear mixed effect model with random intercept for participant and time treated as a categorical variable. Plot error bars indicate 95% confidence intervals around the least square mean.

```{r}
#| warning: false
# Fit
mod <- lmer(log(Epinephrine) ~ Timepoint * Hypo70 + (1 | study_id),
  data = lmm_df
)
mod %>% tbl_regression(intercept = T, exponentiate = T)
means <- data.frame(emmeans(mod, c("Timepoint", "Hypo70"), type = "response"))
colnames(means) <- c(
  "Timepoint", "Hypo70", "Mean", "SE", "df", "CI Lower Limit", "CI Upper Limit"
)
means %>%
  gt(caption = "LS Means") %>%
  fmt_number(decimals = 2)
# Plot
ggplot(means, aes(
  x = as.numeric(as.character(Timepoint)), y = Mean, colour = Hypo70,
  group = Hypo70
)) +
  geom_point() +
  geom_errorbar(aes(ymin = `CI Lower Limit`, ymax = `CI Upper Limit`),
    width = 3
  ) +
  geom_line() +
  scale_x_continuous(breaks = limited_timepoints) +
  ylab("LS Mean Epinephrine") +
  xlab("Timepoint") +
  theme_bw() +
  theme(legend.title = element_blank())
```

## Norepinephrine

Norepinephrine was modeled using a linear mixed effect model with random intercept for participant and time treated as a categorical variable. Plot error bars indicate 95% confidence intervals around the least square mean.

```{r}
#| warning: false
# Fit
mod <- lmer(log(Norepinephrine) ~ Timepoint * Hypo70 + (1 | study_id),
  data = lmm_df
)
mod %>% tbl_regression(intercept = T, exponentiate = T)
means <- data.frame(emmeans(mod, c("Timepoint", "Hypo70"), type = "response"))
colnames(means) <- c(
  "Timepoint", "Hypo70", "Mean", "SE", "df", "CI Lower Limit", "CI Upper Limit"
)
means %>%
  gt(caption = "LS Means") %>%
  fmt_number(decimals = 2)
# Plot
ggplot(means, aes(
  x = as.numeric(as.character(Timepoint)), y = Mean, colour = Hypo70,
  group = Hypo70
)) +
  geom_point() +
  geom_errorbar(aes(ymin = `CI Lower Limit`, ymax = `CI Upper Limit`),
    width = 3
  ) +
  geom_line() +
  scale_x_continuous(breaks = limited_timepoints) +
  ylab("LS Mean Norepinephrine") +
  xlab("Timepoint") +
  theme_bw() +
  theme(legend.title = element_blank())
```

# Hypoglycemia defined as < 60 mg/dL at any point

## Demographics

IA0005, IA0006, IA0017, IA0042, and IA0079 had catecholamines measured at multiple timepoints but these are treated as independent in the table below.

```{r}
#| label: tbl-60
#| tbl-cap: BG < 60 at Any Point
#| warning: false
df %>%
  select(
    Hypo60, age_visit:cftr_mutation_2, hypoglycemia_symptoms_yesno,
    all_of(paste0("Glucose_", timepoints)),
    all_of(paste0("Insulin_", timepoints)),
    all_of(paste0("Epinephrine_", limited_timepoints)),
    all_of(paste0("Norepinephrine_", limited_timepoints))
  ) %>%
  tbl_summary(by = Hypo60, missing_text = "Missing") %>%
  add_overall() %>%
  add_p() %>%
  separate_p_footnotes()
```

## Glucose

Glucose was modeled using a linear mixed effect model with random intercept for participant and time treated as a categorical variable.

```{r}
#| warning: false
# Fit
mod <- lmer(Glucose ~ Timepoint * Hypo60 + (1 | study_id),
  data = lmm_df
)
mod %>% tbl_regression(intercept = T)
means <- data.frame(emmeans(mod, c("Timepoint", "Hypo60"), type = "response"))
colnames(means) <- c(
  "Timepoint", "Hypo60", "Mean", "SE", "df", "CI Lower Limit", "CI Upper Limit"
)
means %>%
  gt(caption = "LS Means") %>%
  fmt_number(decimals = 2)
# Plot
ggplot(means, aes(
  x = as.numeric(as.character(Timepoint)), y = Mean, colour = Hypo60,
  group = Hypo60
)) +
  geom_point() +
  geom_errorbar(aes(ymin = `CI Lower Limit`, ymax = `CI Upper Limit`),
    width = 3
  ) +
  geom_line() +
  scale_x_continuous(breaks = timepoints) +
  ylab("LS Mean Glucose") +
  xlab("Timepoint") +
  theme_bw() +
  theme(legend.title = element_blank())
```

## Insulin

Insulin was modeled using a linear mixed effect model with random intercept for participant and time treated as a categorical variable.

```{r}
#| warning: false
# Fit
mod <- lmer(log(Insulin) ~ Timepoint * Hypo60 + (1 | study_id),
  data = lmm_df
)
mod %>% tbl_regression(intercept = T, exponentiate = T)
means <- data.frame(emmeans(mod, c("Timepoint", "Hypo60"), type = "response"))
colnames(means) <- c(
  "Timepoint", "Hypo60", "Mean", "SE", "df", "CI Lower Limit", "CI Upper Limit"
)
means %>%
  gt(caption = "LS Means") %>%
  fmt_number(decimals = 2)
# Plot
ggplot(means, aes(
  x = as.numeric(as.character(Timepoint)), y = Mean, colour = Hypo60,
  group = Hypo60
)) +
  geom_point() +
  geom_errorbar(aes(ymin = `CI Lower Limit`, ymax = `CI Upper Limit`),
    width = 3
  ) +
  geom_line() +
  scale_x_continuous(breaks = timepoints) +
  ylab("LS Mean Insulin") +
  xlab("Timepoint") +
  theme_bw() +
  theme(legend.title = element_blank())
```

## Epinephrine

Epinephrine was modeled using a linear mixed effect model with random intercept for participant and time treated as a categorical variable. Plot error bars indicate 95% confidence intervals around the least square mean.

```{r}
#| warning: false
# Fit
mod <- lmer(log(Epinephrine) ~ Timepoint * Hypo60 + (1 | study_id),
  data = lmm_df
)
mod %>% tbl_regression(intercept = T, exponentiate = T)
means <- data.frame(emmeans(mod, c("Timepoint", "Hypo60"), type = "response"))
colnames(means) <- c(
  "Timepoint", "Hypo60", "Mean", "SE", "df", "CI Lower Limit", "CI Upper Limit"
)
means %>%
  gt(caption = "LS Means") %>%
  fmt_number(decimals = 2)
# Plot
ggplot(means, aes(
  x = as.numeric(as.character(Timepoint)), y = Mean, colour = Hypo60,
  group = Hypo60
)) +
  geom_point() +
  geom_errorbar(aes(ymin = `CI Lower Limit`, ymax = `CI Upper Limit`),
    width = 3
  ) +
  geom_line() +
  scale_x_continuous(breaks = limited_timepoints) +
  ylab("LS Mean Epinephrine") +
  xlab("Timepoint") +
  theme_bw() +
  theme(legend.title = element_blank())
```

## Norepinephrine

Norepinephrine was modeled using a linear mixed effect model with random intercept for participant and time treated as a categorical variable. Plot error bars indicate 95% confidence intervals around the least square mean.

```{r}
#| warning: false
# Fit
mod <- lmer(log(Norepinephrine) ~ Timepoint * Hypo60 + (1 | study_id),
  data = lmm_df
)
mod %>% tbl_regression(intercept = T, exponentiate = T)
means <- data.frame(emmeans(mod, c("Timepoint", "Hypo60"), type = "response"))
colnames(means) <- c(
  "Timepoint", "Hypo60", "Mean", "SE", "df", "CI Lower Limit", "CI Upper Limit"
)
means %>%
  gt(caption = "LS Means") %>%
  fmt_number(decimals = 2)
# Plot
ggplot(means, aes(
  x = as.numeric(as.character(Timepoint)), y = Mean, colour = Hypo60,
  group = Hypo60
)) +
  geom_point() +
  geom_errorbar(aes(ymin = `CI Lower Limit`, ymax = `CI Upper Limit`),
    width = 3
  ) +
  geom_line() +
  scale_x_continuous(breaks = limited_timepoints) +
  ylab("LS Mean Norepinephrine") +
  xlab("Timepoint") +
  theme_bw() +
  theme(legend.title = element_blank())
```
