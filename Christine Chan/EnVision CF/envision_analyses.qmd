---
title: "EnVision CF Analyses"
author: "Tim Vigers"
date: "today"
date-format: long
format:
  html:
    toc: true
    toc-depth: 5
    toc-float: true
    code-fold: true
    self-contained: true
    fig-cap-location: top
    page-layout: full
editor: source
---

```{r setup}
#| include: false
library(Hmisc)
library(tidyverse)
library(arsenal)
library(pROC)
library(gt)
library(patchwork)
library(lmerTest)
library(emmeans)
home_dir <- switch(Sys.info()["sysname"],
  "Darwin" = "/Users/tim/Library/CloudStorage/OneDrive-TheUniversityofColoradoDenver/Vigers/CF",
  "Windows" = "C:/Users/Tim/OneDrive - The University of Colorado Denver/Vigers/CF",
  "Linux" = "/home/tim/OneDrive/Vigers/CF"
)
github_dir <- switch(Sys.info()["sysname"],
  "Darwin" = "/Users/tim/Documents/GitHub",
  "Windows" = "C:/Users/Tim/Documents/GitHub",
  "Linux" = "/home/tim/Documents/GitHub"
)
knitr::opts_knit$set(root.dir = home_dir)
```

```{r data cleaning}
# Set seed for bootstrap
set.seed(1017)
# Import data
# See GitHub/CF/Christine Chan/EnVision CF/clean_envision_data.R
load("/Users/tim/Library/CloudStorage/OneDrive-TheUniversityofColoradoDenver/Vigers/CF/Christine Chan/EnVision CF/Data_Clean/envision_analysis_dataset.RData")
```

# ROC Analyses

```{r}
# Limit to those with CGM data (based on mean glucose) and OGTT diagnosis
df <- final_df %>% filter(!is.na(mean_sensor), !is.na(Diagnosis))
# Convert CV units to match Scully et al.
df$cv <- df$cv * 100
# First CGM and OGTT pair only
df <- df %>%
  group_by(study_id) %>%
  slice_min(Date)
```

For the following analyses, we used ROC curves to assess various CGM metrics' ability to distinguish between CFRD- and CFRD+ people with CF. Because some people had multiple CGM wears and OGTTs, we decided to use each participant's first CGM and OGTT pair. In the cleaned EnVision dataset we have a total of `r nrow(df)` CGMs from `r length(unique(df$study_id))` unique individuals. Of these CGM wears, `r sum(is.na(df$Diagnosis))` were missing a diagnosis due to missing OGTT timepoints. Those without a diagnosis were excluded from all analyses.

## Participant Demographics by CFRD status

```{r results='asis'}
t1 <- tableby(
  CFRD ~ fe(redcap_data_access_group) +
    kwt(age_visit, "Nmiss", "medianq1q3", "range") +
    kwt(height, "Nmiss", "medianq1q3", "range") +
    kwt(weight, "Nmiss", "medianq1q3", "range") + bmi_perc + sex +
    fe(origin_race) + fe(ethnicity) + fe(pancreatic_status) + fe(CFTR) +
    corrector_yes_no + fev1 + fvc + a1c_result,
  data = df
)
summary(t1, pfootnote = T)
```

## Mean Sensor Glucose 

```{r}
r <- roc(CFRD ~ mean_sensor, data = df, quiet = T)
plot(r, print.auc = T, print.thres = T, legacy.axes = T)
ci.auc(r)
# gt(data.frame(ci.coords(r, "best",
#   best.policy = "random",
#   ret = c(c("sensitivity", "specificity", "fp", "tp", "fn", "tn"))
# ))) %>% fmt_number(decimals = 3)
gt(coords(r, "best", ret = "all")) %>% fmt_number(decimals = 3)
```

## Percent Time >140 mg/dL 

```{r}
r <- roc(CFRD ~ percent_time_over_140, data = df, quiet = T)
plot(r, print.auc = T, print.thres = T, legacy.axes = T)
ci.auc(r)
# gt(data.frame(ci.coords(r, "best",
#   best.policy = "random",
#   ret = c(c("sensitivity", "specificity", "fp", "tp", "fn", "tn"))
# ))) %>% fmt_number(decimals = 3)
gt(coords(r, "best", ret = "all")) %>% fmt_number(decimals = 3)
```

## Percent Time >180 mg/dL

```{r}
r <- roc(CFRD ~ percent_time_over_180, data = df, quiet = T)
plot(r, print.auc = T, print.thres = T, legacy.axes = T)
ci.auc(r)
# gt(data.frame(ci.coords(r, "best",
#   best.policy = "random",
#   ret = c(c("sensitivity", "specificity", "fp", "tp", "fn", "tn"))
# ))) %>% fmt_number(decimals = 3)
gt(coords(r, "best", ret = "all")) %>% fmt_number(decimals = 3)
```

## GMI

```{r}
r <- roc(CFRD ~ gmi, data = df, quiet = T)
plot(r, print.auc = T, print.thres = T, legacy.axes = T)
ci.auc(r)
# gt(data.frame(ci.coords(r, "best",
#   best.policy = "random",
#   ret = c(c("sensitivity", "specificity", "fp", "tp", "fn", "tn"))
# ))) %>% fmt_number(decimals = 3)
gt(coords(r, "best", ret = "all")) %>% fmt_number(decimals = 3)
```

## SD

```{r}
r <- roc(CFRD ~ standard_deviation, data = df, quiet = T)
plot(r, print.auc = T, print.thres = T, legacy.axes = T)
ci.auc(r)
# gt(data.frame(ci.coords(r, "best",
#   best.policy = "random",
#   ret = c(c("sensitivity", "specificity", "fp", "tp", "fn", "tn"))
# ))) %>% fmt_number(decimals = 3)
gt(coords(r, "best", ret = "all")) %>% fmt_number(decimals = 3)
```

## CV

```{r}
r <- roc(CFRD ~ cv, data = df, quiet = T)
plot(r, print.auc = T, print.thres = T, legacy.axes = T)
ci.auc(r)
# gt(data.frame(ci.coords(r, "best",
#   best.policy = "random",
#   ret = c(c("sensitivity", "specificity", "fp", "tp", "fn", "tn"))
# ))) %>% fmt_number(decimals = 3)
gt(coords(r, "best", ret = "all")) %>% fmt_number(decimals = 3)
```

## HbA1c

```{r}
r <- roc(CFRD ~ a1c_result, data = df, quiet = T)
plot(r, print.auc = T, print.thres = T, legacy.axes = T)
ci.auc(r)
# gt(data.frame(ci.coords(r, "best",
#   best.policy = "random",
#   ret = c(c("sensitivity", "specificity", "fp", "tp", "fn", "tn"))
# ))) %>% fmt_number(decimals = 3)
gt(coords(r, "best", ret = "all")) %>% fmt_number(decimals = 3)
```

## Pulmonary Function Comparisons by CGM

```{r}
df$scully_ag <- cut(df$mean_sensor, c(-Inf, 112, Inf))
df$our_ag <- cut(df$mean_sensor, c(-Inf, 101, Inf))
df$scully_140 <- cut(df$percent_time_over_140, c(-Inf, 17.5, Inf))
df$our_140 <- cut(df$percent_time_over_140, c(-Inf, 11.3, Inf))
df$scully_180 <- cut(df$percent_time_over_180, c(-Inf, 3.4, Inf))
df$our_180 <- cut(df$percent_time_over_180, c(-Inf, 3.1, Inf))
df$scully_sd <- cut(df$standard_deviation, c(-Inf, 30.8, Inf))
df$our_sd <- cut(df$standard_deviation, c(-Inf, 28.8, Inf))
df$scully_cv <- cut(df$cv, c(-Inf, 30.6, Inf))
df$our_cv <- cut(df$cv, c(-Inf, 27.7, Inf))
```

### Mean glucose

#### Scully et al. cutoff

```{r results='asis'}
tb <- tableby(scully_ag ~ fev1 + fvc, data = df)
summary(tb, pfootnote = T)
```

#### Our cutoff

```{r results='asis'}
tb <- tableby(our_ag ~ fev1 + fvc, data = df)
summary(tb, pfootnote = T)
```

### Percent time spent >140 mg/dL 

#### Scully et al. cutoff

```{r results='asis'}
tb <- tableby(scully_140 ~ fev1 + fvc, data = df)
summary(tb, pfootnote = T)
```

#### Our cutoff

```{r results='asis'}
tb <- tableby(our_140 ~ fev1 + fvc, data = df)
summary(tb, pfootnote = T)
```

### Percent time spent >180 mg/dL 

#### Scully et al. cutoff

```{r results='asis'}
tb <- tableby(scully_180 ~ fev1 + fvc, data = df)
summary(tb, pfootnote = T)
```

#### Our cutoff

```{r results='asis'}
tb <- tableby(our_180 ~ fev1 + fvc, data = df)
summary(tb, pfootnote = T)
```

### SD 

#### Scully et al. cutoff

```{r results='asis'}
tb <- tableby(scully_sd ~ fev1 + fvc, data = df)
summary(tb, pfootnote = T)
```

#### Our cutoff

```{r results='asis'}
tb <- tableby(our_sd ~ fev1 + fvc, data = df)
summary(tb, pfootnote = T)
```

### CV

#### Scully et al. cutoff

```{r results='asis'}
tb <- tableby(scully_cv ~ fev1 + fvc, data = df)
summary(tb, pfootnote = T)
```

#### Our cutoff

```{r results='asis'}
tb <- tableby(our_cv ~ fev1 + fvc, data = df)
summary(tb, pfootnote = T)
```

## Figure

In the figure below, red lines indicate the cutoffs identified in Scully et al. and purple lines indicate the cutoffs identified in EnVision.

```{r}
#| message: false
#| warning: false
#| fig-height: 12
#| fig-width: 16
# Dotplot
box_p1 <- ggplot(
  df,
  aes(x = Dysglycemia, y = percent_time_over_140, colour = Dysglycemia)
) +
  geom_jitter() +
  geom_hline(yintercept = 17.5, color = "red") +
  geom_hline(yintercept = 11.3, color = "purple") +
  ggtitle("% Time Over 140 (mg/dL)") +
  theme_bw(base_size = 12) +
  theme(
    legend.position = "none",
    axis.text.x = element_text(angle = 45, hjust = 1),
    axis.title.x = element_blank(), axis.title.y = element_blank()
  ) +
  scale_color_manual(values = c("#4DA8DA", "#80D8C3", "#FFD66B"))
box_p2 <- ggplot(
  df,
  aes(x = Dysglycemia, y = percent_time_over_180, colour = Dysglycemia)
) +
  geom_jitter() +
  geom_hline(yintercept = 3.4, color = "red") +
  geom_hline(yintercept = 3.1, color = "purple") +
  ggtitle("% Time Over 180 (mg/dL)") +
  theme_bw(base_size = 12) +
  theme(
    legend.position = "none",
    axis.text.x = element_text(angle = 45, hjust = 1),
    axis.title.x = element_blank(), axis.title.y = element_blank()
  ) +
  scale_color_manual(values = c("#4DA8DA", "#80D8C3", "#FFD66B"))
box_p3 <- ggplot(
  df,
  aes(x = Dysglycemia, y = mean_sensor, colour = Dysglycemia)
) +
  geom_jitter() +
  geom_hline(yintercept = 112, color = "red") +
  geom_hline(yintercept = 101, color = "purple") +
  ggtitle("Mean glucose (mg/dL)") +
  theme_bw(base_size = 12) +
  theme(
    legend.position = "none",
    axis.text.x = element_text(angle = 45, hjust = 1),
    axis.title.x = element_blank(), axis.title.y = element_blank()
  ) +
  scale_color_manual(values = c("#4DA8DA", "#80D8C3", "#FFD66B"))
box_p4 <- ggplot(
  df,
  aes(x = Dysglycemia, y = cv, colour = Dysglycemia)
) +
  geom_jitter() +
  geom_hline(yintercept = 30.6, color = "red") +
  geom_hline(yintercept = 27.7, color = "purple") +
  ggtitle("Coefficient of Variation (%)") +
  theme_bw(base_size = 12) +
  theme(
    legend.position = "none",
    axis.text.x = element_text(angle = 45, hjust = 1),
    axis.title.x = element_blank(), axis.title.y = element_blank()
  ) +
  scale_color_manual(values = c("#4DA8DA", "#80D8C3", "#FFD66B"))
box_p5 <- ggplot(
  df,
  aes(x = Dysglycemia, y = a1c_result, colour = Dysglycemia)
) +
  geom_jitter() +
  geom_hline(yintercept = 5.8, color = "red") +
  geom_hline(yintercept = 5.75, color = "purple") +
  ggtitle("HbA1c (%)") +
  theme_bw(base_size = 12) +
  theme(
    legend.title = element_blank(),
    axis.text.x = element_text(angle = 45, hjust = 1),
    axis.title.x = element_blank(), axis.title.y = element_blank()
  ) +
  scale_color_manual(values = c("#4DA8DA", "#80D8C3", "#FFD66B"))
box_p <- box_p1 + box_p2 + box_p4 + box_p3 + box_p5 + plot_layout(ncol = 5)
box_p
```

# Hypoglycemia Comparisons

```{r}
# Timepoint and variables lists
timepoints <- c(0, 10, 30, 60, 90, 120, 150, 180)
limited_timepoints <- c(0, 120, 150, 180)
glucoses <- paste0("Glucose_", timepoints)
insulins <- paste0("Insulin_", timepoints)
cpeptides <- paste0("C.Peptide_", timepoints)
epinephrines <- paste0("Epinephrine_", timepoints)
norepinephrines <- paste0("Norepinephrine_", timepoints)
adren_survey <- paste0("adren_score_", limited_timepoints)
neuro_survey <- paste0("neuro_score_", limited_timepoints)
total_survey <- paste0("total_score_", limited_timepoints)
num_symptoms_survey <- paste0("num_symptoms_", limited_timepoints)
hypo_surveys <- c(adren_survey, neuro_survey, total_survey, num_symptoms_survey)
# First visit dataframe
first_visit_df <- final_df %>%
  group_by(study_id) %>%
  filter(row_number() == 1) %>%
  ungroup()
# Long data for mixed models
glmm_df <- final_df %>%
  select(
    study_id, Hypo60, Hypo70, ogtt_num,
    all_of(c(
      glucoses, insulins, cpeptides, epinephrines, norepinephrines,
      hypo_surveys
    ))
  ) %>%
  pivot_longer(
    all_of(c(
      glucoses, insulins, cpeptides, epinephrines, norepinephrines,
      hypo_surveys
    )),
    names_to = c(".value", "Timepoint"),
    names_pattern = "(.*)_([0-9]{1,3})"
  )
glmm_df$Timepoint <- factor(glmm_df$Timepoint, levels = timepoints)
```

## Demographics at First Visit

### By Hypoglycemia <70 mg/dL at Any Point

```{r results='asis'}
t1 <- tableby(
  Hypo70 ~
    fe(Diagnosis) + redcap_data_access_group +
    kwt(age_visit, "Nmiss", "medianq1q3", "range") +
    kwt(height, "Nmiss", "medianq1q3", "range") +
    kwt(weight, "Nmiss", "medianq1q3", "range") + bmi_perc + sex +
    fe(origin_race) + fe(ethnicity) + fe(pancreatic_status) + fe(CFTR) +
    corrector_yes_no + fev1 + fvc + a1c_result,
  data = first_visit_df, control = tableby.control(simulate.p.value = T)
)
summary(t1, pfootnote = T)
```

### By Hypoglycemia <60 mg/dL at Any Point

```{r results='asis'}
t2 <- tableby(
  Hypo60 ~
    fe(Diagnosis) + redcap_data_access_group +
    kwt(age_visit, "Nmiss", "medianq1q3", "range") +
    kwt(height, "Nmiss", "medianq1q3", "range") +
    kwt(weight, "Nmiss", "medianq1q3", "range") + bmi_perc + sex +
    fe(origin_race) + fe(ethnicity) + fe(pancreatic_status) + fe(CFTR) +
    corrector_yes_no + fev1 + fvc + a1c_result,
  data = first_visit_df, control = tableby.control(simulate.p.value = T)
)
summary(t2, pfootnote = T)
```

## OGTT Measures by Timepoint

### Glucose

Glucose was modeled using a linear mixed effect model with random intercept for participant and time treated as a categorical variable. The results from this model are presented as estimated marginal means (also known as least-squares means) for those with hypoglycemia at some point and those with no hypoglycemia.

#### Hypoglycemia <70 mg/dL at Any Point

```{r}
# Fit
mod <- lmer(Glucose ~ Timepoint * Hypo70 + (1 | study_id / ogtt_num),
  data = glmm_df
)
# EM means
means <- data.frame(emmeans(mod, c("Timepoint", "Hypo70"),
  type = "response",
  pbkrtest.limit = 1e6
))
colnames(means) <- c(
  "Timepoint", "Hypo70", "Mean", "SE", "df", "CI Lower Limit", "CI Upper Limit"
)
# Plot
ggplot(means, aes(
  x = as.numeric(as.character(Timepoint)), y = Mean, colour = Hypo70,
  group = Hypo70
)) +
  geom_point() +
  geom_errorbar(aes(ymin = `CI Lower Limit`, ymax = `CI Upper Limit`),
    width = 3
  ) +
  geom_line() +
  scale_x_continuous(breaks = timepoints) +
  scale_color_manual(values = c("#66C2A5", "#FC8D62")) +
  ylab("EM Mean Glucose") +
  xlab("Timepoint") +
  theme_bw(base_size = 14) +
  theme(legend.title = element_blank())
```

The plot above shows the estimated mean at each time point. Error bars indicate the 95% confidence interval.

```{r}
means %>%
  gt() %>%
  fmt_number(decimals = 2)
```

The table above shows the estimated mean glucose at each time point for the two groups. For example, for those with no hypoglycemia the mean two hour glucose was `r round(means[means$Hypo70=="No Hypoglycemia < 70" & means$Timepoint=="120","Mean"],2)` (95% CI: `r round(means[means$Hypo70=="No Hypoglycemia < 70" & means$Timepoint=="120","CI Lower Limit"],2)` - `r round(means[means$Hypo70=="No Hypoglycemia < 70" & means$Timepoint=="120","CI Upper Limit"],2)`) and for those with hypoglycemia at some point the mean two hour glucose was `r round(means[means$Hypo70=="Hypoglycemia < 70" & means$Timepoint=="120","Mean"],2)` (95% CI: `r round(means[means$Hypo70=="Hypoglycemia < 70" & means$Timepoint=="120","CI Lower Limit"],2)` - `r round(means[means$Hypo70=="Hypoglycemia < 70" & means$Timepoint=="120","CI Upper Limit"],2)`).

#### Hypoglycemia <60 mg/dL at Any Point

```{r}
# Fit
mod <- lmer(Glucose ~ Timepoint * Hypo60 + (1 | study_id / ogtt_num),
  data = glmm_df
)
# EM means
means <- data.frame(emmeans(mod, c("Timepoint", "Hypo60"),
  type = "response",
  pbkrtest.limit = 1e6
))
colnames(means) <- c(
  "Timepoint", "Hypo60", "Mean", "SE", "df", "CI Lower Limit", "CI Upper Limit"
)
# Plot
ggplot(means, aes(
  x = as.numeric(as.character(Timepoint)), y = Mean, colour = Hypo60,
  group = Hypo60
)) +
  geom_point() +
  geom_errorbar(aes(ymin = `CI Lower Limit`, ymax = `CI Upper Limit`),
    width = 3
  ) +
  geom_line() +
  scale_x_continuous(breaks = timepoints) +
  scale_color_manual(values = c("#66C2A5", "#FC8D62")) +
  ylab("EM Mean Glucose") +
  xlab("Timepoint") +
  theme_bw(base_size = 14) +
  theme(legend.title = element_blank())
```

The plot above shows the estimated mean at each time point. Error bars indicate the 95% confidence interval.

```{r}
means %>%
  gt() %>%
  fmt_number(decimals = 2)
```

The table above shows the estimated mean glucose at each time point for the two groups. For example, for those with no hypoglycemia the mean two hour glucose was `r round(means[means$Hypo60=="No Hypoglycemia < 60" & means$Timepoint=="120","Mean"],2)` (95% CI: `r round(means[means$Hypo60=="No Hypoglycemia < 60" & means$Timepoint=="120","CI Lower Limit"],2)` - `r round(means[means$Hypo60=="No Hypoglycemia < 60" & means$Timepoint=="120","CI Upper Limit"],2)`) and for those with hypoglycemia at some point the mean two hour glucose was `r round(means[means$Hypo60=="Hypoglycemia < 60" & means$Timepoint=="120","Mean"],2)` (95% CI: `r round(means[means$Hypo60=="Hypoglycemia < 60" & means$Timepoint=="120","CI Lower Limit"],2)` - `r round(means[means$Hypo60=="Hypoglycemia < 60" & means$Timepoint=="120","CI Upper Limit"],2)`).

### Insulin

Insulin was modeled using a linear mixed effect model with random intercept for participant and time treated as a categorical variable. The results from this model are presented as estimated marginal means (also known as least-squares means) for those with hypoglycemia at some point and those with no hypoglycemia.

#### Hypoglycemia <70 mg/dL at Any Point

```{r}
# Fit
mod <- lmer(Insulin ~ Timepoint * Hypo70 + (1 | study_id / ogtt_num),
  data = glmm_df
)
# EM means
means <- data.frame(emmeans(mod, c("Timepoint", "Hypo70"),
  type = "response",
  pbkrtest.limit = 1e6
))
colnames(means) <- c(
  "Timepoint", "Hypo70", "Mean", "SE", "df", "CI Lower Limit", "CI Upper Limit"
)
# Plot
ggplot(means, aes(
  x = as.numeric(as.character(Timepoint)), y = Mean, colour = Hypo70,
  group = Hypo70
)) +
  geom_point() +
  geom_errorbar(aes(ymin = `CI Lower Limit`, ymax = `CI Upper Limit`),
    width = 3
  ) +
  geom_line() +
  scale_x_continuous(breaks = timepoints) +
  scale_color_manual(values = c("#66C2A5", "#FC8D62")) +
  ylab("EM Mean Insulin") +
  xlab("Timepoint") +
  theme_bw(base_size = 14) +
  theme(legend.title = element_blank())
```

The plot above shows the estimated mean at each time point. Error bars indicate the 95% confidence interval.

```{r}
means %>%
  gt() %>%
  fmt_number(decimals = 2)
```

The table above shows the estimated mean insulin at each time point for the two groups. For example, for those with no hypoglycemia the mean two hour insulin was `r round(means[means$Hypo70=="No Hypoglycemia < 70" & means$Timepoint=="120","Mean"],2)` (95% CI: `r round(means[means$Hypo70=="No Hypoglycemia < 70" & means$Timepoint=="120","CI Lower Limit"],2)` - `r round(means[means$Hypo70=="No Hypoglycemia < 70" & means$Timepoint=="120","CI Upper Limit"],2)`) and for those with hypoglycemia at some point the mean two hour insulin was `r round(means[means$Hypo70=="Hypoglycemia < 70" & means$Timepoint=="120","Mean"],2)` (95% CI: `r round(means[means$Hypo70=="Hypoglycemia < 70" & means$Timepoint=="120","CI Lower Limit"],2)` - `r round(means[means$Hypo70=="Hypoglycemia < 70" & means$Timepoint=="120","CI Upper Limit"],2)`).

#### Hypoglycemia <60 mg/dL at Any Point

```{r}
# Fit
mod <- lmer(Insulin ~ Timepoint * Hypo60 + (1 | study_id / ogtt_num),
  data = glmm_df
)
# EM means
means <- data.frame(emmeans(mod, c("Timepoint", "Hypo60"),
  type = "response",
  pbkrtest.limit = 1e6
))
colnames(means) <- c(
  "Timepoint", "Hypo60", "Mean", "SE", "df", "CI Lower Limit", "CI Upper Limit"
)
# Plot
ggplot(means, aes(
  x = as.numeric(as.character(Timepoint)), y = Mean, colour = Hypo60,
  group = Hypo60
)) +
  geom_point() +
  geom_errorbar(aes(ymin = `CI Lower Limit`, ymax = `CI Upper Limit`),
    width = 3
  ) +
  geom_line() +
  scale_x_continuous(breaks = timepoints) +
  scale_color_manual(values = c("#66C2A5", "#FC8D62")) +
  ylab("EM Mean Insulin") +
  xlab("Timepoint") +
  theme_bw(base_size = 14) +
  theme(legend.title = element_blank())
```

The plot above shows the estimated mean at each time point. Error bars indicate the 95% confidence interval.

```{r}
means %>%
  gt() %>%
  fmt_number(decimals = 2)
```

The table above shows the estimated mean insulin at each time point for the two groups. For example, for those with no hypoglycemia the mean two hour insulin was `r round(means[means$Hypo60=="No Hypoglycemia < 60" & means$Timepoint=="120","Mean"],2)` (95% CI: `r round(means[means$Hypo60=="No Hypoglycemia < 60" & means$Timepoint=="120","CI Lower Limit"],2)` - `r round(means[means$Hypo60=="No Hypoglycemia < 60" & means$Timepoint=="120","CI Upper Limit"],2)`) and for those with hypoglycemia at some point the mean two hour insulin was `r round(means[means$Hypo60=="Hypoglycemia < 60" & means$Timepoint=="120","Mean"],2)` (95% CI: `r round(means[means$Hypo60=="Hypoglycemia < 60" & means$Timepoint=="120","CI Lower Limit"],2)` - `r round(means[means$Hypo60=="Hypoglycemia < 60" & means$Timepoint=="120","CI Upper Limit"],2)`).

### C-peptide

C-peptide was modeled using a linear mixed effect model with random intercept for participant and time treated as a categorical variable. The results from this model are presented as estimated marginal means (also known as least-squares means) for those with hypoglycemia at some point and those with no hypoglycemia.

#### Hypoglycemia <70 mg/dL at Any Point

```{r}
# Fit
mod <- lmer(C.Peptide ~ Timepoint * Hypo70 + (1 | study_id / ogtt_num),
  data = glmm_df
)
# EM means
means <- data.frame(emmeans(mod, c("Timepoint", "Hypo70"),
  type = "response",
  pbkrtest.limit = 1e6
))
colnames(means) <- c(
  "Timepoint", "Hypo70", "Mean", "SE", "df", "CI Lower Limit", "CI Upper Limit"
)
# Plot
ggplot(means, aes(
  x = as.numeric(as.character(Timepoint)), y = Mean, colour = Hypo70,
  group = Hypo70
)) +
  geom_point() +
  geom_errorbar(aes(ymin = `CI Lower Limit`, ymax = `CI Upper Limit`),
    width = 3
  ) +
  geom_line() +
  scale_x_continuous(breaks = timepoints) +
  scale_color_manual(values = c("#66C2A5", "#FC8D62")) +
  ylab("EM Mean C-peptide") +
  xlab("Timepoint") +
  theme_bw(base_size = 14) +
  theme(legend.title = element_blank())
```

The plot above shows the estimated mean at each time point. Error bars indicate the 95% confidence interval.

```{r}
means %>%
  gt() %>%
  fmt_number(decimals = 2)
```

The table above shows the estimated mean C-peptide at each time point for the two groups. For example, for those with no hypoglycemia the mean two hour C-peptide was `r round(means[means$Hypo70=="No Hypoglycemia < 70" & means$Timepoint=="120","Mean"],2)` (95% CI: `r round(means[means$Hypo70=="No Hypoglycemia < 70" & means$Timepoint=="120","CI Lower Limit"],2)` - `r round(means[means$Hypo70=="No Hypoglycemia < 70" & means$Timepoint=="120","CI Upper Limit"],2)`) and for those with hypoglycemia at some point the mean two hour C-peptide was `r round(means[means$Hypo70=="Hypoglycemia < 70" & means$Timepoint=="120","Mean"],2)` (95% CI: `r round(means[means$Hypo70=="Hypoglycemia < 70" & means$Timepoint=="120","CI Lower Limit"],2)` - `r round(means[means$Hypo70=="Hypoglycemia < 70" & means$Timepoint=="120","CI Upper Limit"],2)`).

#### Hypoglycemia <60 mg/dL at Any Point

```{r}
# Fit
mod <- lmer(C.Peptide ~ Timepoint * Hypo60 + (1 | study_id / ogtt_num),
  data = glmm_df
)
# EM means
means <- data.frame(emmeans(mod, c("Timepoint", "Hypo60"),
  type = "response",
  pbkrtest.limit = 1e6
))
colnames(means) <- c(
  "Timepoint", "Hypo60", "Mean", "SE", "df", "CI Lower Limit", "CI Upper Limit"
)
# Plot
ggplot(means, aes(
  x = as.numeric(as.character(Timepoint)), y = Mean, colour = Hypo60,
  group = Hypo60
)) +
  geom_point() +
  geom_errorbar(aes(ymin = `CI Lower Limit`, ymax = `CI Upper Limit`),
    width = 3
  ) +
  geom_line() +
  scale_x_continuous(breaks = timepoints) +
  scale_color_manual(values = c("#66C2A5", "#FC8D62")) +
  ylab("EM Mean C-peptide") +
  xlab("Timepoint") +
  theme_bw(base_size = 14) +
  theme(legend.title = element_blank())
```

The plot above shows the estimated mean at each time point. Error bars indicate the 95% confidence interval.

```{r}
means %>%
  gt() %>%
  fmt_number(decimals = 2)
```

The table above shows the estimated mean C-peptide at each time point for the two groups. For example, for those with no hypoglycemia the mean two hour C-peptide was `r round(means[means$Hypo60=="No Hypoglycemia < 60" & means$Timepoint=="120","Mean"],2)` (95% CI: `r round(means[means$Hypo60=="No Hypoglycemia < 60" & means$Timepoint=="120","CI Lower Limit"],2)` - `r round(means[means$Hypo60=="No Hypoglycemia < 60" & means$Timepoint=="120","CI Upper Limit"],2)`) and for those with hypoglycemia at some point the mean two hour C-peptide was `r round(means[means$Hypo60=="Hypoglycemia < 60" & means$Timepoint=="120","Mean"],2)` (95% CI: `r round(means[means$Hypo60=="Hypoglycemia < 60" & means$Timepoint=="120","CI Lower Limit"],2)` - `r round(means[means$Hypo60=="Hypoglycemia < 60" & means$Timepoint=="120","CI Upper Limit"],2)`).

## Whole OGTT Measures

### Matsuda index

The Matsuda index was calculated across the 0, 30, 60, 90, and 120 minute timepoints using the formula: $$\frac{10000}{\sqrt{(\frac{\text{fasting glucose (mg/dL)}}{18} * \text{fasting insulin}) * (\frac{\text{mean glucose (mg/dL)}}{18} * \text{mean insulin})}}$$

#### Hypoglycemia <70 mg/dL at Any Point

```{r}
# Fit
mod <- lmer(matsuda ~ Hypo70 + (1 | study_id), data = final_df)
mod %>% gtsummary::tbl_regression()
```

The table above shows that the Matsuda index was different by `r round(summary(mod)$coefficients[2,1],2)` on average in the hypoglycemia groups, although this was not statistically significant (p = `r round(summary(mod)$coefficients[2,5],2)`).

#### Hypoglycemia <60 mg/dL at Any Point

```{r}
# Fit
mod <- lmer(matsuda ~ Hypo60 + (1 | study_id), data = final_df)
mod %>% gtsummary::tbl_regression()
```

The table above shows that the Matsuda index was different by `r round(summary(mod)$coefficients[2,1],2)` on average in the hypoglycemia groups, although this was not statistically significant (p = `r round(summary(mod)$coefficients[2,5],2)`).
