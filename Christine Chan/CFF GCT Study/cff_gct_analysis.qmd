---
title: "CFF GCT Study"
author: "Tim Vigers"
date: "today"
date-format: long
format:
  html:
    toc: true
    toc-depth: 5
    toc-float: true
    code-fold: true
    self-contained: true
    fig-cap-location: top
    fig-height: 9
    fig-width: 12
    page-layout: full
    theme:
      light: flatly
      dark: darkly
bibliography: /home/tim/Documents/Miscellaneous/zotero.bib
csl: /home/tim/GitHub/styles/american-medical-association.csl
editor: source
---

```{r setup}
#| include: false
library(readxl)
library(dplyr)
library(tidyr)
library(ggplot2)
library(pROC)
library(gt)
home_dir <- switch(Sys.info()["sysname"],
  "Darwin" = "/Users/timvigers/Library/CloudStorage/OneDrive-TheUniversityofColoradoDenver/Vigers/CF",
  "Windows" = "C:/Users/Tim/OneDrive - The University of Colorado Denver/Vigers/CF",
  "Linux" = "/home/tim/OneDrive/Vigers/CF"
)
github_dir <- switch(Sys.info()["sysname"],
  "Darwin" = "/Users/timvigers/GitHub",
  "Windows" = "C:/Users/Tim/GitHub",
  "Linux" = "/home/tim/GitHub"
)
knitr::opts_knit$set(root.dir = home_dir)
```

```{r data cleaning}
#| warning: false
# Import from REDCap
df <- read_excel("./Christine Chan/CFF GCT Study/Data_Raw/CFF Study REDCap Export 2021-09-09a LSP.xlsx")
# Get diagnosis
df$Diagnosis <- "NGT"
df$Diagnosis[df$plas_pre_gluc >= 100] <- "IFG"
df$Diagnosis[df$plasma_gluc_1_hr >= 200] <- "INDET"
df$Diagnosis[df$plas_gluc_2_hr >= 140] <- "IGF"
df$Diagnosis[df$plas_pre_gluc >= 126 | df$plas_gluc_2_hr >= 200] <- "CFRD"
df$Diagnosis <- factor(df$Diagnosis,
  levels = c("NGT", "IFG", "INDET", "IGF", "CFRD")
)
df$Dysglycemia <- factor(df$Diagnosis,
  levels = c("NGT", "IFG", "INDET", "IGF", "CFRD"),
  labels = c("NGT", "AGT", "AGT", "AGT", "AGT")
)
# Numeric variables
df$plasma_glu_val <- as.numeric(df$plasma_glu_val)
df$plasma_glucose <- as.numeric(df$plasma_glucose)
# Data were double entered but it wasn't completed so most participants have 3
# rows
df <- df %>%
  arrange(subject_id...1) %>%
  filter(grepl("--1|--2|-1|-2", subject_id...1)) %>%
  mutate(id = sub("--1|--2|-1|-2", "", subject_id...1)) %>%
  group_by(id) %>%
  filter(row_number() == 1) %>%
  select(
    id, gender2:ethnic_origin_race___6, age_at_enrollment_years,
    pancreatic_exocrine_insuff, Diagnosis, Dysglycemia,
    plasma_glucose, capillary, plasma_glu_val, hour_capillary_glucose_val,
    hemo_a1c, plas_pre_gluc, plasma_gluc_1_hr, plas_gluc_2_hr
  )
```

# OGTT Figures

```{r}
#| label: fig-boxplot
#| fig-cap: Boxplot of OGTT glucose values by diabetes status
#| warning: false
plot_df <- df %>% pivot_longer(plas_pre_gluc:plas_gluc_2_hr,
  names_to = "ogtt_timepoint", values_to = "glucose"
)
plot_df$ogtt_timepoint <- factor(plot_df$ogtt_timepoint,
  levels = c("plas_pre_gluc", "plasma_gluc_1_hr", "plas_gluc_2_hr")
)
box_p <- ggplot(
  plot_df,
  aes(x = ogtt_timepoint, y = glucose, fill = ogtt_timepoint)
) +
  geom_boxplot() +
  facet_wrap(~Diagnosis) +
  theme(legend.position = "none")
box_p
```

```{r}
#| label: fig-point
#| fig-cap: Point plot of OGTT glucose values by diabetes status
#| warning: false
plot_df <- df %>% pivot_longer(plas_pre_gluc:plas_gluc_2_hr,
  names_to = "ogtt_timepoint", values_to = "glucose"
)
plot_df$ogtt_timepoint <- factor(plot_df$ogtt_timepoint,
  levels = c("plas_pre_gluc", "plasma_gluc_1_hr", "plas_gluc_2_hr")
)
point_p <- ggplot(
  plot_df,
  aes(x = ogtt_timepoint, y = glucose, color = ogtt_timepoint)
) +
  geom_point() +
  facet_wrap(~Diagnosis) +
  theme(legend.position = "none")
point_p
```

```{r}
#| label: fig-violin
#| fig-cap: Violin plot of OGTT glucose values by diabetes status
#| warning: false
plot_df <- df %>% pivot_longer(plas_pre_gluc:plas_gluc_2_hr,
  names_to = "ogtt_timepoint", values_to = "glucose"
)
plot_df$ogtt_timepoint <- factor(plot_df$ogtt_timepoint,
  levels = c("plas_pre_gluc", "plasma_gluc_1_hr", "plas_gluc_2_hr")
)
violin_p <- ggplot(
  plot_df,
  aes(x = ogtt_timepoint, y = glucose, fill = ogtt_timepoint)
) +
  geom_violin() +
  facet_wrap(~Diagnosis) +
  theme(legend.position = "none")
violin_p
```

# ROC analyses

Dysglycemia was defined as any diagnosis on OGTT other than normal glucose tolerance (NGT).

```{r}
#| label: tbl-roc-dysglycemia
#| tbl-cap: Accuracy of different screening tests to predict dysglycemia using ROC curve analyses
#| message: false
gctpl_roc <- roc(Dysglycemia ~ plasma_glu_val, data = df)
gctcap_roc <- roc(Dysglycemia ~ hour_capillary_glucose_val, data = df)
ogtt1_roc <- roc(Dysglycemia ~ plasma_gluc_1_hr, data = df)
rpg_roc <- roc(Dysglycemia ~ plasma_glucose, data = df)
rcg_roc <- roc(Dysglycemia ~ capillary, data = df)
a1c_roc <- roc(Dysglycemia ~ hemo_a1c, data = df)
roc_table <-
  lapply(
    list(gctpl_roc, gctcap_roc, ogtt1_roc, rpg_roc, rcg_roc, a1c_roc),
    function(roc) {
      coords(roc, "best", ret = "all")
    }
  )
roc_table <- do.call(rbind, roc_table)
rownames(roc_table) <- c("GCTpl", "GCTcap", "OGTT 1 hr", "RPG", "RCG", "A1c")
gt(roc_table, rownames_to_stub = T) %>% fmt_number(decimals = 3)
```

```{r}
invisible(lapply(
  list(gctpl_roc, gctcap_roc, ogtt1_roc, rpg_roc, rcg_roc, a1c_roc),
  function(roc) {
    print(plot(roc, print.auc = T, print.thres = T))
  }
))
```

```{r}
#| label: tbl-roc-cutoffs
#| tbl-cap: Sensitivity and specificity (95% bootstrap confidence intervals) to measure the performance of the glucose challenge test plasma glucose (GCTpl) to predict dysglycemia at different thresholds
#| message: false
gctpl_140 <- as.data.frame(ci.coords(gctpl_roc,
  x = 140,
  ret = c("sensitivity", "specificity")
))
gctpl_150 <- as.data.frame(ci.coords(gctpl_roc,
  x = 150,
  ret = c("sensitivity", "specificity")
))
gctpl_160 <- as.data.frame(ci.coords(gctpl_roc,
  x = 160,
  ret = c("sensitivity", "specificity")
))
gctpl_table <- do.call(rbind, list(gctpl_140, gctpl_150, gctpl_160))
rownames(gctpl_table) <- c(140, 150, 160)
gt(gctpl_table, rownames_to_stub = T) %>% fmt_number(decimals = 3)
```
