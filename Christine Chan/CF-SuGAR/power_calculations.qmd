---
title: "CF-SuGAR Power Calculations"
author: "Tim Vigers"
date: "today"
date-format: long
format:
  html:
    toc: true
    toc-depth: 5
    toc-float: true
    code-fold: true
    self-contained: true
    fig-cap-location: top
    page-layout: full
    theme:
      light: flatly
      dark: darkly
editor: source
---

```{r setup}
#| include: false
library(Hmisc)
library(tidyverse)
library(childsds)
library(survival)
library(gtsummary)
library(ggstats)
home_dir <- switch(Sys.info()["sysname"],
  "Darwin" = "/Users/timvigers/Library/CloudStorage/OneDrive-TheUniversityofColoradoDenver/Vigers/CF/Christine Chan/CF Registry",
  "Linux" = "/home/timvigers/OneDrive/Vigers/CF/Christine Chan/CF Registry"
)
github_dir <- switch(Sys.info()["sysname"],
  "Darwin" = "/Users/timvigers/Documents/GitHub",
  "Linux" = "/home/timvigers/Documents/GitHub"
)
knitr::opts_knit$set(root.dir = home_dir)
```

```{r data cleaning}
# Import data and codebook
annual <- read.csv("./Data_Raw/CFF19_Annualized_Del1.csv",
  na.strings = c("", "N/A")
)
data_dict <- readxl::read_excel("./Data_Raw/Copy of Codes for CFFPR_2018.xlsx")
data_dict$var <- paste(data_dict$field_name, data_dict$code_value, sep = "_")
# Remove those with T1D or T2D
annual <- annual %>% arrange(eDWID, ReviewYear)
annual <- annual[!annual$cfrd_status_annual %in% c(4, 5), ]
annual$cfrd_status_annual <- factor(annual$cfrd_status_annual,
  levels = 1:3,
  labels = c("CFRD-", "CFRD-", "CFRD+")
)
# Get mutations
demogs <- read.csv("./Data_Raw/CFF19_DemogCFDiag_Del1.csv")
races <- c(
  "White", "Black or African American", "American Indian or Alaska Native",
  "Asian", "Native Hawaiian or Other Pacific ", "Some other race"
)
demogs$Race <- apply(demogs, 1, function(r) {
  w <- which(r[paste0("Race", 1:6)] == 1)
  if (length(w) > 1) {
    return("More than one race")
  } else {
    return(races[w])
  }
})
demogs$Race <- factor(demogs$Race,
  levels = c(
    "White", "American Indian or Alaska Native", "Asian",
    "Black or African American", "More than one race",
    "Native Hawaiian or Other Pacific ", "Some other race"
  ),
  labels = c(
    "White", "Other race", "Other race",
    "Black or African American", "More than one race",
    "Other race", "Other race"
  )
)
demogs$Hispanicrace <- factor(demogs$Hispanicrace,
  levels = 1:2,
  labels = c("Yes", "No")
)
demogs <- demogs %>% select(eDWID, Gender, MutClass, Race, Hispanicrace)
annual <- left_join(annual, demogs, by = join_by(eDWID))
# Variable formatting
# If A_supplement_feeding is 0, then A_feeding2 is also 0 because they are not
# on any supplemental feeding
# Include all kinds of tube feeds
annual$A_feeding2[annual$A_supplement_feeding == 0] <- 0
annual$A_feeding3[annual$A_supplement_feeding == 0] <- 0
annual$A_feeding4[annual$A_supplement_feeding == 0] <- 0
tube_fields <- c("A_feeding2", "A_feeding3", "A_feeding4")
annual$tube_feeding <-
  apply(annual[, tube_fields], 1, function(r) {
    if (all(is.na(r))) {
      return(NA)
    } else {
      return(max(as.numeric(r), na.rm = T))
    }
  })
# Liver disease
liver_fields <- c("A_hepatobiliary1_3", paste0("A_hepatobiliary2_", 1:4))
annual$liver_disease <-
  apply(annual[, liver_fields], 1, function(r) {
    if (all(is.na(r))) {
      return(NA)
    } else {
      return(max(as.numeric(r), na.rm = T))
    }
  })
# Get BMI categories
annual$bmi <- annual$A_weight / ((annual$A_height / 100)^2)
annual$bmi <- coalesce(annual$A_bmivalue, annual$bmi)
annual$bmi_perc_cdc <- sds(annual$bmi,
  age = annual$Age_YrEnd,
  sex = annual$Gender, male = "M", female = "F",
  item = "bmi", ref = cdc.ref, type = "perc"
) * 100
annual$bmi_perc_who <- sds(annual$bmi,
  age = annual$Age_YrEnd,
  sex = annual$Gender, male = "M", female = "F",
  item = "bmi", ref = who.ref, type = "perc"
) * 100
annual$bmi_perc <- coalesce(annual$bmi_perc_cdc, annual$bmi_perc_who)
annual$bmi_cat <- apply(annual, 1, function(r) {
  age <- as.numeric(r["Age_YrEnd"])
  gender <- as.character(r["Gender"])
  bmi <- as.numeric(r["bmi"])
  bmi_perc <- as.numeric(r["bmi_perc"])
  if (age <= 20) {
    return(cut(bmi_perc, c(-Inf, 10, 50, 85, Inf),
      right = F,
      labels = c("Undernourished", "At Risk", "Target/Goal", "Overweight")
    ))
  } else if (age > 20) {
    if (gender == "M") {
      return(cut(bmi, c(-Inf, 18.5, 23, 25, Inf),
        right = F,
        labels = c("Undernourished", "At Risk", "Target/Goal", "Overweight")
      ))
    } else if (gender == "F") {
      return(cut(bmi, c(-Inf, 18.5, 22, 25, Inf),
        right = F,
        labels = c("Undernourished", "At Risk", "Target/Goal", "Overweight")
      ))
    }
  }
})
annual$bmi_cat <- relevel(annual$bmi_cat, ref = "Target/Goal")
# Format columns
annual$MutClass <- factor(annual$MutClass,
  levels = c("1-3", "4-5", "Oth", "N/A"),
  labels = c("1-3", "4-5", "Oth", "Unknown")
)
annual$NumPulmExacerbation <- cut(annual$NumPulmExacerbation,
  labels = c("0", "1", "2", ">=3"),
  breaks = c(0, 1, 2, 3, Inf), right = F
)
# Age groups 10 - 18 inclusive, 19 - 30 inclusive, >= 31
annual$age_group <- cut(annual$Age_YrEnd,
  breaks = c(-Inf, 10, 19, 31, Inf),
  right = F
)
# Bugs
bugs <- c(
  "A_pseudomonasaeruginosa", "A_fungalyeast1",
  "A_pulmonarycomplications1", "A_mycocultureresults3"
)
# Yes/No variables
yn_vars <- c(
  "A_corticosteroids1", "A_feeding2",
  "A_Vx770", "A_VX809comb", bugs, "tube_feeding", "liver_disease"
)
annual[, yn_vars] <- lapply(annual[, yn_vars], factor,
  levels = 0:1,
  labels = c("No", "Yes")
)
annual$A_IsOnEnzymes <- factor(annual$A_IsOnEnzymes,
  levels = c(1, 0), labels = c(" Yes", " No")
)
# FEV1 to categorical
annual$ppFEV1_cat <- cut(annual$A_FEV1_pct_predicted,
  breaks = c(0, 40, 80, 100, Inf), right = F
)
annual$ppFEV1_cat <- factor(annual$ppFEV1_cat,
  levels = c("[100,Inf)", "[80,100)", "[40,80)", "[0,40)")
)
# Males to reference group
annual$Gender <- factor(annual$Gender, levels = c("M", "F"))
# Hispanic no as reference
annual$Hispanicrace <- factor(annual$Hispanicrace, levels = c("No", "Yes"))
# Get first year of CFRD
first_cfrd <- annual %>%
  filter(cfrd_status_annual == "CFRD+") %>%
  group_by(eDWID) %>%
  summarise(first_cfrd = min(ReviewYear))
annual <- left_join(annual, first_cfrd, by = join_by(eDWID))
# Year prior to first CFRD in registry - assume negative for CFRD. Assume all
# years following are CFRD+
annual$CFRD <- NA
annual$CFRD[annual$ReviewYear < annual$first_cfrd] <- "CFRD-"
annual$CFRD[annual$ReviewYear >= annual$first_cfrd] <- "CFRD+"
annual$CFRD[is.na(annual$first_cfrd)] <- "CFRD-"
annual$CFRD <- factor(annual$CFRD, levels = c("CFRD-", "CFRD+"))
# Add formatted columns for survival analysis
annual$tstop <- ymd(paste0(annual$ReviewYear, "-12-31"))
annual$tstart <- ymd(paste0(annual$ReviewYear, "-01-01"))
annual <- annual %>%
  group_by(eDWID) %>%
  mutate(entry_date = tstart[1]) %>%
  ungroup()
# Remove those under 10
annual$age_group <- relevel(annual$age_group, ref = "[10,19)")
annual <- annual %>% filter(Age_YrEnd != 0, Age_YrEnd >= 10)
annual$age_group <- droplevels(annual$age_group)
# List of covariates
vars <- c(
  "age_group", "Gender", "bmi_perc", "bmi_cat", "MutClass", "Race",
  "Hispanicrace", "A_IsOnEnzymes", "ppFEV1_cat", "tube_feeding",
  "NumPulmExacerbation", "A_pseudomonasaeruginosa", "A_fungalyeast1",
  "A_mycocultureresults3", "A_corticosteroids1", "cfrd_status_annual",
  "A_Vx770", "A_VX809comb", "liver_disease"
)
# Nice labels for plots and tables
labels <- list(
  cfrd_status_annual = "CFRD Status", MutClass = "Mutation class",
  Race = "Race", Hispanicrace = "Hispanic",
  Gender = "Sex", A_IsOnEnzymes = "Pancreatic enzyme use",
  ppFEV1_cat = "FEV1 percent predicted category",
  A_FEV1_pct_predicted = "FEV1 percent predicted",
  A_FVC_pct_predicted = "FVC percent predicted",
  tube_feeding = "Enteric feedings", liver_disease = "Liver disease",
  A_corticosteroids1 = "Use of corticosteroids",
  NumPulmExacerbation = "Admissions for PEx", age_group = "Age group",
  height_perc = "Height percentile", bmi_cat = "BMI category",
  A_Vx770 = "Use of CFTR modulator Vx770",
  A_VX809comb = "Use of CFTR modulator Vx809 combination",
  A_pseudomonasaeruginosa = "Pseudomonas aeruginosa",
  A_fungalyeast1 = "Aspergillus (any species)",
  A_mycocultureresults3 = "Microorganisms in myco culture", eDWID = "ID",
  tstart = "Interval start", tstop = "Interval stop",
  Age_YrEnd = "Age", bmi_perc = "BMI %ile"
)
label(annual[, which(colnames(annual) %in% names(labels))]) <-
  labels[colnames(annual)[which(colnames(annual) %in% names(labels))]]
```

# Base model

- From the 2003 - 2018 registry data

```{r}
# Origin for survival analyses
og <- ymd("2003-01-01")
# Need to use a dataframe not a tibble
annual <- as.data.frame(annual)
annual$tstart <- as.numeric(annual$tstart) - as.numeric(og)
annual$tstop <- as.numeric(annual$tstop) - as.numeric(og)
# Formula for base model
xvars <- c(
  "age_group", "Gender", "Race", "Hispanicrace", "bmi_cat", "MutClass",
  "A_IsOnEnzymes", "tube_feeding", "liver_disease", "ppFEV1_cat",
  "NumPulmExacerbation", "A_corticosteroids1"
)
y <- "Surv(time = tstart, time2 = tstop, event = as.numeric(CFRD) == 2)"
f <- as.formula(paste0(y, "~", paste0(xvars, collapse = "+")))
cox_res <- coxph(f, data = annual, cluster = eDWID)
# Forest plot and coefficients table
cox_res %>%
  tbl_regression(exponentiate = T)
ggcoef_table(cox_res,
  show_p_values = F, add_reference_rows = T, exponentiate = T,
  signif_stars = F, colour = F
)
# Diagnostics
test.ph <- data.frame(cox.zph(cox_res)$table)
test.ph <- test.ph[rownames(test.ph) != "GLOBAL", ]
# Find which variables technically violate PH assumption
time_varying <- rownames(test.ph)[test.ph$p < 0.05]
# Just split data by time period so we're only fitting 3 models
# "[2003,2009)", "[2009,2014)", "[2014,2019)"
annual$time_period <- cut(annual$ReviewYear,
  breaks = c(-Inf, 2009, 2014, Inf), right = F
)
era1 <- coxph(f,
  data = annual[as.numeric(annual$time_period) == 1, ],
  cluster = eDWID
)
era2 <- coxph(f,
  data = annual[as.numeric(annual$time_period) == 2, ],
  cluster = eDWID
)
era3 <- coxph(f,
  data = annual[as.numeric(annual$time_period) == 3, ],
  cluster = eDWID
)
# # KM plot
# fit <- survfit(Surv(time = tstart, time2 = tstop, event = as.numeric(CFRD) == 2) ~ age_group,
#   data = annual[as.numeric(annual$time_period) == 1, ]
# )
# # Visualize with survminer
# ggsurvplot(fit, data = annual[as.numeric(annual$time_period) == 1, ], risk.table = TRUE)
```