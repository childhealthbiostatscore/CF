---
title: "CF Registry Analysis"
author: "Tim Vigers"
date: "today"
date-format: long
format:
  html:
    toc: true
    toc-depth: 5
    toc-float: true
    code-fold: true
    self-contained: true
    fig-cap-location: top
    page-layout: full
execute:
  echo: false
  warning: false
editor: source
---

```{r}
#| include: false
library(Hmisc)
library(tidyverse)
library(forestmodel)
library(childsds)
library(gt)
library(gtsummary)
library(forcats)
library(labelled)
library(survival)
library(survminer)
switch(Sys.info()[["sysname"]],
  Windows = {
    home_dir <- "C:/Users/timvigers/Dropbox/Work/Christine Chan/CF registry data"
  },
  Darwin = {
    home_dir <- "/Users/timvigers/Dropbox/Work/Christine Chan/CF registry data"
  }
)
knitr::opts_knit$set(root.dir = home_dir)
```

# CFRD incidence and prevalence

```{r}
# All data
encounter <- read.csv("./Data_Raw/CFF19_encountersMerged_Del1.csv",
  na.strings = c("", "N/A")
)
annual <- read.csv("./Data_Raw/CFF19_Annualized_Del1.csv",
  na.strings = c("", "N/A")
)
encounter <- encounter %>%
  arrange(eDWID, reviewyear, encounternum)
annual <- annual %>% arrange(eDWID, ReviewYear)
# Add age
ages <- annual %>%
  mutate(`Age in 2018` = 2018 - (ReviewYear - Age_YrEnd)) %>%
  rename(reviewyear = ReviewYear) %>%
  group_by(eDWID, reviewyear) %>%
  summarise(
    `Age in 2018` = as.numeric(names(sort(table(`Age in 2018`),
      decreasing = TRUE
    )[1])),
    Age = Age_YrEnd[1], .groups = "drop"
  )
encounter <- left_join(encounter, ages, by = c("eDWID", "reviewyear"))
encounter$`Age Group 2018` <- cut(encounter$`Age in 2018`,
  c(-Inf, 10, 19, 31, Inf),
  labels = c("< 10", "10 - 18", "19 - 30", "> 30"),
  right = F
)
encounter$`Age Group` <- cut(encounter$Age,
  c(-Inf, 10, 19, 31, Inf),
  labels = c("< 10", "10 - 18", "19 - 30", "> 30"),
  right = F
)
# For those with CFRD by registry criteria, find first visit with diagnosis
first_cfrd_cffpr <- encounter %>%
  filter(cfrd_status == 3) %>%
  group_by(eDWID) %>%
  filter(row_number() == 1) %>%
  select(eDWID, reviewyear, `Age in 2018`) %>%
  rename(first_cfrd_cffpr = reviewyear)
# Add to encounter level data
encounter <- left_join(encounter, first_cfrd_ogtt, by = c("eDWID", "Age in 2018"))
encounter <- left_join(encounter, first_cfrd_cffpr, by = c("eDWID", "Age in 2018"))
encounter <- left_join(encounter, first_cfrd_both, by = c("eDWID", "Age in 2018"))
# Fill down CFRD Yes/No by year
encounter <- encounter %>%
  group_by(eDWID) %>%
  mutate(
    cfrd_cffpr = case_when(
      reviewyear < first_cfrd_cffpr ~ "No",
      reviewyear >= first_cfrd_cffpr ~ "Yes"
    )
  ) %>%
  ungroup()
encounter$cfrd_ogtt[is.na(encounter$cfrd_ogtt)] <- "No"
encounter$cfrd_cffpr[is.na(encounter$cfrd_cffpr)] <- "No"
encounter$cfrd_both[is.na(encounter$cfrd_both)] <- "No"
# Ordered factors
encounter$cfrd_ogtt <- factor(encounter$cfrd_ogtt, levels = c("No", "Yes"), ordered = T)
encounter$cfrd_cffpr <- factor(encounter$cfrd_cffpr, levels = c("No", "Yes"), ordered = T)
encounter$cfrd_both <- factor(encounter$cfrd_both, levels = c("No", "Yes"), ordered = T)
# Remove those missing age
encounter <- encounter %>% filter(!is.na(Age))
```

```{r}
#| label: tbl-incidence_cffpr
#| tbl-cap: "Year-on-Year Incidence of CFRD Based on CFFPR Alone"
# For each year, pull everyone with and without CFRD that year
year_inc <- function(df = encounter, year, py = 1000) {
  # Filter and count
  inc <- df %>%
    filter(reviewyear == year, is.na(first_cfrd_cffpr) | first_cfrd_cffpr >= year) %>%
    group_by(eDWID) %>%
    filter(row_number() == 1) %>%
    select(eDWID, `Age Group`, cfrd_cffpr)
  inc <- inc %>%
    group_by(cfrd_cffpr) %>%
    count(`Age Group`, .drop = F)
  inc <- inc[!is.na(inc$`Age Group`), ]
  # Calculations
  new_cases <- sum(inc$n[inc$cfrd_cffpr == "Yes"])
  total_at_risk <- sum(inc$n)
  total_inc <- new_cases / (total_at_risk / py)

  new_cases_10 <- sum(inc$n[inc$cfrd_cffpr == "Yes" & inc$`Age Group` == "< 10"])
  at_risk_10 <- sum(inc$n[inc$`Age Group` == "< 10"])
  inc_10 <- new_cases_10 / (at_risk_10 / py)

  new_cases_10_18 <- sum(inc$n[inc$cfrd_cffpr == "Yes" & inc$`Age Group` == "10 - 18"])
  at_risk_10_18 <- sum(inc$n[inc$`Age Group` == "10 - 18"])
  inc_10_18 <- new_cases_10_18 / (at_risk_10_18 / py)

  new_cases_19_30 <- sum(inc$n[inc$cfrd_cffpr == "Yes" & inc$`Age Group` == "19 - 30"])
  at_risk_19_30 <- sum(inc$n[inc$`Age Group` == "19 - 30"])
  inc_19_30 <- new_cases_19_30 / (at_risk_19_30 / py)

  new_cases_30 <- sum(inc$n[inc$cfrd_cffpr == "Yes" & inc$`Age Group` == "> 30"])
  at_risk_30 <- sum(inc$n[inc$`Age Group` == "> 30"])
  inc_30 <- new_cases_30 / (at_risk_30 / py)

  # Nice results
  list(
    `Year` = year,
    `Total New Cases` = new_cases,
    `Total At Risk` = total_at_risk,
    `Total Incidence` = total_inc,
    `Total New Cases Age < 10` = new_cases_10,
    `Total At Risk Age < 10` = at_risk_10,
    `Total Incidence Age < 10` = inc_10,
    `Total New Cases Age 10-18` = new_cases_10_18,
    `Total At Risk Age 10-18` = at_risk_10_18,
    `Total Incidence Age 10-18` = inc_10_18,
    `Total New Cases Age 19-30` = new_cases_19_30,
    `Total At Risk Age 19-30` = at_risk_19_30,
    `Total Incidence Age 19-30` = inc_19_30,
    `Total New Cases Age > 30` = new_cases_30,
    `Total At Risk Age > 30` = at_risk_30,
    `Total Incidence Age > 30` = inc_30
  )
}
incidence <- lapply(2003:2018, function(y) {
  year_inc(year = y)
})
incidence <- data.frame(do.call(rbind, incidence), check.names = F)
incidence <- data.frame(lapply(incidence, as.numeric), check.names = F)
kable(incidence, digits = 3)
```

In @tbl-incidence_cffpr, incidence per year is calculated as the number of new CFRD diagnoses (by registry definition alone) per 1,000 person-years of those at risk, excluding previously identified cases.

```{r}
#| label: tbl-prevalence_cffpr
#| tbl-cap: "Yearly Prevalence of CFRD Based on CFFPR Alone"
encounter %>%
  group_by(eDWID, reviewyear) %>%
  summarise(cfrd = max(cfrd_cffpr), .groups = "drop") %>%
  group_by(reviewyear) %>%
  summarise(Prevalence = mean(as.numeric(cfrd) - 1, na.rm = T) * 100, .groups = "drop") %>%
  kable(., digits = 3)
```

```{r}
#| label: tbl-prevalence_cffpr_year
#| tbl-cap: "Yearly Prevalence of CFRD by Age Group Based on CFFPR Alone"
encounter %>%
  group_by(eDWID, reviewyear, `Age Group`) %>%
  summarise(cfrd = max(cfrd_cffpr), .groups = "drop") %>%
  group_by(reviewyear, `Age Group`) %>%
  summarise(Prevalence = mean(as.numeric(cfrd) - 1, na.rm = T) * 100, .groups = "drop") %>%
  pivot_wider(names_from = `Age Group`, values_from = Prevalence) %>%
  kable(., digits = 3)
```

In @tbl-prevalence_cffpr_year and @tbl-prevalence_cffpr, prevalence is calculated as the total number of CFRD cases (by registry definition alone) seen in clinic divided by the total number of people seen in clinic in a given year.

# CFRD screening rates

```{r}
#| label: tbl-screening_ogtt
#| tbl-cap: "Yearly OGTT Screening Rates"
year_screen <- function(df = encounter, year) {
  # Filter and count
  inc <- df %>%
    filter(reviewyear == year, first_cfrd_cffpr > year | is.na(first_cfrd_cffpr)) %>%
    mutate(ogtt = !is.na(ogttfast_bloodglucose) | !is.na(twohour_bloodglucose)) %>%
    group_by(eDWID) %>%
    summarise(ogtt = max(ogtt), `Age Group` = `Age Group`[1])
  inc <- inc %>%
    group_by(ogtt) %>%
    count(`Age Group`) %>%
    filter(`Age Group` != "< 10")
  # Calculations
  total_screened <- sum(inc$n[inc$ogtt == 1])
  total_seen <- sum(inc$n)
  screen_rate <- total_screened / total_seen * 100

  screened_10_18 <- inc$n[inc$ogtt == 1 & inc$`Age Group` == "10 - 18"]
  seen_10_18 <- sum(inc$n[inc$`Age Group` == "10 - 18"])
  rate_10_18 <- screened_10_18 / seen_10_18 * 100

  screened_19_30 <- inc$n[inc$ogtt == 1 & inc$`Age Group` == "19 - 30"]
  seen_19_30 <- sum(inc$n[inc$`Age Group` == "19 - 30"])
  rate_19_30 <- screened_19_30 / seen_19_30 * 100

  screened_30 <- inc$n[inc$ogtt == 1 & inc$`Age Group` == "> 30"]
  seen_30 <- sum(inc$n[inc$`Age Group` == "> 30"])
  rate_30 <- screened_30 / seen_30 * 100

  # Nice results
  list(
    `Year` = year,
    `Total Screened` = total_screened,
    `Total Seen` = total_seen,
    `Screen Rate (%)` = screen_rate,
    `Total Screened Age 10-18` = screened_10_18,
    `Total Seen Age 10-18` = seen_10_18,
    `Screen Rate Age 10-18 (%)` = rate_10_18,
    `Total Screened Age 19-30` = screened_19_30,
    `Total Seen Age 19-30` = seen_19_30,
    `Screen Rate Age 19-30 (%)` = rate_19_30,
    `Total Screened Age > 30` = screened_30,
    `Total Seen Age > 30` = seen_30,
    `Screen Rate Age > 30 (%)` = rate_30
  )
}
screen <- lapply(2003:2018, function(y) {
  year_screen(year = y)
})
screen <- data.frame(do.call(rbind, screen), check.names = F)
screen <- data.frame(lapply(screen, as.numeric), check.names = F)
kable(screen, digits = 3)
```

```{r}
#| label: tbl-screening_a1c
#| tbl-cap: "Yearly HbA1c Screening Rates"
year_screen <- function(df = encounter, year) {
  # Filter and count
  inc <- df %>%
    filter(reviewyear == year, first_cfrd_cffpr > year | is.na(first_cfrd_cffpr)) %>%
    mutate(a1c = !is.na(hgba1c)) %>%
    group_by(eDWID) %>%
    summarise(a1c = max(a1c), `Age Group` = `Age Group`[1])
  inc <- inc %>%
    group_by(a1c) %>%
    count(`Age Group`) %>%
    filter(`Age Group` != "< 10")
  # Calculations
  total_screened <- sum(inc$n[inc$a1c == 1])
  total_seen <- sum(inc$n)
  screen_rate <- total_screened / total_seen * 100

  screened_10_18 <- inc$n[inc$a1c == 1 & inc$`Age Group` == "10 - 18"]
  seen_10_18 <- sum(inc$n[inc$`Age Group` == "10 - 18"])
  rate_10_18 <- screened_10_18 / seen_10_18 * 100

  screened_19_30 <- inc$n[inc$a1c == 1 & inc$`Age Group` == "19 - 30"]
  seen_19_30 <- sum(inc$n[inc$`Age Group` == "19 - 30"])
  rate_19_30 <- screened_19_30 / seen_19_30 * 100

  screened_30 <- inc$n[inc$a1c == 1 & inc$`Age Group` == "> 30"]
  seen_30 <- sum(inc$n[inc$`Age Group` == "> 30"])
  rate_30 <- screened_30 / seen_30 * 100

  # Nice results
  list(
    `Year` = year,
    `Total Screened` = total_screened,
    `Total Seen` = total_seen,
    `Screen Rate (%)` = screen_rate,
    `Total Screened Age 10-18` = screened_10_18,
    `Total Seen Age 10-18` = seen_10_18,
    `Screen Rate Age 10-18 (%)` = rate_10_18,
    `Total Screened Age 19-30` = screened_19_30,
    `Total Seen Age 19-30` = seen_19_30,
    `Screen Rate Age 19-30 (%)` = rate_19_30,
    `Total Screened Age > 30` = screened_30,
    `Total Seen Age > 30` = seen_30,
    `Screen Rate Age > 30 (%)` = rate_30
  )
}
screen <- lapply(2003:2018, function(y) {
  year_screen(year = y)
})
screen <- data.frame(do.call(rbind, screen), check.names = F)
screen <- data.frame(lapply(screen, as.numeric), check.names = F)
kable(screen, digits = 3)
```

In @tbl-screening_ogtt and @tbl-screening_a1c, people with CFRD (by registry definition) and those under age 10 were excluded. Screening rate is calculated as the number of people with an OGTT or HbA1c, respectively, divided by the total number of people seen in clinic that year.

# Data cleaning

```{r}
# Import data and codebook
annual <- read.csv("./Data_Raw/CFF19_Annualized_Del1.csv",
  na.strings = c("", "N/A")
)
data_dict <- readxl::read_excel("./Data_Raw/Copy of Codes for CFFPR_2018.xlsx")
data_dict$var <- paste(data_dict$field_name, data_dict$code_value, sep = "_")
# Remove those with T1D or T2D
annual <- annual %>% arrange(eDWID, ReviewYear)
annual <- annual[!annual$cfrd_status_annual %in% c(4, 5), ]
annual$cfrd_status_annual <- factor(annual$cfrd_status_annual,
  levels = 1:3,
  labels = c("CFRD-", "CFRD-", "CFRD+")
)
annual$age_2018 <- 2018 - (annual$ReviewYear - annual$Age_YrEnd)
annual <- annual %>%
  group_by(eDWID) %>%
  mutate(age_2018 = as.numeric(names(sort(table(age_2018),
    decreasing = TRUE
  )[1])))
# Get mutations
demogs <- read.csv("./Data_Raw/CFF19_DemogCFDiag_Del1.csv")
demogs <- demogs %>% select(eDWID, Gender, MutClass)
annual <- left_join(annual, demogs, by = join_by(eDWID))
# Variable formatting
# If A_supplement_feeding is 0, then A_feeding2 is also 0 because they are not
# on any supplemental feeding
# Include all kinds of tube feeds
annual$A_feeding2[annual$A_supplement_feeding == 0] <- 0
annual$A_feeding3[annual$A_supplement_feeding == 0] <- 0
annual$A_feeding4[annual$A_supplement_feeding == 0] <- 0
tube_fields <- c("A_feeding2", "A_feeding3", "A_feeding4")
annual$tube_feeding <-
  apply(annual[, tube_fields], 1, function(r) {
    if (all(is.na(r))) {
      return(NA)
    } else {
      return(max(as.numeric(r), na.rm = T))
    }
  })
# Liver disease
liver_fields <- c("A_hepatobiliary1_3", paste0("A_hepatobiliary2_", 1:4))
annual$liver_disease <-
  apply(annual[, liver_fields], 1, function(r) {
    if (all(is.na(r))) {
      return(NA)
    } else {
      return(max(as.numeric(r), na.rm = T))
    }
  })
# Calculate percentiles
annual$bmi <- annual$A_weight / ((annual$A_height / 100)^2)
annual$age_perc <- ifelse(annual$Age_YrEnd < 20, annual$Age_YrEnd, 20)
annual$height_perc <- sds(annual$A_height,
  age = annual$age_perc,
  sex = annual$Gender, male = "M", female = "F",
  item = "height2_20", ref = cdc.ref, type = "perc"
) * 100
annual$bmi_perc <- sds(annual$bmi,
  age = annual$age_perc,
  sex = annual$Gender, male = "M", female = "F",
  item = "bmi", ref = cdc.ref, type = "perc"
) * 100
# Format columns
annual$MutClass <- factor(annual$MutClass,
  levels = c("1-3", "4-5", "Oth", "N/A"),
  labels = c("1-3", "4-5", "Oth", "Unknown")
)
annual$NumPulmExacerbation <- cut(annual$NumPulmExacerbation,
  labels = c("0", "1", "2", ">=3"),
  breaks = c(0, 1, 2, 3, Inf), right = F
)
annual$A_FEV1_pct_predicted <- cut(annual$A_FEV1_pct_predicted,
  breaks = c(0, 40, 80, 100, Inf), right = F
)
annual$A_FEV1_pct_predicted <- relevel(annual$A_FEV1_pct_predicted,
  ref = "[100,Inf)"
)
annual$height_perc <- cut(annual$height_perc, breaks = c(0, 10, 25, 50, Inf))
annual$height_perc <- relevel(annual$height_perc, ref = "(50,Inf]")
annual$bmi_perc <- cut(annual$bmi_perc, breaks = c(0, 10, 50, 85, Inf))
annual$bmi_perc <- relevel(annual$bmi_perc, ref = "(50,85]")
annual$age_group <- cut(annual$Age_YrEnd,
  breaks = c(-Inf, 10, 18, 30, Inf),
  right = F
)
annual$age_group <- relevel(annual$age_group, ref = "[10,18)")
# Bugs
bugs <- c(
  "A_pseudomonasaeruginosa", "A_fungalyeast1",
  "A_pulmonarycomplications1", "A_mycocultureresults3"
)
# Yes/No variables
yn_vars <- c(
  "A_IsOnEnzymes", "A_corticosteroids1", "A_feeding2",
  "A_Vx770", "A_VX809comb", bugs, "tube_feeding", "liver_disease"
)
annual[, yn_vars] <- lapply(annual[, yn_vars], factor,
  levels = 0:1,
  labels = c("No", "Yes")
)
annual$A_IsOnEnzymes <- relevel(annual$A_IsOnEnzymes, ref = "Yes")
# To have CFRD, must have two consecutive visits with CFRD
# Once diagnosed, always in CFRD group.
annual = annual %>%
  group_by(eDWID) %>%
  mutate(two_consec = 0)
```

Registry fields included in our liver disease yes/no variable were:

```{r}
data.frame(data_dict$code_meaning[data_dict$var %in%
  sub("A_", "", liver_fields)]) %>%
  gt() %>%
  tab_options(column_labels.hidden = TRUE)
```

Registry fields included in our tube feeding yes/no variable were:

```{r}
data.frame(data_dict$code_meaning[
  paste0(data_dict$field_name, data_dict$code_value) %in%
    sub("A_", "", tube_fields)
]) %>%
  gt() %>%
  tab_options(column_labels.hidden = TRUE)
```

# Survival analysis

Based on CFFPR annualized data.

```{r}
# Create survival dataset
s <- annual %>%
  rename(end = ReviewYear) %>% # ReviewYear is the end of the interval
  group_by(eDWID) %>%
  mutate(start = lag(end,default = 2002)) %>% # Get interval start
  select(eDWID, start, end, Age_YrEnd, cfrd_status_annual) # Sort columns
# Age group
s$age_group <- cut(s$Age_YrEnd,
  breaks = c(-Inf, 10, 19, 31, Inf), right = F
)
knitr::kable(head(s,40))
```

```{r}
# New dataset approach
cases = unique(annual$eDWID[annual$cfrd_status_annual == "CFRD+"])
controls_df = annual[!annual$eDWID %in% cases,]
cases_df = annual[annual$eDWID %in% cases,]
# Controls
tc = controls_df %>% 
  select(eDWID,ReviewYear,cfrd_status_annual) %>%
  filter(!is.na(cfrd_status_annual)) %>%
  group_by(eDWID) %>%
  summarise(start = first(ReviewYear),
         end = last(ReviewYear),.groups = "drop") %>%
  mutate(cfrd = 0)
# Cases
tc2 = cases_df %>% 
  select(eDWID,ReviewYear,cfrd_status_annual) %>%
  filter(!is.na(cfrd_status_annual)) %>%
  mutate(neg_year = ReviewYear * (ifelse(cfrd_status_annual=="CFRD-",-1,1))) %>%
  arrange(eDWID,cfrd_status_annual,neg_year) %>%
  group_by(eDWID,cfrd_status_annual) %>% 
  filter(row_number()==1)
```

```{r}
# Survival fit
surv_obj <- Surv(
  time = s$start, time2 = s$end,
  event = as.numeric(s$cfrd_status_annual) - 1
)
fit <- survfit(surv_obj ~ age_group, id = eDWID, data = s)
ggsurvplot(fit,
  risk.table = T, cumevents = T,
  fun = "event", xlim = c(2002, 2018)
)
```
