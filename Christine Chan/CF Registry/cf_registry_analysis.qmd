---
title: "CF Registry Analysis"
author: "Tim Vigers"
date: "today"
date-format: long
format:
  html:
    toc: true
    toc-depth: 5
    toc-float: true
    code-fold: true
    self-contained: true
    fig-cap-location: top
    page-layout: full
execute:
  echo: false
  warning: false
editor: source
---

```{r}
#| include: false
library(knitr)
library(tidyverse)
library(forestmodel)
library(childsds)
```

# Logistic analyses

Any participants with T1D or T2D were excluded from these analyses. Variables that were entirely missing in a given year (e.g., `A_Vx770` and `A_VX809comb` in 2005) were excluded from those models. Participants under age 10 at year end were also excluded due to missing PFT data.

```{r}
# Import and clean data
annual <- read.csv("/Users/timvigers/Dropbox/Work/Christine Chan/CF registry data/Data_Raw/CFF19_Annualized_Del1.csv",
  na.strings = c("", "N/A")
)
annual <- annual %>% filter(cfrd_status_annual != 4, cfrd_status_annual != 5)
annual$cfrd_status_annual <- factor(annual$cfrd_status_annual,
  levels = 1:3,
  labels = c("CFRD-", "CFRD-", "CFRD+")
)
demogs <- read.csv("/Users/timvigers/Dropbox/Work/Christine Chan/CF registry data/Data_Raw/CFF19_DemogCFDiag_Del1.csv")
demogs <- demogs %>% select(eDWID, Gender, MutClass)
annual <- left_join(annual, demogs, by = join_by(eDWID))
# Analysis function
log_reg <- function(year) {
  # Clean data
  df <- annual %>%
    filter(ReviewYear == year, Age_YrEnd >= 10) %>%
    select(
      eDWID, Age_YrEnd, Gender, MutClass, A_IsOnEnzymes, A_FEV1, A_FEV1_pct_predicted,
      A_bmivalue, A_bmipercentile, A_height, A_weight, A_heightpercentile,
      A_supplement_feeding, A_feeding2:A_feeding4,
      NumPulmExacerbation, A_pseudomonasaeruginosa,
      A_fungalyeast1, A_pulmonarycomplications1, A_mycocultureresults3,
      A_corticosteroids1, cfrd_status_annual, A_Vx770, A_VX809comb,
      A_hepatobiliary1_3, contains("A_hepatobiliary2_")
    )
  # If A_supplement_feeding is 0, then A_feeding2 is also 0 because they are not
  # on any supplemental feeding
  # Include all kinds of tube feeds
  df$A_feeding2[df$A_supplement_feeding == 0] <- 0
  df$A_feeding3[df$A_supplement_feeding == 0] <- 0
  df$A_feeding4[df$A_supplement_feeding == 0] <- 0
  df$tube_feeding <-
    apply(df[, c("A_feeding2", "A_feeding3", "A_feeding4")], 1, function(r) {
      if (all(is.na(r))) {
        return(NA)
      } else {
        return(max(as.numeric(r), na.rm = T))
      }
    })
  # Liver disease
  liver <- c("A_hepatobiliary1_3", paste0("A_hepatobiliary2_", 1:4))
  df$liver_disease <-
    apply(df[, liver], 1, function(r) {
      if (all(is.na(r))) {
        return(NA)
      } else {
        return(max(as.numeric(r), na.rm = T))
      }
    })
  # Calculate percentiles
  df$bmi <- df$A_weight / ((df$A_height / 100)^2)
  df$age_perc <- ifelse(df$Age_YrEnd < 20, df$Age_YrEnd, 20)
  df$height_perc <- sds(df$A_height,
    age = df$age_perc,
    sex = df$Gender, male = "M", female = "F",
    item = "height2_20", ref = cdc.ref, type = "perc"
  ) * 100
  df$bmi_perc <- sds(df$bmi,
    age = df$age_perc,
    sex = df$Gender, male = "M", female = "F",
    item = "bmi", ref = cdc.ref, type = "perc"
  ) * 100
  # Format columns
  df$MutClass <- factor(df$MutClass,
    levels = c("1-3", "4-5", "Oth", "N/A"),
    labels = c("1-3", "4-5", "Oth", "Unknown")
  )
  df$NumPulmExacerbation <- cut(df$NumPulmExacerbation,
    labels = c("0", "1", "2", ">=3"),
    breaks = c(0, 1, 2, 3, Inf), right = F
  )
  df$A_FEV1_pct_predicted <- cut(df$A_FEV1_pct_predicted,
    breaks = c(0, 40, 80, 100, Inf), right = F
  )
  df$A_FEV1_pct_predicted <- relevel(df$A_FEV1_pct_predicted, ref = "[100,Inf)")
  df$height_perc <- cut(df$height_perc, breaks = c(0, 10, 25, 50, Inf))
  df$height_perc <- relevel(df$height_perc, ref = "(50,Inf]")
  df$bmi_perc <- cut(df$bmi_perc, breaks = c(0, 10, 50, 85, Inf))
  df$bmi_perc <- relevel(df$bmi_perc, ref = "(50,85]")
  df$age_group <- cut(df$Age_YrEnd, breaks = c(10, 18, 30, Inf), right = F)
  df$age_group <- relevel(df$age_group, ref = "[10,18)")
  # Bugs
  bugs <- c(
    "A_pseudomonasaeruginosa", "A_fungalyeast1",
    "A_pulmonarycomplications1", "A_mycocultureresults3"
  )
  # Yes/No variables
  yn_vars <- c(
    "A_IsOnEnzymes", "A_corticosteroids1", "A_feeding2",
    "A_Vx770", "A_VX809comb", bugs, "tube_feeding", "liver_disease"
  )
  df[, yn_vars] <- lapply(df[, yn_vars], factor, levels = 0:1, labels = c("No", "Yes"))
  df$A_IsOnEnzymes <- relevel(df$A_IsOnEnzymes, ref = "Yes")
  # Remove all empty columns
  empty <- which(colSums(is.na(df)) == nrow(df))
  if (length(empty) > 0) {
    df <- df[, -empty]
  }
  # Models
  vars <- colnames(df)[which(!colnames(df) %in%
    c(
      bugs, "cfrd_status_annual", "eDWID", "A_bmivalue",
      "A_bmipercentile", "A_height", "A_heightpercentile",
      "Age_YrEnd", "A_weight", "bmi", "age_perc",
      "A_supplement_feeding", "A_feeding2", "A_feeding3",
      "A_feeding4", "A_FEV1", liver
    ))]
  base_mod <- as.formula(paste0("cfrd_status_annual~", paste0(vars, collapse = "+")))
  # Labels
  labels <- list(
    cfrd_status_annual = "CFRD Status", MutClass = "Mutation class",
    Gender = "Sex", A_IsOnEnzymes = "Pancreatic enzyme use",
    A_FEV1_pct_predicted = "FEV1 percent predicted",
    tube_feeding = "Enteric feedings", liver_disease = "Liver disease",
    A_corticosteroids1 = "Use of corticosteroids",
    NumPulmExacerbation = "Admissions for PEx", age_group = "Age group",
    height_perc = "Height percentile", bmi_perc = "BMI percentile",
    A_Vx770 = "Use of CFTR modulator Vx770",
    A_VX809comb = "Use of CFTR modulator Vx809 combination",
    A_pseudomonasaeruginosa = "Pseudomonas aeruginosa",
    A_fungalyeast1 = "Aspergillus (any species)",
    A_pulmonarycomplications1 = "ABPA",
    A_mycocultureresults3 = "Microorganisms in myco culture"
  )
  var_label(df[, vars[which(vars %in% colnames(df))]]) <-
    as.character(labels[vars[which(vars %in% colnames(df))]])
  var_label(df[, bugs[which(bugs %in% colnames(df))]]) <-
    as.character(labels[bugs[which(bugs %in% colnames(df))]])
  # Simple models
  mod1 <- glm(base_mod, data = df, family = "binomial")
  # Print results
  cat("\n")
  cat("### Base Model")
  cat("\n")
  cat("\n")
  print(forest_model(mod1, exclude_infinite_cis = F))
  cat("\n")
  if ("A_pseudomonasaeruginosa" %in% colnames(df)) {
    mod2 <- glm(update(base_mod, . ~ . + A_pseudomonasaeruginosa), data = df, family = "binomial")
    cat("\n")
    cat("### P. aeruginosa")
    cat("\n")
    cat("\n")
    print(forest_model(mod2, exclude_infinite_cis = F))
    cat("\n")
  }
  if ("A_fungalyeast1" %in% colnames(df)) {
    mod3 <- glm(update(base_mod, . ~ . + A_fungalyeast1), data = df, family = "binomial")
    cat("\n")
    cat("### Aspergillus")
    cat("\n")
    cat("\n")
    print(forest_model(mod3, exclude_infinite_cis = F))
    cat("\n")
  }
  if ("A_pulmonarycomplications1" %in% colnames(df)) {
    mod4 <- glm(update(base_mod, . ~ . + A_pulmonarycomplications1), data = df, family = "binomial")
    cat("\n")
    cat("### ABPA")
    cat("\n")
    cat("\n")
    print(forest_model(mod4, exclude_infinite_cis = F))
    cat("\n")
  }
  if ("A_mycocultureresults3" %in% colnames(df)) {
    mod5 <- glm(update(base_mod, . ~ . + A_mycocultureresults3), data = df, family = "binomial")
    cat("\n")
    cat("### Mycobacterium")
    cat("\n")
    cat("\n")
    print(forest_model(mod5, exclude_infinite_cis = F))
    cat("\n")
  }
}
```

## 2006

```{r results='asis',fig.height=10,fig.width=10}
log_reg(2006)
```

## 2013

```{r results='asis',fig.height=10,fig.width=10}
log_reg(2013)
```

## 2018

```{r results='asis',fig.height=10,fig.width=10}
log_reg(2018)
```

# Questions

1. What variables do we use for B. Cepacia and liver disease?
2. Do we have CFTR modulator data aside from `Vx770` and `Vx809comb`?
