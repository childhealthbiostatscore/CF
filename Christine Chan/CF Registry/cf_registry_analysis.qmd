---
title: "CF Registry Analysis"
author: "Tim Vigers"
date: "`r format(Sys.time(), '%d %B %Y')`"
format:
  html:
    code-fold: true
    self-contained: true
    page-layout: full
editor: source
---

```{r}
#| include: false
library(knitr)
library(tidyverse)
library(table1)
library(pROC)
```

# Incidence and Prevalence

```{r}
# All data
encounter <- read.csv("/Users/timvigers/Documents/Work/Christine Chan/CF registry data/CFF19_encountersMerged_Del1.csv",
                      na.strings = c("", "N/A")
)
annual <- read.csv("/Users/timvigers/Documents/Work/Christine Chan/CF registry data/CFF19_Annualized_Del1.csv",
                   na.strings = c("", "N/A")
)
encounter <- encounter %>%
  arrange(eDWID, reviewyear, encounternum)
annual = annual %>% arrange(eDWID,ReviewYear)
# Add age
ages <- annual %>% 
  mutate(`Age in 2018` = 2018-(ReviewYear-Age_YrEnd)) %>%
  rename(reviewyear = ReviewYear) %>%
  group_by(eDWID,reviewyear) %>%
  summarise(`Age in 2018` = as.numeric(names(sort(table(`Age in 2018`), 
                                                  decreasing = TRUE)[1])),
            Age = Age_YrEnd[1],.groups = "drop")
encounter = left_join(encounter,ages,by = c("eDWID", "reviewyear"))
encounter$`Age Group 2018` = cut(encounter$`Age in 2018`,
                                 c(-Inf,10,19,31,Inf),
                                 labels = c("< 10", "10 - 18", "19 - 30", "> 30"),
                                 right=F)
encounter$`Age Group` = cut(encounter$Age,
                            c(-Inf,10,19,31,Inf),
                            labels = c("< 10", "10 - 18", "19 - 30", "> 30"),
                            right=F)
# For those with CFRD by OGTT, find first visit with diagnosis
first_cfrd_ogtt <- encounter %>% 
  filter(twohour_bloodglucose >= 200) %>%
  group_by(eDWID) %>%
  filter(row_number()==1) %>%
  select(eDWID, reviewyear, `Age in 2018`) %>%
  rename(first_cfrd_ogtt = reviewyear)
# For those with CFRD by registry criteria, find first visit with diagnosis
first_cfrd_cffpr <- encounter %>% 
  filter(cfrd_status==3) %>%
  group_by(eDWID) %>%
  filter(row_number()==1) %>%
  select(eDWID, reviewyear, `Age in 2018`) %>%
  rename(first_cfrd_cffpr = reviewyear)
# Both
first_cfrd_both <- encounter %>% 
  filter(cfrd_status==3|twohour_bloodglucose >= 200) %>%
  group_by(eDWID) %>%
  filter(row_number()==1) %>%
  select(eDWID, reviewyear, `Age in 2018`) %>%
  rename(first_cfrd_both = reviewyear)
# Add to encounter level data
encounter <- left_join(encounter, first_cfrd_ogtt, by = c("eDWID", "Age in 2018"))
encounter <- left_join(encounter, first_cfrd_cffpr, by = c("eDWID", "Age in 2018"))
encounter <- left_join(encounter, first_cfrd_both,by = c("eDWID", "Age in 2018"))
# Fill down CFRD Yes/No by year
encounter <- encounter %>%
  group_by(eDWID) %>%
  mutate(
    cfrd_ogtt = case_when(
      reviewyear < first_cfrd_ogtt ~ "No",
      reviewyear >= first_cfrd_ogtt ~ "Yes"
    ),
    cfrd_cffpr = case_when(
      reviewyear < first_cfrd_cffpr ~ "No",
      reviewyear >= first_cfrd_cffpr ~ "Yes"
    ),
    cfrd_both = case_when(
      reviewyear < first_cfrd_both ~ "No",
      reviewyear >= first_cfrd_both ~ "Yes"
    )
  ) %>%
  ungroup()
encounter$cfrd_ogtt[is.na(encounter$cfrd_ogtt)] <- "No"
encounter$cfrd_cffpr[is.na(encounter$cfrd_cffpr)] <- "No"
encounter$cfrd_both[is.na(encounter$cfrd_both)] <- "No"
# Ordered factors
encounter$cfrd_ogtt = factor(encounter$cfrd_ogtt,levels = c("No","Yes"),ordered = T)
encounter$cfrd_cffpr = factor(encounter$cfrd_cffpr,levels = c("No","Yes"),ordered = T)
encounter$cfrd_both = factor(encounter$cfrd_both,levels = c("No","Yes"),ordered = T)
# Remove those missing age
encounter = encounter %>% filter(!is.na(Age))
```

```{r}
#| label: tbl-incidence_cffpr
#| tbl-cap: "Year-on-Year Incidence of CFRD Based on CFFPR Alone"
# For each year, pull everyone with and without CFRD that year
year_inc = function(df=encounter,year,py = 1000){
  # Filter and count
  inc = df %>%  
    filter(reviewyear==year,is.na(first_cfrd_cffpr) | first_cfrd_cffpr >= year) %>%
    group_by(eDWID) %>% filter(row_number() == 1) %>% 
    select(eDWID,`Age Group`,cfrd_cffpr)
  inc = inc %>% group_by(cfrd_cffpr) %>% count(`Age Group`,.drop = F)
  inc = inc[!is.na(inc$`Age Group`),]
  # Calculations
  new_cases = sum(inc$n[inc$cfrd_cffpr=="Yes"])
  total_at_risk = sum(inc$n)
  total_inc = new_cases/(total_at_risk/py)
  
  new_cases_10 = sum(inc$n[inc$cfrd_cffpr=="Yes" & inc$`Age Group` == "< 10"])
  at_risk_10 = sum(inc$n[inc$`Age Group` == "< 10"])
  inc_10 = new_cases_10/(at_risk_10/py)
  
  new_cases_10_18 = sum(inc$n[inc$cfrd_cffpr=="Yes" & inc$`Age Group` == "10 - 18"])
  at_risk_10_18 = sum(inc$n[inc$`Age Group` == "10 - 18"])
  inc_10_18 = new_cases_10_18/(at_risk_10_18/py)
  
  new_cases_19_30 = sum(inc$n[inc$cfrd_cffpr=="Yes" & inc$`Age Group` == "19 - 30"])
  at_risk_19_30 = sum(inc$n[inc$`Age Group` == "19 - 30"])
  inc_19_30 = new_cases_19_30/(at_risk_19_30/py)
  
  new_cases_30 = sum(inc$n[inc$cfrd_cffpr=="Yes" & inc$`Age Group` == "> 30"])
  at_risk_30 = sum(inc$n[inc$`Age Group` == "> 30"])
  inc_30 = new_cases_30/(at_risk_30/py)
  
  # Nice results
  list(`Year` = year,
       `Total New Cases` = new_cases,
       `Total At Risk` = total_at_risk,
       `Total Incidence` = total_inc,
       
       `Total New Cases Age < 10` = new_cases_10,
       `Total At Risk Age < 10` = at_risk_10,
       `Total Incidence Age < 10` = inc_10,
       
       `Total New Cases Age 10-18` = new_cases_10_18,
       `Total At Risk Age 10-18` = at_risk_10_18,
       `Total Incidence Age 10-18` = inc_10_18,
       
       `Total New Cases Age 19-30` = new_cases_19_30,
       `Total At Risk Age 19-30` = at_risk_19_30,
       `Total Incidence Age 19-30` = inc_19_30,
       
       `Total New Cases Age > 30` = new_cases_30,
       `Total At Risk Age > 30` = at_risk_30,
       `Total Incidence Age > 30` = inc_30)
}
incidence = lapply(2003:2018, function(y){year_inc(year = y)})
incidence = data.frame(do.call(rbind,incidence),check.names = F)
incidence = data.frame(lapply(incidence,as.numeric),check.names = F)
kable(incidence,digits = 3)
```

In @tbl-incidence_cffpr, incidence per year is calculated as the number of new CFRD diagnoses (by registry definition alone) per 1,000 person-years of those at risk, excluding previously identified cases.

```{r}
#| label: tbl-prevalence_cffpr_year
#| tbl-cap: "Yearly Prevalence of CFRD by Age Group Based on CFFPR Alone"
encounter %>% group_by(eDWID,reviewyear,`Age Group`) %>% 
  summarise(cfrd = max(cfrd_cffpr),.groups = "drop") %>%
  group_by(reviewyear,`Age Group`) %>%
  summarise(Prevalence = mean(as.numeric(cfrd)-1,na.rm = T)*100,.groups = "drop") %>%
  pivot_wider(names_from = `Age Group`,values_from = Prevalence) %>%
  kable(.,digits = 3)
```

```{r}
#| label: tbl-prevalence_cffpr
#| tbl-cap: "Yearly Prevalence of CFRD Based on CFFPR Alone"
encounter %>% group_by(eDWID,reviewyear) %>% 
  summarise(cfrd = max(cfrd_cffpr),.groups = "drop") %>%
  group_by(reviewyear) %>%
  summarise(Prevalence = mean(as.numeric(cfrd)-1,na.rm = T)*100,.groups = "drop") %>%
  kable(.,digits = 3)
```

In @tbl-prevalence_cffpr_year and @tbl-prevalence_cffpr, prevalence is calculated as the total number of CFRD cases (by registry definition alone) seen in clinic divided by the total number of people seen in clinic in a given year.

```{r}
#| label: tbl-incidence_both
#| tbl-cap: "Year-on-Year Incidence of CFRD Based on CFFPR and OGTT"
# For each year, pull everyone with and without CFRD that year
year_inc = function(df=encounter,year,py = 1000){
  # Filter and count
  inc = df %>% 
    filter(reviewyear==year,is.na(first_cfrd_both) | first_cfrd_both >= year) %>%
    group_by(eDWID) %>% filter(row_number() == 1) %>%
    select(eDWID,reviewyear,encounternum,`Age Group`,
           twohour_bloodglucose,cfrd_both,first_cfrd_both)
  inc = inc %>% group_by(cfrd_both) %>% count(`Age Group`,.drop = F)
  inc = inc[!is.na(inc$`Age Group`),]
  # Calculations
  new_cases = sum(inc$n[inc$cfrd_both=="Yes"])
  total_at_risk = sum(inc$n)
  total_inc = new_cases/(total_at_risk/py)
  
  new_cases_10 = sum(inc$n[inc$cfrd_both=="Yes" & inc$`Age Group` == "< 10"])
  at_risk_10 = sum(inc$n[inc$`Age Group` == "< 10"])
  inc_10 = new_cases_10/(at_risk_10/py)
  
  new_cases_10_18 = sum(inc$n[inc$cfrd_both=="Yes" & inc$`Age Group` == "10 - 18"])
  at_risk_10_18 = sum(inc$n[inc$`Age Group` == "10 - 18"])
  inc_10_18 = new_cases_10_18/(at_risk_10_18/py)
  
  new_cases_19_30 = sum(inc$n[inc$cfrd_both=="Yes" & inc$`Age Group` == "19 - 30"])
  at_risk_19_30 = sum(inc$n[inc$`Age Group` == "19 - 30"])
  inc_19_30 = new_cases_19_30/(at_risk_19_30/py)
  
  new_cases_30 = sum(inc$n[inc$cfrd_both=="Yes" & inc$`Age Group` == "> 30"])
  at_risk_30 = sum(inc$n[inc$`Age Group` == "> 30"])
  inc_30 = new_cases_30/(at_risk_30/py)
  
  # Nice results
  list(`Year` = year,
       `Total New Cases` = new_cases,
       `Total At Risk` = total_at_risk,
       `Total Incidence` = total_inc,
       
       `Total New Cases Age < 10` = new_cases_10,
       `Total At Risk Age < 10` = at_risk_10,
       `Total Incidence Age < 10` = inc_10,
       
       `Total New Cases Age 10-18` = new_cases_10_18,
       `Total At Risk Age 10-18` = at_risk_10_18,
       `Total Incidence Age 10-18` = inc_10_18,
       
       `Total New Cases Age 19-30` = new_cases_19_30,
       `Total At Risk Age 19-30` = at_risk_19_30,
       `Total Incidence Age 19-30` = inc_19_30,
       
       `Total New Cases Age > 30` = new_cases_30,
       `Total At Risk Age > 30` = at_risk_30,
       `Total Incidence Age > 30` = inc_30)
}
incidence = lapply(2003:2018, function(y){year_inc(year = y)})
incidence = data.frame(do.call(rbind,incidence),check.names = F)
incidence = data.frame(lapply(incidence,as.numeric),check.names = F)
kable(incidence,digits = 3)
```

In @tbl-incidence_both, incidence per year is calculated as the number of new CFRD diagnoses (by either registry definition or OGTT, whichever happened first) per 1,000 person-years of those at risk, excluding previously identified cases.

```{r}
#| label: tbl-prevalence_both_year
#| tbl-cap: "Yearly Prevalence of CFRD by Age Group Based on CFFPR and OGTT"
encounter$cfrd_both = factor(encounter$cfrd_both,levels = c("No","Yes"),ordered = T)
encounter %>% group_by(eDWID,reviewyear,`Age Group`) %>% 
  summarise(cfrd = max(cfrd_both),.groups = "drop") %>%
  group_by(reviewyear,`Age Group`) %>%
  summarise(`Prevalence` = mean(as.numeric(cfrd)-1,na.rm = T)*100,.groups = "drop") %>%
  pivot_wider(names_from = `Age Group`,values_from = Prevalence)%>%
  kable(.,digits = 3)
```

```{r}
#| label: tbl-prevalence_both
#| tbl-cap: "Yearly Prevalence of CFRD Based on CFFPR and OGTT"
encounter %>% group_by(eDWID,reviewyear) %>% 
  summarise(cfrd = max(cfrd_both),.groups = "drop") %>%
  group_by(reviewyear) %>%
  summarise(`Prevalence` = mean(as.numeric(cfrd)-1,na.rm = T)*100,.groups = "drop") %>%
  kable(.,digits = 3)
```

In @tbl-prevalence_both_year and @tbl-prevalence_both, prevalence is calculated as the total number of CFRD cases (by either registry definition or OGTT) seen in clinic divided by the total number of people seen in clinic in a given year.

```{r}
#| label: tbl-screening_ogtt
#| tbl-cap: "Yearly OGTT Screening Rates"
year_screen = function(df=encounter,year){
  # Filter and count
  inc = df %>% 
    filter(reviewyear==year,first_cfrd_cffpr > year | is.na(first_cfrd_cffpr)) %>%
    mutate(ogtt = !is.na(ogttfast_bloodglucose) | !is.na(twohour_bloodglucose)) %>%
    group_by(eDWID) %>%
    summarise(ogtt = max(ogtt),`Age Group` = `Age Group`[1])
  inc = inc %>% group_by(ogtt) %>% count(`Age Group`) %>% filter(`Age Group` != "< 10")
  # Calculations
  total_screened = sum(inc$n[inc$ogtt==1])
  total_seen = sum(inc$n)
  screen_rate = total_screened/total_seen * 100
  
  screened_10_18 = inc$n[inc$ogtt==1 & inc$`Age Group` == "10 - 18"]
  seen_10_18 = sum(inc$n[inc$`Age Group` == "10 - 18"])
  rate_10_18 = screened_10_18/seen_10_18 *100
  
  screened_19_30 = inc$n[inc$ogtt==1 & inc$`Age Group` == "19 - 30"]
  seen_19_30 = sum(inc$n[inc$`Age Group` == "19 - 30"])
  rate_19_30 = screened_19_30/seen_19_30 *100
  
  screened_30 = inc$n[inc$ogtt==1 & inc$`Age Group` == "> 30"]
  seen_30 = sum(inc$n[inc$`Age Group` == "> 30"])
  rate_30 = screened_30/seen_30 *100
  
  # Nice results
  list(`Year` = year,
       `Total Screened` = total_screened,
       `Total Seen` = total_seen,
       `Screen Rate (%)` = screen_rate,
       
       `Total Screened Age 10-18` = screened_10_18,
       `Total Seen Age 10-18` = seen_10_18,
       `Screen Rate Age 10-18 (%)` = rate_10_18,
       
       `Total Screened Age 19-30` = screened_19_30,
       `Total Seen Age 19-30` = seen_19_30,
       `Screen Rate Age 19-30 (%)` = rate_19_30,
       
       `Total Screened Age > 30` = screened_30,
       `Total Seen Age > 30` = seen_30,
       `Screen Rate Age > 30 (%)` = rate_30)
}
screen = lapply(2003:2018, function(y){year_screen(year = y)})
screen = data.frame(do.call(rbind,screen),check.names = F)
screen = data.frame(lapply(screen,as.numeric),check.names = F)
kable(screen,digits = 3)
```

```{r}
#| label: tbl-screening_a1c
#| tbl-cap: "Yearly HbA1c Screening Rates"
year_screen = function(df=encounter,year){
  # Filter and count
  inc = df %>% 
    filter(reviewyear==year,first_cfrd_cffpr > year | is.na(first_cfrd_cffpr)) %>%
    mutate(a1c = !is.na(hgba1c)) %>%
    group_by(eDWID) %>%
    summarise(a1c = max(a1c),`Age Group` = `Age Group`[1])
  inc = inc %>% group_by(a1c) %>% count(`Age Group`) %>% filter(`Age Group` != "< 10")
  # Calculations
  total_screened = sum(inc$n[inc$a1c==1])
  total_seen = sum(inc$n)
  screen_rate = total_screened/total_seen * 100
  
  screened_10_18 = inc$n[inc$a1c==1 & inc$`Age Group` == "10 - 18"]
  seen_10_18 = sum(inc$n[inc$`Age Group` == "10 - 18"])
  rate_10_18 = screened_10_18/seen_10_18 *100
  
  screened_19_30 = inc$n[inc$a1c==1 & inc$`Age Group` == "19 - 30"]
  seen_19_30 = sum(inc$n[inc$`Age Group` == "19 - 30"])
  rate_19_30 = screened_19_30/seen_19_30 *100
  
  screened_30 = inc$n[inc$a1c==1 & inc$`Age Group` == "> 30"]
  seen_30 = sum(inc$n[inc$`Age Group` == "> 30"])
  rate_30 = screened_30/seen_30 *100
  
  # Nice results
  list(`Year` = year,
       `Total Screened` = total_screened,
       `Total Seen` = total_seen,
       `Screen Rate (%)` = screen_rate,
       
       `Total Screened Age 10-18` = screened_10_18,
       `Total Seen Age 10-18` = seen_10_18,
       `Screen Rate Age 10-18 (%)` = rate_10_18,
       
       `Total Screened Age 19-30` = screened_19_30,
       `Total Seen Age 19-30` = seen_19_30,
       `Screen Rate Age 19-30 (%)` = rate_19_30,
       
       `Total Screened Age > 30` = screened_30,
       `Total Seen Age > 30` = seen_30,
       `Screen Rate Age > 30 (%)` = rate_30)
}
screen = lapply(2003:2018, function(y){year_screen(year = y)})
screen = data.frame(do.call(rbind,screen),check.names = F)
screen = data.frame(lapply(screen,as.numeric),check.names = F)
kable(screen,digits = 3)
```

In @tbl-screening_ogtt and @tbl-screening_a1c, people with CFRD (by registry definition) and those under age 10 were excluded. Screening rate is calculated as the number of people with an OGTT divided by the total number of people seen in clinic that year.

# ROC

```{r}
# Prepare data for ROC
df$cfrd_ogtt <- factor(df$cfrd_ogtt, levels = c("No", "Yes"), ordered = T)
cfrd <- df %>%
  group_by(eDWID) %>%
  mutate(
    cfrd_ever = max(cfrd_ogtt),
    time_from_diag = ReviewYear - first_cfrd
  ) %>%
  filter(cfrd_ever == "Yes", time_from_diag <= 0, time_from_diag >= -1) %>%
  summarise(hba1c = last(na.omit(round(A_hgba1c, 1)))) %>%
  drop_na()
non_cfrd <- df %>%
  group_by(eDWID) %>%
  mutate(cfrd_ever = max(cfrd_ogtt)) %>%
  filter(cfrd_ever == "No") %>%
  summarise(hba1c = last(na.omit(round(A_hgba1c, 1)))) %>%
  drop_na()
```

```{r}
#| label: fig-roc
#| fig-cap: "ROC Curve"
r <- roc(
  cases = cfrd$hba1c, controls = non_cfrd$hba1c, quiet = T, plot = T, auc = T, ci = T,
  print.auc = TRUE, show.thres = TRUE
)
```

Because we do not have exact information regarding HbA1c timing (we only have encounter number within year), the annualized HbA1c from the year of diagnosis or from one year prior to diagnosis was used in the ROC analysis. For those with HbA1c measures the year of diagnosis and one year prior, the value from year of diagnosis was preferred. For those never diagnosed with CFRD, the most recent HbA1c was used. There were a total of `r nrow(cfrd)` HbA1c measures for people with CFRD and `r nrow(non_cfrd)` measures for those without.

The AUC for this ROC curve was 0.61 (see @fig-roc).

```{r}
#| label: tbl-roc_thresh
#| tbl-cap: "Best ROC Threshold (Youden Index)"
kable(coords(r, "best"), digits = 3)
```

# Logistic analyses

Any participants with T1D or T2D were excluded from these analyses.

```{r}
# Import and clean data
annual <- read.csv("/Users/timvigers/Documents/Work/Christine Chan/CF registry data/CFF19_Annualized_Del1.csv",
                   na.strings = c("", "N/A")
)
annual = annual %>% filter(cfrd_status_annual != 4,cfrd_status_annual != 5)
annual$cfrd_status_annual = factor(annual$cfrd_status_annual,levels = 1:3,
                                   labels = c("CFRD-","CFRD-","CFRD+"))


demogs = read.csv("/Users/timvigers/Documents/Work/Christine Chan/CF registry data/CFF19_DemogCFDiag_Del1.csv")
demogs = demogs %>% select(eDWID,Gender,MutClass)

annual = left_join(annual,demogs,by = join_by(eDWID))

encounter <- read.csv("/Users/timvigers/Documents/Work/Christine Chan/CF registry data/CFF19_encountersMerged_Del1.csv",
                      na.strings = c("", "N/A")
)
# mods = encounter %>% group_by(eDWID,reviewyear) %>%
#   summarise(across(c(Vx770,Vx809comb),~max(.x,na.rm = T)),.groups = "drop")
# Analysis function
log_reg = function(year = 2005){
  # Clean data
  df = annual %>% 
    filter(ReviewYear==year) %>%
    select(eDWID,Age_YrEnd,Gender,MutClass,A_IsOnEnzymes,A_FEV1_pct_predicted,
           A_bmivalue,A_bmipercentile,A_height,A_heightpercentile,
           NumPulmExacerbation,A_feeding2,A_pseudomonasaeruginosa,
           A_fungalyeast1,A_pulmonarycomplications1,A_mycocultureresults1,
           A_corticosteroids1,cfrd_status_annual)
  # Format columns
  df$MutClass = factor(df$MutClass,levels = c("1-3","4-5","Oth","N/A"),
                       labels = c("1-3","4-5","Oth",NA))
  df$NumPulmExacerbation=cut(df$NumPulmExacerbation,labels = c("0","1","2",">=3"),
                             breaks = c(0,1,2,3,Inf),right = F)
  df$A_feeding2 = factor(df$A_feeding2,levels = 0:1,labels = c("No","Yes"))
  df$A_IsOnEnzymes = factor(df$A_IsOnEnzymes,levels = 0:1,labels = c("No","Yes"))
  df$A_FEV1_pct_predicted = cut(df$A_FEV1_pct_predicted,breaks = c(0,40,80,100,Inf),right = F)
  df$A_corticosteroids1 = factor(df$A_corticosteroids1,levels = 0:1,labels = c("No","Yes"))
  df$A_fungalyeast1 = factor(df$A_fungalyeast1,levels = 0:1,labels = c("No","Yes"))
  df$A_pulmonarycomplications1 = factor(df$A_pulmonarycomplications1,levels = 0:1,labels = c("No","Yes"))
  df$A_mycocultureresults1 = factor(df$A_mycocultureresults1,levels = 0:1,labels = c("No","Yes"))
  # Models
  base_mod = as.formula("cfrd_status_annual~Gender+Age_YrEnd+A_IsOnEnzymes+MutClass+
                   A_FEV1_pct_predicted+NumPulmExacerbation+A_feeding2")
  adult_mod = update(base_mod,.~.+A_bmivalue+A_height)
  peds_mod = update(base_mod,.~.+A_bmipercentile+A_heightpercentile)
  # Simple models
  adult_mod1 = glm(adult_mod,data = df,family = "binomial")
  peds_mod1 = glm(peds_mod,data = df,family = "binomial")
  # Add bugs
  # P. aeruginosa
  adult_mod2 = glm(update(adult_mod,.~.+A_pseudomonasaeruginosa),data = df,family = "binomial")
  peds_mod2 = glm(update(peds_mod,.~.+A_pseudomonasaeruginosa),data = df,family = "binomial")
  # Aspergillus
  adult_mod3 = glm(update(adult_mod,.~.+A_fungalyeast1),data = df,family = "binomial")
  peds_mod3 = glm(update(peds_mod,.~.+A_fungalyeast1),data = df,family = "binomial")
  # ABPA
  adult_mod4 = glm(update(adult_mod,.~.+A_pulmonarycomplications1),data = df,family = "binomial")
  peds_mod4 = glm(update(peds_mod,.~.+A_pulmonarycomplications1),data = df,family = "binomial")
  # Mycobacterium
  adult_mod5 = glm(update(adult_mod,.~.+A_pulmonarycomplications1),data = df,family = "binomial")
  peds_mod5 = glm(update(peds_mod,.~.+A_pulmonarycomplications1),data = df,family = "binomial")
  # Print results
  cat("\n")
  cat("### Base Models")
  cat("\n")
  cat("#### Adult")
  print(forest_model(adult_mod1))
  cat("\n")
  cat("#### Peds")
  print(forest_model(peds_mod1))
  cat("\n")
  cat("\n")
  cat("### P. aeruginosa")
  cat("\n")
  cat("#### Adult")
  print(forest_model(adult_mod2))
  cat("\n")
  cat("#### Peds")
  print(forest_model(peds_mod2))
  cat("\n")
  cat("\n")
  cat("### Aspergillus")
  cat("\n")
  cat("#### Adult")
  print(forest_model(adult_mod3))
  cat("\n")
  cat("#### Peds")
  print(forest_model(peds_mod3))
  cat("\n")
  cat("\n")
  cat("### ABPA")
  cat("\n")
  cat("#### Adult")
  print(forest_model(adult_mod4))
  cat("\n")
  cat("#### Peds")
  print(forest_model(peds_mod4))
  cat("\n")
  cat("\n")
  cat("### Mycobacterium")
  cat("\n")
  cat("#### Adult")
  print(forest_model(adult_mod5))
  cat("\n")
  cat("#### Peds")
  print(forest_model(peds_mod5))
  cat("\n")
}
```

## 2005

```{r}
log_reg(2005)
```

# Questions

1. What variables do we use for B. Cepacia and liver disease?
2. Do we have CFTR modulator data aside from `Vx770` and `Vx809comb`?
