---
title: "Using HbA1c and Fasting BG to Predict Development of CFRD"
author: "Tim Vigers"
date: "today"
date-format: long
format:
  html:
    toc: true
    toc-depth: 5
    toc-float: true
    code-fold: true
    self-contained: true
    fig-cap-location: top
    fig-width: 12
    fig-height: 9
    page-layout: full
editor: source
---

```{r setup}
#| include: false
library(survival)
library(nlme)
library(JM)
library(dplyr)
library(tidyr)
library(arsenal)
library(knitr)
home_dir <- switch(Sys.info()["sysname"],
  "Darwin" = "/Users/timvigers/Library/CloudStorage/OneDrive-TheUniversityofColoradoDenver/Vigers/CF/Christine Chan/CF Registry",
  "Linux" = "/home/timvigers/OneDrive/Vigers/CF/Christine Chan/CF Registry"
)
knitr::opts_knit$set(root.dir = home_dir)
```

```{r data cleaning}
# Import data
annual <- read.csv("./Data_Raw/CFF19_Annualized_Del1.csv",
  na.strings = c("", "N/A")
)
# Exclude T1D and T2D
annual <- annual %>% filter(!cfrd_status_annual %in% c(4, 5))
annual$cfrd_registry <- as.numeric(annual$cfrd_status_annual == 3)
annual$cfrd_ogtt <- as.numeric(annual$A_twohour_bloodglucose >= 200)
# Demographic data
demo <- read.csv("./Data_Raw/CFF19_DemogCFDiag_Del1.csv",
  na.strings = c("", "N/A")
)
# Race
races <- c(
  "White", "Black or African American", "American Indian or Alaska Native",
  "Asian", "Native Hawaiian or Other Pacific Islander", "Some other race"
)
demo$Race <- apply(demo, 1, function(r) {
  w <- which(r[paste0("Race", 1:6)] == 1)
  if (length(w) == 0) {
    "Unknown"
  } else if (length(w) > 1) {
    "More than one race"
  } else {
    races[w]
  }
})
demo$Race <- factor(demo$Race,
  levels = c(
    "White", "Black or African American", "American Indian or Alaska Native",
    "Asian", "More than one race", "Native Hawaiian or Other Pacific Islander",
    "Some other race"
  ),
  labels = c(
    "White", "Black or African American", "Other race", "Other race",
    "More than one race", "Other race", "Other race"
  )
)
demo$Hispanicrace <- factor(demo$Hispanicrace,
  levels = 1:2,
  labels = c("Yes", "No")
)
# F508
demo$F508 <- factor(demo$F508,
  levels = 1:3,
  labels = c("F508del/F508del", "F508del/Other", "Other/Other")
)
# Merge
annual <- left_join(
  annual,
  demo %>% select(eDWID, Race, Hispanicrace, Gender, F508, MutClass),
  by = join_by(eDWID)
)
# Assume that missing data for CFRD means "CFRD-" (some of these will get filled in
# later)
annual$cfrd_registry[is.na(annual$cfrd_registry)] <- 0
annual$cfrd_ogtt[is.na(annual$cfrd_ogtt)] <- 0
# Modulators
annual$A_Vx770 <- factor(annual$A_Vx770, levels = 0:1, labels = c("No", "Yes"))
annual$A_VX809comb <- factor(annual$A_VX809comb,
  levels = 0:1, labels = c("No", "Yes")
)
# Get age at first CFRD (by OGTT and registry)
annual <- annual %>%
  group_by(eDWID) %>%
  mutate(
    cfrd_registry_age = first(na.omit(Age_YrEnd[cfrd_registry == 1])),
    cfrd_ogtt_age = first(na.omit(Age_YrEnd[cfrd_ogtt == 1]))
  )
# Fill in CFRD diagnoses
annual$cfrd_registry_age[is.na(annual$cfrd_registry_age)] <- Inf
annual$cfrd_ogtt_age[is.na(annual$cfrd_ogtt_age)] <- Inf
annual$cfrd_registry[annual$Age_YrEnd < annual$cfrd_registry_age] <- 0
annual$cfrd_registry[annual$Age_YrEnd >= annual$cfrd_registry_age] <- 1
annual$cfrd_ogtt[annual$Age_YrEnd < annual$cfrd_ogtt_age] <- 0
annual$cfrd_ogtt[annual$Age_YrEnd >= annual$cfrd_ogtt_age] <- 1
# Format columns
annual$MutClass <- factor(annual$MutClass,
  levels = c("1-3", "4-5", "Oth", "N/A"),
  labels = c("1-3", "4-5", "Oth", "Unknown")
)
annual$NumPulmExacerbation <- cut(annual$NumPulmExacerbation,
  labels = c("0", "1", "2", ">=3"),
  breaks = c(0, 1, 2, 3, Inf), right = F
)
annual$A_IsOnEnzymes <- factor(annual$A_IsOnEnzymes,
  levels = 1:0, labels = c("Yes", "No")
)
# Calculate bmi value
annual$bmi <- annual$A_weight / ((annual$A_height / 100)^2)
annual$bmi <- coalesce(annual$A_bmivalue, annual$bmi)
annual$Gender <- factor(annual$Gender, levels = c("M", "F"))
# Labels
labels <- list(
  Age_YrEnd = "Age at Year End",
  Hispanicrace = "Hispanic", A_Vx770 = "Use of CFTR modulator Vx770",
  A_VX809comb = "Use of CFTR modulator Vx809 combination",
  A_FEV1_pct_predicted = "FEV1 percent predicted", MutClass = "Mutation class",
  NumPulmExacerbation = "Admissions for PEx",
  A_IsOnEnzymes = "Pancreatic enzyme use", bmi = "BMI value"
)
# List of predictor variables
predictors <- c(
  "Gender", "Race", "Hispanicrace", "A_IsOnEnzymes",
  "NumPulmExacerbation", "A_FEV1_pct_predicted", "bmi"
)
# Make datasets
registry <- annual %>%
  filter(Age_YrEnd <= cfrd_registry_age) %>%
  select(
    eDWID, ReviewYear, Age_YrEnd, A_hgba1c, all_of(predictors), cfrd_registry
  ) %>%
  drop_na() %>%
  distinct()
surv_reg <- annual %>%
  filter(Age_YrEnd <= cfrd_registry_age) %>%
  group_by(eDWID) %>%
  slice_max(row_number()) %>%
  select(eDWID, ReviewYear, Age_YrEnd, all_of(predictors), cfrd_registry) %>%
  drop_na() %>%
  distinct()
reg_include <- intersect(registry$eDWID, surv_reg$eDWID)
```

# Demographics

```{r,results='asis'}
t <- registry[registry$eDWID %in% reg_include, ] %>%
  group_by(eDWID) %>%
  summarise(n())
t2 <- registry[registry$eDWID %in% reg_include, ] %>%
  group_by(eDWID) %>%
  filter(row_number() == 1)
t1 <- tableby(cfrd_registry ~ Age_YrEnd + Gender + Race + Hispanicrace + A_IsOnEnzymes + NumPulmExacerbation + A_FEV1_pct_predicted + bmi, data = t2)
summary(t1)
```

# Joint models

## CFRD diagnosis by OGTT

```{r}
# Formulas
cox_f <- as.formula(paste0(
  "Surv(time = Age_YrEnd, event = cfrd_registry)~",
  paste0(predictors, collapse = "+")
))
lme_f <- as.formula(paste0(
  "A_hgba1c~Age_YrEnd+",
  paste0(predictors, collapse = "+")
))
# Fit Cox model first, and then pull the clusters
cox_fit <- coxph(cox_f,
  cluster = eDWID, x = T, model = T,
  data = surv_reg[surv_reg$eDWID %in% reg_include, ]
)
lme_fit_a1c <- lme(lme_f,
  random = ~ Age_YrEnd | eDWID, na.action = na.omit,
  data = registry[registry$eDWID %in% reg_include, ]
)
# Combine
joint_fit_value <- jointModel(lme_fit_a1c, cox_fit, timeVar = "Age_YrEnd")
# joint_fit_slope <- jointModel(lme_fit_a1c, cox_fit, timeVar = "Age_YrEnd",parameterization ="slope")
# joint_fit_both <- jointModel(lme_fit_a1c, cox_fit, timeVar = "Age_YrEnd",parameterization ="both")
s <- summary(joint_fit_value)
long <- data.frame(s$`CoefTable-Long`)
long$p.value <- format.pval(long$p.value, eps = 0.001, digits = 3)
event <- data.frame(s$`CoefTable-Event`)
event$Value <- exp(event$Value)
rownames(event)[nrow(event)] <- "shape"
event$p.value <- format.pval(event$p.value, eps = 0.001, digits = 3)
# summary(joint_fit_slope)
# summary(joint_fit_both)
kable(long, caption = "Longitudinal Process", digits = 3)
kable(event, caption = "Event Process", digits = 3)
```

# To do

- Check for HbA1c measures after the survival time (not sure if needs to be strictly less than)
- Set parameterization = "slope" to see if change in HbA1c increases hazard 
- Look into dynamic predictions in JMBayes
- Could try re-fitting this with a left-censored model 
  - If it says the same thing, it's probably okay to use the right-censored
  - Could also try using the half interval model Kristen described
  
https://erandrinopoulou.github.io/EducationalCorner_JMpred/
