---
title: "CF Registry Analysis"
author: "Tim Vigers"
date: "today"
date-format: long
format:
  html:
    fig-width: 10
    fig-height: 10
    toc: true
    toc-depth: 10
    toc-float: true
    code-fold: true
    self-contained: true
    fig-cap-location: top
    page-layout: full
editor: source
---

```{r}
#| include: false
library(Hmisc)
library(zoo)
library(tidyverse)
library(childsds)
library(gt)
library(gtsummary)
library(forcats)
library(labelled)
library(survival)
library(survminer)
library(knitr)
library(eulerr)
library(broom)
library(emmeans)
library(ggstats)
knitr::opts_knit$set(root.dir = "/Users/timvigers/Library/CloudStorage/OneDrive-TheUniversityofColoradoDenver/Vigers/CF/Christine Chan/CF Registry")
```

# Data cleaning

```{r}
# Import data and codebook
annual <- read.csv("./Data_Raw/CFF19_Annualized_Del1.csv",
  na.strings = c("", "N/A")
)
data_dict <- readxl::read_excel("./Data_Raw/Copy of Codes for CFFPR_2018.xlsx")
data_dict$var <- paste(data_dict$field_name, data_dict$code_value, sep = "_")
# Remove those with T1D or T2D
annual <- annual %>% arrange(eDWID, ReviewYear)
annual <- annual[!annual$cfrd_status_annual %in% c(4, 5), ]
annual$cfrd_status_annual <- factor(annual$cfrd_status_annual,
  levels = 1:3,
  labels = c("CFRD-", "CFRD-", "CFRD+")
)
# Get mutations
demogs <- read.csv("./Data_Raw/CFF19_DemogCFDiag_Del1.csv")
races <- c(
  "White", "Black or African American", "American Indian or Alaska Native",
  "Asian", "Native Hawaiian or Other Pacific ", "Some other race"
)
demogs$Race <- apply(demogs, 1, function(r) {
  w <- which(r[paste0("Race", 1:6)] == 1)
  if (length(w) > 1) {
    return("More than one race")
  } else {
    return(races[w])
  }
})
demogs$Race <- factor(demogs$Race,
  levels = c(
    "White", "American Indian or Alaska Native", "Asian",
    "Black or African American", "More than one race",
    "Native Hawaiian or Other Pacific ", "Some other race"
  ),
  labels = c(
    "White", "Other race", "Other race",
    "Black or African American", "More than one race",
    "Other race", "Other race"
  )
)
demogs$Hispanicrace <- factor(demogs$Hispanicrace,
  levels = 1:2,
  labels = c("Yes", "No")
)
demogs <- demogs %>% select(eDWID, Gender, MutClass, Race, Hispanicrace)
annual <- left_join(annual, demogs, by = join_by(eDWID))
# Variable formatting
# If A_supplement_feeding is 0, then A_feeding2 is also 0 because they are not
# on any supplemental feeding
# Include all kinds of tube feeds
annual$A_feeding2[annual$A_supplement_feeding == 0] <- 0
annual$A_feeding3[annual$A_supplement_feeding == 0] <- 0
annual$A_feeding4[annual$A_supplement_feeding == 0] <- 0
tube_fields <- c("A_feeding2", "A_feeding3", "A_feeding4")
annual$tube_feeding <-
  apply(annual[, tube_fields], 1, function(r) {
    if (all(is.na(r))) {
      return(NA)
    } else {
      return(max(as.numeric(r), na.rm = T))
    }
  })
# Liver disease
liver_fields <- c("A_hepatobiliary1_3", paste0("A_hepatobiliary2_", 1:4))
annual$liver_disease <-
  apply(annual[, liver_fields], 1, function(r) {
    if (all(is.na(r))) {
      return(NA)
    } else {
      return(max(as.numeric(r), na.rm = T))
    }
  })
# Calculate percentiles
annual$bmi <- annual$A_weight / ((annual$A_height / 100)^2)
annual$age_perc <- ifelse(annual$Age_YrEnd < 20, annual$Age_YrEnd, 20)
annual$height_perc <- sds(annual$A_height,
  age = annual$age_perc,
  sex = annual$Gender, male = "M", female = "F",
  item = "height2_20", ref = cdc.ref, type = "perc"
) * 100
annual$bmi_perc <- sds(annual$bmi,
  age = annual$age_perc,
  sex = annual$Gender, male = "M", female = "F",
  item = "bmi", ref = cdc.ref, type = "perc"
) * 100
# Format columns
annual$MutClass <- factor(annual$MutClass,
  levels = c("1-3", "4-5", "Oth", "N/A"),
  labels = c("1-3", "4-5", "Oth", "Unknown")
)
annual$NumPulmExacerbation <- cut(annual$NumPulmExacerbation,
  labels = c("0", "1", "2", ">=3"),
  breaks = c(0, 1, 2, 3, Inf), right = F
)
# Age groups 10 - 18 inclusive, 19 - 30 inclusive, >= 31
annual$age_group <- cut(annual$Age_YrEnd,
  breaks = c(-Inf, 10, 19, 31, Inf),
  right = F
)
# Bugs
bugs <- c(
  "A_pseudomonasaeruginosa", "A_fungalyeast1",
  "A_pulmonarycomplications1", "A_mycocultureresults3"
)
# Yes/No variables
yn_vars <- c(
  "A_IsOnEnzymes", "A_corticosteroids1", "A_feeding2",
  "A_Vx770", "A_VX809comb", bugs, "tube_feeding", "liver_disease"
)
annual[, yn_vars] <- lapply(annual[, yn_vars], factor,
  levels = 0:1,
  labels = c("No", "Yes")
)
annual$A_IsOnEnzymes <- relevel(annual$A_IsOnEnzymes, ref = "Yes")
# BMI percentile to categorical
annual$bmi_perc_cat <- cut(annual$bmi_perc, breaks = c(0, 10, 50, 85, Inf))
annual$bmi_perc_cat <- relevel(annual$bmi_perc_cat, ref = "(50,85]")
# FEV1 to categorical
annual$ppFEV1_cat <- cut(annual$A_FEV1_pct_predicted,
  breaks = c(0, 40, 80, 100, Inf), right = F
)
annual$ppFEV1_cat <- relevel(annual$ppFEV1_cat, ref = "[100,Inf)")
# Males to reference group
annual$Gender <- factor(annual$Gender, levels = c("M", "F"))
# Hispanic no as reference
annual$Hispanicrace <- factor(annual$Hispanicrace, levels = c("No", "Yes"))
# Get first year of CFRD
first_cfrd <- annual %>%
  filter(cfrd_status_annual == "CFRD+") %>%
  group_by(eDWID) %>%
  summarise(first_cfrd = min(ReviewYear))
annual <- left_join(annual, first_cfrd, by = join_by(eDWID))
# Year prior to first CFRD in registry - assume negative for CFRD. Assume all
# years following are CFRD+
annual$CFRD <- NA
annual$CFRD[annual$ReviewYear < annual$first_cfrd] <- "CFRD-"
annual$CFRD[annual$ReviewYear >= annual$first_cfrd] <- "CFRD+"
annual$CFRD[is.na(annual$first_cfrd)] <- "CFRD-"
annual$CFRD <- factor(annual$CFRD, levels = c("CFRD-", "CFRD+"))
# Add formatted columns for survival analysis
annual$tstop <- ymd(paste0(annual$ReviewYear, "-12-31"))
annual$tstart <- ymd(paste0(annual$ReviewYear, "-01-01"))
annual <- annual %>%
  group_by(eDWID) %>%
  mutate(entry_date = tstart[1]) %>%
  ungroup()
# Remove those under 10
annual$age_group <- relevel(annual$age_group, ref = "[10,19)")
annual <- annual %>% filter(Age_YrEnd != 0, Age_YrEnd >= 10)
annual$age_group <- droplevels(annual$age_group)
# List of covariates
vars <- c(
  "age_group", "Gender", "bmi_perc", "bmi_perc_cat", "MutClass", "Race",
  "Hispanicrace", "A_IsOnEnzymes", "ppFEV1_cat", "tube_feeding",
  "NumPulmExacerbation", "A_pseudomonasaeruginosa", "A_fungalyeast1",
  "A_mycocultureresults3", "A_corticosteroids1", "cfrd_status_annual",
  "A_Vx770", "A_VX809comb", "liver_disease"
)
# Nice labels for plots and tables
labels <- list(
  cfrd_status_annual = "CFRD Status", MutClass = "Mutation class",
  Race = "Race", Hispanicrace = "Hispanic",
  Gender = "Sex", A_IsOnEnzymes = "Pancreatic enzyme use",
  ppFEV1_cat = "FEV1 percent predicted category",
  A_FEV1_pct_predicted = "FEV1 percent predicted",
  A_FVC_pct_predicted = "FVC percent predicted",
  tube_feeding = "Enteric feedings", liver_disease = "Liver disease",
  A_corticosteroids1 = "Use of corticosteroids",
  NumPulmExacerbation = "Admissions for PEx", age_group = "Age group",
  height_perc = "Height percentile", bmi_perc_cat = "BMI percentile",
  A_Vx770 = "Use of CFTR modulator Vx770",
  A_VX809comb = "Use of CFTR modulator Vx809 combination",
  A_pseudomonasaeruginosa = "Pseudomonas aeruginosa",
  A_fungalyeast1 = "Aspergillus (any species)",
  A_mycocultureresults3 = "Microorganisms in myco culture", eDWID = "ID",
  tstart = "Interval start", tstop = "Interval stop",
  Age_YrEnd = "Age", bmi_perc = "BMI %ile"
)
label(annual[, which(colnames(annual) %in% names(labels))]) <-
  labels[colnames(annual)[which(colnames(annual) %in% names(labels))]]
```

Registry fields included in our liver disease yes/no variable were:

```{r}
data.frame(data_dict$code_meaning[data_dict$var %in%
  sub("A_", "", liver_fields)]) %>%
  gt() %>%
  tab_options(column_labels.hidden = TRUE)
```

Registry fields included in our tube feeding yes/no variable were:

```{r}
data.frame(data_dict$code_meaning[
  paste0(data_dict$field_name, data_dict$code_value) %in%
    sub("A_", "", tube_fields)
]) %>%
  gt() %>%
  tab_options(column_labels.hidden = TRUE)
```

# CFRD prevalence

## By year

```{r}
annual %>%
  group_by(ReviewYear) %>%
  summarise(Prevalence = mean(CFRD == "CFRD+") * 100) %>%
  kable(., digits = 2)
```

## By year and age group

```{r}
annual %>%
  group_by(ReviewYear, age_group) %>%
  summarise(Prevalence = mean(CFRD == "CFRD+") * 100, .groups = "drop") %>%
  pivot_wider(names_from = age_group, values_from = Prevalence) %>%
  kable(., digits = 2)
```

# CFRD incidence

```{r}
# For each person, filter out all the years after first CFRD diagnosis
annual <- annual %>% filter(ReviewYear <= first_cfrd | is.na(first_cfrd))
# For each year, pull everyone with and without CFRD that year
year_inc <- function(df = annual, year, py = 1000) {
  # Filter and count
  inc <- df %>% filter(ReviewYear == year)
  inc <- inc %>%
    group_by(CFRD) %>%
    count(age_group, .drop = F)
  inc <- inc[!is.na(inc$age_group), ]
  # Calculations
  new_cases <- sum(inc$n[inc$CFRD == "CFRD+"])
  total_at_risk <- sum(inc$n)
  total_inc <- new_cases / (total_at_risk / py)

  new_cases_10_18 <- sum(inc$n[inc$CFRD == "CFRD+" &
    inc$age_group == "[10,19)"])
  at_risk_10_18 <- sum(inc$n[inc$age_group == "[10,19)"])
  inc_10_18 <- new_cases_10_18 / (at_risk_10_18 / py)

  new_cases_19_30 <- sum(inc$n[inc$CFRD == "CFRD+" &
    inc$age_group == "[19,31)"])
  at_risk_19_30 <- sum(inc$n[inc$age_group == "[19,31)"])
  inc_19_30 <- new_cases_19_30 / (at_risk_19_30 / py)

  new_cases_30 <- sum(inc$n[inc$CFRD == "CFRD+" &
    inc$age_group == "[31, Inf)"])
  at_risk_30 <- sum(inc$n[inc$age_group == "[31, Inf)"])
  inc_30 <- new_cases_30 / (at_risk_30 / py)

  # Nice results
  list(
    `Year` = year,
    `Total New Cases` = new_cases,
    `Total At Risk` = total_at_risk,
    `Total Incidence` = total_inc,
    `Total New Cases Age 10-18` = new_cases_10_18,
    `Total At Risk Age 10-18` = at_risk_10_18,
    `Total Incidence Age 10-18` = inc_10_18,
    `Total New Cases Age 19-30` = new_cases_19_30,
    `Total At Risk Age 19-30` = at_risk_19_30,
    `Total Incidence Age 19-30` = inc_19_30,
    `Total New Cases Age >= 31` = new_cases_30,
    `Total At Risk Age >= 31` = at_risk_30,
    `Total Incidence Age >= 31` = inc_30
  )
}
incidence <- lapply(2003:2018, function(y) {
  year_inc(year = y)
})
incidence <- data.frame(do.call(rbind, incidence), check.names = F)
incidence <- data.frame(lapply(incidence, as.numeric), check.names = F)
kable(incidence, digits = 2)
```

## Demographics of incident CFRD cases versus non-CFRD cases in 2004, 2011, and 2018

```{r}
#| message: false
annual %>%
  filter(ReviewYear %in% c(2004, 2011, 2018)) %>%
  select(
    ReviewYear, CFRD, Age_YrEnd, Gender, Race, Hispanicrace, bmi_perc,
    bmi_perc_cat, MutClass, tube_feeding, liver_disease,
    A_FEV1_pct_predicted, A_FVC_pct_predicted, NumPulmExacerbation,
    A_corticosteroids1, A_IsOnEnzymes, A_Vx770, A_VX809comb
  ) %>%
  tbl_strata(
    strata = ReviewYear,
    .tbl_fun =
      ~ .x %>%
        tbl_summary(
          by = CFRD, missing_text = "Missing",
          type = list(A_corticosteroids1 ~ "categorical"),
          statistic = list(c(
            "Age_YrEnd", "bmi_perc", "A_FEV1_pct_predicted",
            "A_FVC_pct_predicted"
          ) ~ "{mean} ({sd})")
        ) %>%
        add_p(test = list(c(
          "Age_YrEnd", "bmi_perc", "A_FEV1_pct_predicted",
          "A_FVC_pct_predicted"
        ) ~ "t.test")) %>%
        add_overall() %>%
        separate_p_footnotes()
  )
```

# Screening rates

## By age group

```{r}
screening <- annual %>%
  group_by(ReviewYear, age_group) %>%
  summarise(
    `Screened HbA1c` = mean(!is.na(A_hgba1c)),
    `Screened OGTT` = mean(!is.na(A_twohour_bloodglucose) |
      !is.na(A_ogttfast_bloodglucose)),
    `Screened Either` = mean(!is.na(A_twohour_bloodglucose) |
      !is.na(A_ogttfast_bloodglucose) | !is.na(A_hgba1c)),
    .groups = "drop"
  )
kable(
  screening %>%
    select(ReviewYear, age_group, `Screened OGTT`) %>%
    mutate(`Screened OGTT` = round(`Screened OGTT` * 100, 2)) %>%
    pivot_wider(names_from = age_group, values_from = `Screened OGTT`),
  caption = "% Screened by OGTT"
)
screening <- screening %>%
  pivot_longer(`Screened HbA1c`:`Screened Either`)
screening_plot <- ggplot(screening, aes(
  x = ReviewYear, y = value,
  color = age_group
)) +
  geom_line() +
  xlab("Year") +
  facet_wrap(~name, nrow = 3) +
  theme_bw() +
  scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
  scale_color_discrete(name = "Age Group") +
  theme(text = element_text(size = 20), axis.title.y = element_blank())
screening_plot
ggsave("./Dissemination/Figures/screening_rates.png",
  plot = screening_plot, width = 12, height = 9, units = "in"
)
```

## Who is getting OGTTs?

```{r results='asis'}
# How many OGTTs are non-CFRD people getting 2016-2018
ogtts <- annual %>%
  filter(ReviewYear %in% 2016:2018, CFRD == "CFRD-") %>%
  group_by(eDWID) %>%
  summarise(
    `Age Group` = last(na.omit(age_group)),
    `OGTTs` = sum(!is.na(A_twohour_bloodglucose) |
      !is.na(A_ogttfast_bloodglucose))
  )
# Add demographics
ogtts$eDWID <- as.numeric(ogtts$eDWID)
ogtts <- left_join(ogtts, demogs, by = join_by(eDWID))
label(ogtts$eDWID) <- "ID"
# Format OGTT counts
ogtts$OGTTs <- factor(ogtts$OGTTs,
  levels = 0:3, labels = c(
    "No OGTT", "At least 1 OGTT", "At least 1 OGTT", "At least 1 OGTT"
  )
)
# Make table for each variable
age <- ogtts %>%
  select(`Age Group`, OGTTs) %>%
  tbl_summary(by = `Age Group`) %>%
  add_ci() %>%
  add_p() %>%
  print()
gender <- ogtts %>%
  select(Gender, OGTTs) %>%
  tbl_summary(by = Gender) %>%
  add_ci() %>%
  add_p() %>%
  print()
muts <- ogtts %>%
  select(MutClass, OGTTs) %>%
  tbl_summary(by = MutClass) %>%
  add_ci() %>%
  add_p() %>%
  print()
race <- ogtts %>%
  select(Race, OGTTs) %>%
  tbl_summary(by = Race) %>%
  add_ci() %>%
  add_p() %>%
  print()
eth <- ogtts %>%
  select(Hispanicrace, OGTTs) %>%
  tbl_summary(by = Hispanicrace) %>%
  add_ci() %>%
  add_p() %>%
  print()
```

# Survival analysis - first CFRD diagnosis

Based on CFFPR annualized data. These data are interval censored because we know the first visit at which people with CFRD were diagnosed, but we do not know the exact time that they developed CFRD. These data are also left truncated because not all participants enter the study at the same time.

## Cox PH models

### Base model

```{r}
# Origin for survival analyses
og <- ymd("2003-01-01")
# Need to use a dataframe not a tibble
annual <- as.data.frame(annual)
annual$tstart <- as.numeric(annual$tstart) - as.numeric(og)
annual$tstop <- as.numeric(annual$tstop) - as.numeric(og)
# Formula for base model
xvars <- c(
  "age_group", "Gender", "Race", "Hispanicrace", "bmi_perc_cat", "MutClass",
  "A_IsOnEnzymes", "tube_feeding", "liver_disease", "ppFEV1_cat",
  "NumPulmExacerbation", "A_corticosteroids1"
)
y <- "Surv(time = tstart, time2 = tstop, event = as.numeric(CFRD) == 2)"
f <- as.formula(paste0(y, "~", paste0(xvars, collapse = "+")))
cox_res <- coxph(f, data = annual, cluster = eDWID)
# Forest plot and coefficients table
cox_res %>%
  tbl_regression(exponentiate = T)
ggcoef_table(cox_res,
  show_p_values = F, add_reference_rows = T, exponentiate = T,
  signif_stars = F, colour = F
)
# Diagnostics
test.ph <- data.frame(cox.zph(cox_res)$table)
test.ph <- test.ph[rownames(test.ph) != "GLOBAL", ]
# Find which variables technically violate PH assumption
time_varying <- rownames(test.ph)[test.ph$p < 0.05]
# Just split data by time period so we're only fitting 3 models
# "[2003,2009)", "[2009,2014)", "[2014,2019)"
annual$time_period <- cut(annual$ReviewYear,
  breaks = c(-Inf, 2009, 2014, Inf), right = F
)
era1 <- coxph(f,
  data = annual[as.numeric(annual$time_period) == 1, ],
  cluster = eDWID
)
era2 <- coxph(f,
  data = annual[as.numeric(annual$time_period) == 2, ],
  cluster = eDWID
)
era3 <- coxph(f,
  data = annual[as.numeric(annual$time_period) == 3, ],
  cluster = eDWID
)
# # KM plot
# fit <- survfit(Surv(time = tstart, time2 = tstop, event = as.numeric(CFRD) == 2) ~ age_group,
#   data = annual[as.numeric(annual$time_period) == 1, ]
# )
# # Visualize with survminer
# ggsurvplot(fit, data = annual[as.numeric(annual$time_period) == 1, ], risk.table = TRUE)
```

### Vx770

Years prior to 2011 were excluded from the following model

```{r results='asis'}
annual %>%
  group_by(ReviewYear) %>%
  count(A_Vx770) %>%
  gt()
```

```{r results='asis'}
f_vx770 <- update(f, . ~ . + A_Vx770)
vx770_cox_res <- coxph(f_vx770,
  data = annual[annual$ReviewYear >= 2011, ],
  cluster = eDWID
)
t1 <- vx770_cox_res %>%
  tbl_regression(exponentiate = T)
t1
ggcoef_table(vx770_cox_res,
  show_p_values = F, add_reference_rows = T, exponentiate = T,
  signif_stars = F, colour = F
)
```

### Vx809comb

Years prior to 2015 were excluded from the following model due to missing data.

```{r results='asis'}
annual %>%
  group_by(ReviewYear) %>%
  count(A_VX809comb) %>%
  gt()
```

```{r}
f_vx809comb <- update(f, . ~ . + A_VX809comb)
vx809comb_cox_res <- coxph(f_vx809comb,
  data = annual[annual$ReviewYear >= 2015, ],
  cluster = eDWID
)
t2 <- vx809comb_cox_res %>%
  tbl_regression(exponentiate = T)
t2
ggcoef_table(vx809comb_cox_res,
  show_p_values = F, add_reference_rows = T, exponentiate = T,
  signif_stars = F, colour = F
)
```

### Combined results

```{r}
tbl_merge(
  tbls = list(t1, t2),
  tab_spanner = c("VX770", "VX809comb")
)
comb_plot = ggcoef_compare(
  list("VX770" = vx770_cox_res, "VX809comb" = vx809comb_cox_res),
  add_reference_rows = T, exponentiate = T, type = "faceted", colour = F
)
comb_plot
ggsave("./Dissemination/Figures/vx_combined_forest.png",
  plot = comb_plot, width = 12, height = 9, units = "in"
)
```

### Number of events by variable and year

```{r results='asis'}
invisible(lapply(c(xvars, "A_Vx770", "A_VX809comb"), function(v) {
  cat("\n")
  cat("#### By group")
  cat("\n")
  annual %>%
    group_by_at(v) %>%
    summarise(
      n = length(unique(eDWID)),
      `CFRD+` = sum(CFRD == "CFRD+"),
      .groups = "drop"
    ) %>%
    gt() %>%
    print()
  cat("\n")
  cat("#### By and year")
  cat("\n")
  annual %>%
    group_by_at(c(v, "ReviewYear")) %>%
    summarise(
      n = length(unique(eDWID)),
      `CFRD+` = sum(CFRD == "CFRD+"),
      .groups = "drop"
    ) %>%
    gt() %>%
    print()
  cat("\n")
}))
```

### Time varying coefficients

#### 2003 - 2008

```{r}
t1 <- era1 %>% tbl_regression(exponentiate = T)
t1
ggcoef_model(era1,
  show_p_values = F, add_reference_rows = T, exponentiate = T,
  signif_stars = F, colour = F
)
```

#### 2009 - 2013

```{r}
t2 <- era2 %>% tbl_regression(exponentiate = T)
t2
ggcoef_model(era2,
  show_p_values = F, add_reference_rows = T, exponentiate = T,
  signif_stars = F, colour = F
)
```

#### 2014 - 2018

```{r}
t3 <- era3 %>% tbl_regression(exponentiate = T)
t3
ggcoef_model(era3,
  show_p_values = F, add_reference_rows = T, exponentiate = T,
  signif_stars = F, colour = F
)
```

#### Combined results

```{r}
tbl_merge(
  tbls = list(t1, t2, t3),
  tab_spanner = c("2003 - 2008", "2009 - 2013", "2014 - 2018")
)
comb_plot = ggcoef_compare(
  list("2003 - 2008" = era1, "2009 - 2013" = era2, "2014 - 2018" = era3),
  add_reference_rows = T, exponentiate = T, type = "faceted", colour = F
)
comb_plot
ggsave("./Dissemination/Figures/time_combined_forest.png",
  plot = comb_plot, width = 12, height = 9, units = "in"
)
```
