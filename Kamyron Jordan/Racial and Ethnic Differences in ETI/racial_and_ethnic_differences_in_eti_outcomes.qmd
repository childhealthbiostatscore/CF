---
title: "Racial and Ethnic Differences in ETI: Outcomes"
author: "Tim Vigers"
date: "today"
date-format: long
format:
  html:
    toc: true
    toc-depth: 5
    toc-float: true
    number-sections: true
    code-fold: true
    self-contained: true
    fig-cap-location: top
    fig-height: 10
    fig-width: 10
    page-layout: full
    theme:
      light: flatly
      dark: darkly
editor: source
---

```{r setup}
#| include: false
# Libraries
library(tidyverse)
library(lmerTest)
library(splines)
library(ggeffects)
library(performance)
library(segmented)
# Paths
home_dir <- switch(Sys.info()["sysname"],
  "Darwin" = "/Users/timvigers/Library/CloudStorage/OneDrive-TheUniversityofColoradoDenver/Vigers/CF",
  "Windows" = "C:/Users/Tim/OneDrive - The University of Colorado Denver/Vigers/CF",
  "Linux" = "/home/timvigers/OneDrive/Vigers/CF"
)
knitr::opts_knit$set(root.dir = home_dir)
```

```{r data import}
# source("/home/timvigers/GitHub/CF/Kamyron Jordan/Racial and Ethnic Differences in ETI/create_outcomes_dataset.R")
load("./Kamyron Jordan/Racial and Ethnic Differences in ETI/Data_Cleaned/outcomes_dataset.RData")
```

# Data cleaning

1. Lung function percent predicted values < 20% or > 150% were excluded.
2. Limited to 3 years before and 2 years after ETI start.
  - Based on `Modulator_trikafta_first_date` variable provided by CFFPR.
3. Hospitalizations and home IV episodes excluded.
4. Years of pregnancy excluded (we only have annualized pregancy data, so don't know exact dates for this).

```{r functions}
# Plots
loess_plot <- function(data = encounter, outcome, facet = F, smooth = "bs",
                       df = 10) {
  p <- ggplot(data, aes(x = Days, y = !!sym(outcome), color = Race)) +
    geom_point(
      shape = ".", aes(x = Days, y = !!sym(outcome)), inherit.aes = F,
      alpha = 0.1
    ) +
    theme_classic()
  if (smooth == "bs") {
    p <- p + geom_smooth(method = "lm", formula = y ~ splines::bs(x,
      degree = 3, df = df
    ))
  }
  if (smooth == "loess") {
    p <- p + geom_smooth(method = "loess")
  }
  if (smooth == "gam") {
    p <- p + geom_smooth(method = "gam")
  }
  if (facet) {
    p <- p + facet_wrap(~Race)
  }
  return(p)
}
```

# LOESS-smoothed outcome plots

```{r results='asis'}
#| warning: false
invisible(lapply(continuous_outcomes, function(o) {
  cat("\n")
  cat("\n")
  cat("##", o)
  cat("\n")
  cat("\n")
  print(loess_plot(outcome = o, smooth = "loess"))
  print(loess_plot(outcome = o, facet = T, smooth = "loess"))
}))
```

# B-spline smoothing (cubic, df=10)

```{r results='asis'}
#| warning: false
invisible(lapply(continuous_outcomes, function(o) {
  cat("\n")
  cat("\n")
  cat("##", o)
  cat("\n")
  cat("\n")
  print(loess_plot(outcome = o, smooth = "bs"))
  print(loess_plot(outcome = o, facet = T, smooth = "bs"))
}))
```

# B-spline smoothing (cubic, df=3)

```{r results='asis'}
#| warning: false
invisible(lapply(continuous_outcomes, function(o) {
  cat("\n")
  cat("\n")
  cat("##", o)
  cat("\n")
  cat("\n")
  print(loess_plot(outcome = o, smooth = "bs", df = 3))
  print(loess_plot(outcome = o, facet = T, smooth = "bs", df = 3))
}))
```

# GAM smoothing

```{r results='asis'}
#| warning: false
invisible(lapply(continuous_outcomes, function(o) {
  cat("\n")
  cat("\n")
  cat("##", o)
  cat("\n")
  cat("\n")
  print(loess_plot(outcome = o, smooth = "gam"))
  print(loess_plot(outcome = o, facet = T, smooth = "gam"))
}))
```

# Segmented models

The following models are adjusted for age group and insurance status. We fit a Gaussian mixed model for continuous outcomes with random intercept for each subject.

```{r}
invisible(lapply(continuous_outcomes), function(o) {
  f <- as.formula(paste0(
    o,
    "~ age_group + Insurance + bs(Days, knots = 0, degree = 1) * Race + (1 | eDWID)"
  ))
  m = lmer(f,data = encounter)
  predict_response(model = m, terms = c("Days[all]", "Race")) %>% plot()
})

```
