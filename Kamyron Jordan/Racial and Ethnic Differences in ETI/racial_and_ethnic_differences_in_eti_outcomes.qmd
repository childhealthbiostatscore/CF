---
title: "Racial and Ethnic Differences in ETI: Outcomes"
author: "Tim Vigers"
date: "today"
date-format: long
format:
  html:
    toc: true
    toc-depth: 5
    toc-float: true
    number-sections: true
    code-fold: true
    self-contained: true
    fig-cap-location: top
    fig-height: 10
    fig-width: 10
    page-layout: full
    theme:
      light: flatly
      dark: darkly
editor: source
---

```{r setup}
#| include: false
# Libraries
library(nlme)
library(performance)
library(segmented)
library(tidyverse)
library(mcp)
# Paths
home_dir <- switch(Sys.info()["sysname"],
  "Darwin" = "/Users/timvigers/Library/CloudStorage/OneDrive-TheUniversityofColoradoDenver/Vigers/CF",
  "Windows" = "C:/Users/Tim/OneDrive - The University of Colorado Denver/Vigers/CF",
  "Linux" = "/home/timvigers/OneDrive/Vigers/CF"
)
knitr::opts_knit$set(root.dir = home_dir)
```

```{r data setup}
#| include: false
# Import
encounter <- read.csv("./Kamyron Jordan/Racial and Ethnic Differences in ETI/Data_Raw/DataDelivery_20240125/CFF22_encountersMerged_Del1.csv", na.strings = "")
annual <- read.csv("./Kamyron Jordan/Racial and Ethnic Differences in ETI/Data_Raw/DataDelivery_20240125/CFF22_Annualized_Del1.csv", na.strings = "")
demo <- read.csv("./Kamyron Jordan/Racial and Ethnic Differences in ETI/Data_Raw/DataDelivery_20240125/CFF22_DemogCFDiag_Del1.csv", na.strings = "")
# Race variable
races <- list(
  "Race1" = "White",
  "Race2" = "Black or African American",
  "Race3" = "American Indian or Alaska Native",
  "Race4" = "Asian",
  "Race5" = "Native Hawaiian or Other Pacific Islander",
  "Race6" = "Some other race"
)
demo$Race <- apply(demo[, paste0("Race", 1:6)], 1, function(r) {
  w <- which(r == 1)
  if (length(w) > 1 | 6 %in% w) {
    return("Mixed/Other/Unknown Race")
  } else {
    return(as.character(races[w]))
  }
})
demo$Race[demo$Hispanicrace == 1] <- "Hispanic or Latino"
demo$Race[is.na(demo$Hispanicrace)] <- "Mixed/Other/Unknown Race"
demo$Race <- factor(demo$Race,
  levels = c(
    "White", "Black or African American", "Hispanic or Latino", "Asian",
    "American Indian or Alaska Native",
    "Native Hawaiian or Other Pacific Islander", "Mixed/Other/Unknown Race"
  ),
  labels = c(
    "Non-Hispanic White", "Black or African American", "Hispanic or Latino", "Asian",
    "Other", "Other", "Other"
  )
)
# Insurance
ins_vars <- c(paste0("insurance", 1:7), "noinsurance")
ins <- c(
  "Health Insurance Policy (e.g. Private Insurance)", "Medicare", "Medicaid",
  "State special needs program, e.g., BCMH, CCS, CRS, GHPP, etc.",
  "TriCare or other military health plan",
  "Indian Health Service", "Other", "No Insurance"
)
annual$Insurance <- apply(annual[, ins_vars], 1, function(r) {
  w <- which(r == 1)
  if (length(w) == 0) {
    return(NA)
  } else if (length(w) > 1) {
    return("More than one")
  } else {
    return(ins[w])
  }
})
annual$Insurance <- factor(annual$Insurance,
  levels = c(
    "Health Insurance Policy (e.g. Private Insurance)",
    "Indian Health Service",
    "Medicaid",
    "Medicare",
    "More than one",
    "No Insurance",
    "Other",
    "State special needs program, e.g., BCMH, CCS, CRS, GHPP, etc.",
    "TriCare or other military health plan"
  ),
  labels = c(
    "Private", "Public", "Public", "Public", "More Than One", "No Insurance",
    "No Insurance", "Public", "Tricare"
  )
)
# Merge
encounter <- left_join(
  encounter,
  demo %>% select(eDWID, Race, Modulator_trikafta_first_date)
)
encounter <- left_join(encounter,
  annual %>% select(eDWID, ReviewYear, Insurance),
  by = join_by(eDWID, reviewyear == ReviewYear)
)
# Age group
encounter$age_group <- cut(encounter$encounterage, breaks = c(6, 12, 18, 30, Inf), right = F)
# Days between encounter and first ETI
encounter$Modulator_trikafta_first_date <-
  mdy(encounter$Modulator_trikafta_first_date)
encounter$encounterdate <- mdy(encounter$encounterdate)
encounter$Days <- as.numeric(encounter$encounterdate - encounter$Modulator_trikafta_first_date)
# Remove impossible lung function values
encounter$gli_fev1_ppred_rn[encounter$gli_fev1_ppred_rn < 20 | encounter$gli_fev1_ppred_rn > 150] <- NA
encounter$gli_fvc_ppred_rn[encounter$gli_fvc_ppred_rn < 20 | encounter$gli_fvc_ppred_rn > 150] <- NA
encounter$gli_fev1fvc_ppred_rn[encounter$gli_fev1fvc_ppred_rn < 20 | encounter$gli_fev1fvc_ppred_rn > 150] <- NA
# Filter
encounter <- encounter %>%
  filter(!is.na(Days))
# List of outcomes
continuous_outcomes <- c(
  "gli_fev1_ppred_rn", "gli_fvc_ppred_rn", "gli_fev1fvc_ppred_rn",
  "bmipercentile", "heightpercentile", "weightpercentile"
)
binary_outcomes <- c(
  "staphylococcus_aureus", "haemophilus_influenzae", "pseudomonasaeruginosa",
  "burkho_complex"
)
# Save dataset for mcp model script
# save(encounter, file = "./Kamyron Jordan/Racial and Ethnic Differences in ETI/Data_Cleaned/cleaned_outcomes_dataset.RData")
```

```{r functions}
# Plots
loess_plot <- function(data = encounter, outcome, facet = F, smooth = "bs",
                       df = 10) {
  p <- ggplot(data, aes(x = Days, y = !!sym(outcome), color = Race)) +
    geom_point(
      shape = ".", aes(x = Days, y = !!sym(outcome)), inherit.aes = F,
      alpha = 0.1
    ) +
    theme_classic()
  if (smooth == "bs") {
    p <- p + geom_smooth(method = "lm", formula = y ~ splines::bs(x,
      degree = 3, df = df
    ))
  }
  if (smooth == "loess") {
    p <- p + geom_smooth(method = "loess")
  }
  if (smooth == "gam") {
    p <- p + geom_smooth(method = "gam")
  }
  if (facet) {
    p <- p + facet_wrap(~Race)
  }
  return(p)
}
```

# Data cleaning

1. Lung function percent predicted values < 20% or > 150% were excluded.

# LOESS-smoothed outcome plots

```{r results='asis'}
#| warning: false
invisible(lapply(continuous_outcomes, function(o) {
  cat("\n")
  cat("\n")
  cat("##", o)
  cat("\n")
  cat("\n")
  print(loess_plot(outcome = o, smooth = "loess"))
  print(loess_plot(outcome = o, facet = T, smooth = "loess"))
}))
```

# B-spline smoothing (cubic, df=10)

```{r results='asis'}
#| warning: false
invisible(lapply(continuous_outcomes, function(o) {
  cat("\n")
  cat("\n")
  cat("##", o)
  cat("\n")
  cat("\n")
  print(loess_plot(outcome = o, smooth = "bs"))
  print(loess_plot(outcome = o, facet = T, smooth = "bs"))
}))
```

# B-spline smoothing (cubic, df=3)

```{r results='asis'}
#| warning: false
invisible(lapply(continuous_outcomes, function(o) {
  cat("\n")
  cat("\n")
  cat("##", o)
  cat("\n")
  cat("\n")
  print(loess_plot(outcome = o, smooth = "bs", df = 3))
  print(loess_plot(outcome = o, facet = T, smooth = "bs", df = 3))
}))
```

# GAM smoothing

```{r results='asis'}
#| warning: false
invisible(lapply(continuous_outcomes, function(o) {
  cat("\n")
  cat("\n")
  cat("##", o)
  cat("\n")
  cat("\n")
  print(loess_plot(outcome = o, smooth = "gam"))
  print(loess_plot(outcome = o, facet = T, smooth = "gam"))
}))
```

# Segmented models

The following models are adjusted for age group and insurance status. First, a Gaussian mixed model is fit with random intercept for patient ID. Then, the `segmented.lme` function is applied to this mixed model, with no pre-specified starting values and `npsi = 2`. The change points are treated as random effects and allowed to vary within a person.

## FEV1

Based on visual inspection of the LOESS plots, I expect there to be a change in slope at around 0 and maybe a second one at around 1 year.

```{r}
load("./Kamyron Jordan/Racial and Ethnic Differences in ETI/Data_Cleaned/segmented/fev1_single_cp_fit.RData")
plot(fev1_single_cp_fit)
summary(fev1_single_cp_fit)
load("./Kamyron Jordan/Racial and Ethnic Differences in ETI/Data_Cleaned/segmented/fev1_double_cp_fit.RData")
plot(fev1_double_cp_fit)
summary(fev1_double_cp_fit)
```

## A Bayesian approach

### FEV1

```{r}
#| eval: false
load("./Kamyron Jordan/Racial and Ethnic Differences in ETI/Data_Cleaned/fev1_single_cp_fit.RData")
load("./Kamyron Jordan/Racial and Ethnic Differences in ETI/Data_Cleaned/fev1_double_cp_fit.RData")
```

- Is the second change point due to who is being collected after one year out?

Look at 3 years before and two after

2 years for 12 and up
1.5 years for 6
