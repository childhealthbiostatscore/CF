---
title: "Sweat electrolytes and CFTR activity in the era of CFTR modulators"
author: "Tim Vigers"
date: "today"
date-format: long
format:
  html:
    toc: true
    toc-depth: 10
    toc-float: true
    number-sections: true
    code-fold: true
    self-contained: true
    fig-cap-location: top
    page-layout: full
    theme:
      light: flatly
      dark: darkly
bibliography: /Users/timvigers/Documents/Notes/zotero.bib
csl: /Users/timvigers/GitHub/styles/american-medical-association.csl
editor: source
---

```{r setup}
#| include: false
library(DiagrammeR)
library(readxl)
library(arsenal)
library(tidyverse)
library(factoextra)
library(pROC)
library(knitr)
library(caret)
source("/Users/timvigers/GitHub/CF/genotype_class_severity.R")
switch(Sys.info()[["sysname"]],
  Windows = {
    home_dir <- "C:/Users/timvigers/OneDrive-TheUniversityofColoradoDenver/Vigers/CF/Edith Zemanick/Sweat Test"
  },
  Darwin = {
    home_dir <- "/Users/timvigers/Library/CloudStorage/OneDrive-TheUniversityofColoradoDenver/Vigers/CF/Edith Zemanick/Sweat Test"
  }
)
knitr::opts_knit$set(root.dir = home_dir)
```

```{r data cleaning}
# Import exclusion data from Excel
diagnoses <- read_excel("./Data_Cleaned/AM reclassifications All Patients with CF or Non-CF.xlsx")
exclude <- diagnoses$PatientID[!is.na(diagnoses$Exclude) | diagnoses$Code == "Exclude"]
exclude <- exclude[!is.na(exclude)]
# Import data
df <- read.csv("./Data_Raw/Copy of Sweat Tests_AllFor202558_revised01Feb2021.csv", na.strings = "")
n1 <- nrow(df)
n2 <- length(unique(df$PatientID))
# Remove exclusions from Angela
df <- df[!(df$PatientID %in% exclude), ]
# Diagnosis per Angela
df$Diagnosis <- factor(diagnoses$Diagnosis[match(df$PatientID, diagnoses$PatientID)],
  levels = c("CFTR-related disorder", "CRMS", "Cystic Fibrosis", "Non-CF"),
  labels = c("CFTR-RD or CRMS", "CFTR-RD or CRMS", "Cystic Fibrosis", "Non-CF")
)
# Add modulator info
cftr <- read.csv("./Data_Raw/Copy of Report CFTR Modulators.csv")
df$Modulator <- apply(df, 1, function(r) {
  mod <- cftr[cftr$Patient.ID == as.numeric(r["PatientID"]), ]
  if (any(duplicated(mod$Age.at.Start..years.))) {
    mod <- mod[-which(duplicated(mod$Age.at.Start..years.)), ]
  }
  mod <- mod[order(mod$Age.at.Start..years.), ]
  age <- as.numeric(r["Age.at.Test.in.Years"])
  as.character(cut(age, c(-Inf, mod$Age.at.Start..years., Inf),
    labels = c("None", mod$Modulator), right = F
  ))
})
# Numeric variables
num_vars <- c("Amount", "Na", "K", "Cl")
num_vars <- c(paste0(num_vars, "_Left"), paste0(num_vars, "_Right"))
df[, num_vars] <- suppressWarnings(lapply(df[, num_vars], as.numeric))
# Filter per Maxie's code
exclude2 <- c(22, 23, 24, 29, 31, 474, 483, 484, 485, 505, 510, 785, 791, 792, 793)
no_dem <- unique(df$PatientID[df$Demographics.Available != "TRUE" | is.na(df$Demographics.Available) | df$Sex == ""])
df <- df %>%
  mutate(Age.at.Test.in.Days = Age.at.Test.in.Weeks * 7) %>%
  filter(
    Age.at.Test.in.Years < 50 & Age.at.Test.in.Days >= 2,
    !(Diagnosis == "Non-CF" & PatientID %in% exclude2),
    Modulator == "None"
  ) %>%
  distinct(.) %>%
  filter(Sex != "", Demographics.Available == "TRUE")
# Genotype info
## By severity
df$geno1 <- cf_genotype_class_severity(df$Genotypes1)
df$geno2 <- cf_genotype_class_severity(df$Genotypes2)
df$geno1[df$Diagnosis == "Non-CF"] <- "Not CF"
df$geno2[df$Diagnosis == "Non-CF"] <- "Not CF"
df$geno_risk <- paste(df$geno1, df$geno2, sep = "_")
df$geno_risk <- factor(df$geno_risk,
  levels = c(
    "Severe_Severe", "Mild_Severe", "Mild_Unknown", "Severe_Mild", "Mild_Mild",
    "Not CF_Not CF", "Severe_Unknown", "Unknown_Severe", "Unknown_Unknown"
  ),
  labels = c(
    "High", "Low", "Low", "Low", "Low", "Not CF", "Unknown",
    "Unknown", "Unknown"
  )
)
## By function
df$geno1_class <- cf_genotype_class_severity(df$Genotypes1, out = "class")
df$geno1_class[grep("508", df$Genotypes1)] <- "F508del"
df$geno1_class <- replace(df$geno1_class, df$geno1_class %in% c("I", "II", "III"), "MF")
df$geno1_class <- replace(df$geno1_class, df$geno1_class %in% c("IV", "V"), "RF")

df$geno2_class <- cf_genotype_class_severity(df$Genotypes2, out = "class")
df$geno2_class[grep("508", df$Genotypes2)] <- "F508del"
df$geno2_class <- replace(df$geno2_class, df$geno2_class %in% c("I", "II", "III"), "MF")
df$geno2_class <- replace(df$geno2_class, df$geno2_class %in% c("IV", "V"), "RF")

df$geno_class <- factor(paste0(
  pmin(df$geno1_class, df$geno2_class), "/",
  pmax(df$geno1_class, df$geno2_class)
))
# Which arm?
df$Arm <- apply(df[, c("Cl", "Cl_Left", "Cl_Right", "Na", "Na_Left", "Na_Right", "K", "K_Left", "K_Right")], 1, function(r) {
  k <- sum(!is.na(r))
  if (k == 6) {
    return("Both")
  } else if (k == 3) {
    return("Arm Not Noted")
  } else {
    return(NA)
  }
})
# Merge left and right values
df$Amount <- apply(df[, c("Amount", "Amount_Left", "Amount_Right")], 1, function(r) {
  amt <- suppressWarnings(as.numeric(as.character(r)))
  mean(amt, na.rm = T)
})
df$Cl <- apply(df[, c("Cl", "Cl_Left", "Cl_Right")], 1, function(r) {
  cl <- suppressWarnings(as.numeric(as.character(r)))
  mean(cl, na.rm = T)
})
df$Na <- apply(df[, c("Na", "Na_Left", "Na_Right")], 1, function(r) {
  na <- suppressWarnings(as.numeric(as.character(r)))
  mean(na, na.rm = T)
})
df$K <- apply(df[, c("K", "K_Left", "K_Right")], 1, function(r) {
  k <- suppressWarnings(as.numeric(as.character(r)))
  mean(k, na.rm = T)
})
# Sodium to chloride ratio
df$`Na/Cl Ratio` <- df$Na / df$Cl
high_ratio <- unique(which(df$`Na/Cl Ratio` > 2))
high_cl <- unique(which(df$Cl > 160))
high_na <- unique(which(df$Na > 160))
df <- df[-unique(c(high_ratio, high_cl, high_na)), ]
# Sweat chloride group
df$`Sweat Chloride Group` <- cut(df$Cl, c(-Inf, 30, 60, Inf),
  right = F,
  labels = c("< 30", "30-59", ">60")
)
# Sort
df <- df %>% arrange(PatientID, Age.at.Test.in.Weeks)
# Table options (most variables are not normally distributed)
mycontrols <- tableby.control(
  numeric.test = "kwt",
  numeric.stats = c("Nmiss", "median", "q1q3")
)
labels <- list(
  Age.at.Test.in.Years = "Age (Years)",
  geno_risk = "Genotype Severity", geno_class = "Specific Genotype"
)
# First measure for everyone
t1_df <- df %>%
  group_by(PatientID) %>%
  filter(row_number() == 1)
# Order groups
df$Diagnosis <- factor(df$Diagnosis, levels = c("Cystic Fibrosis", "CFTR-RD or CRMS", "Non-CF"))
```

# Flowchart

```{r}
grViz("digraph {

# initiate graph
graph [layout = dot]

# global node settings
node [shape = rectangle]

# label nodes
data1 [label = '@@1']
data2 [label = '@@2']
ineligible [label = '@@3']
demo  [label = '@@4']
highna  [label = '@@5']
highcl  [label = '@@6']
highnacl  [label = '@@7']
review [label = '@@8']
analysis [label = '@@9']
ratio [label = '@@10']

# edge definitions with the node IDs
data1  -> data2
data2 -> ineligible
ineligible -> {demo,highna,highcl,highnacl,review}
data2  -> analysis -> ratio
highnacl -> analysis [style=invis]
}
[1]: paste0('Sweat tests performed \\n ','n = ',n1)
[2]: paste0('Unique participants \\n ','n = ',n2)
[3]: paste0('Ineligible \\n ','n = ',n2-nrow(t1_df))
[4]: paste0('No demographics \\n ','n = ',length(no_dem))
[5]: paste0('Na > 160 mmol/L \\n ','n = ',length(high_na))
[6]: paste0('Cl > 160 mmol/L \\n ','n = ',length(high_cl))
[7]: paste0('Na:Cl > 2 \\n ','n = ',length(high_ratio))
[8]: paste0('Other \\n ','n = ',1)
[9]: paste0('Analysis cohort \\n ','n = ',nrow(t1_df))
[10]: paste0('Both Na and Cl Measured \\n ','n = ',sum(!is.na(df$`Na/Cl Ratio`)))
")
```

# Cohorts by Na/Cl ratio

## Based on visual inspection

```{r warning=FALSE}
# Visual inspection
ggplot(df, aes(x = Diagnosis, y = `Na/Cl Ratio`)) +
  geom_boxplot() +
  geom_hline(yintercept = 1, color = "red") +
  geom_hline(yintercept = 1.25, color = "red") +
  theme_classic()
df$nacl_ratio_cat <- cut(df$`Na/Cl Ratio`, breaks = c(-Inf, 1, 1.25, Inf), right = F)
kable(table(df$nacl_ratio_cat, df$Diagnosis))
```

## Based on k-means clustering

### By Na and Cl

```{r warning=FALSE}
set.seed(1017)
# K means
km_df <- df %>%
  select(Diagnosis, Na, Cl) %>%
  drop_na()
ggplot(km_df, aes(x = Na, y = Cl, color = Diagnosis)) +
  geom_point()
km <- kmeans(km_df[, c("Na", "Cl")], centers = 3)
km_df$Cluster <- factor(km$cluster,
  levels = 1:3,
  labels = c("High", "Medium", "Low")
)
centers <- data.frame(km$centers)
centers$Cluster <- rownames(km$centers)
centers$Cluster <- factor(centers$Cluster,
  levels = 1:3,
  labels = c("High", "Medium", "Low")
)
ggplot(km_df, aes(x = Na, y = Cl, color = Cluster)) +
  geom_point(shape = 20, alpha = 0.2) +
  geom_point(data = centers, size = 5)
rownames(centers) <- NULL
centers <- centers %>% column_to_rownames("Cluster")
kable(centers, caption = "K-means centers", row.names = T)
kable(as.data.frame.matrix(table(km_df$Cluster, km_df$Diagnosis)), row.names = T)
```

### By Na/Cl ratio

```{r warning=FALSE}
set.seed(1017)
# K means
km_df <- df %>%
  select(Diagnosis, `Na/Cl Ratio`) %>%
  drop_na()
km <- kmeans(km_df[, c("Na/Cl Ratio")], centers = 3)
km_df$Cluster <- factor(km$cluster,
  levels = 1:3,
  labels = c("Low", "Medium", "High")
)
centers <- data.frame(km$centers)
centers$Cluster <- rownames(km$centers)
centers$Cluster <- factor(centers$Cluster,
  levels = 1:3,
  labels = c("Low", "Medium", "High")
)
rownames(centers) <- NULL
centers <- centers %>% column_to_rownames("Cluster")
kable(centers, caption = "K-means centers", row.names = T)
kable(as.data.frame.matrix(table(km_df$Cluster, km_df$Diagnosis)), row.names = T)
```

# Patient Demographics and Sample Characteristics

For those with two sweat electrolyte measures (left and right), the average of the two was used. Each participants' first sweat test value was used for the following tables.

```{r results='asis'}
t1 <- tableby(
  Diagnosis ~ Sex + Age.at.Test.in.Years + Method + fe(geno_risk) + fe(geno_class),
  data = t1_df, control = mycontrols, simulate.p.value = T
)
summary(t1,
  pfootnote = T,
  labelTranslations = labels
)
```

# Electrolyte comparisons

## By diagnosis

```{r results='asis'}
t1 <- tableby(
  Diagnosis ~ Cl + Na + `Na/Cl Ratio` + `Sweat Chloride Group`,
  data = t1_df, control = mycontrols,
)
summary(t1,
  pfootnote = T,
  labelTranslations = labels
)
```

### By genotype severity (CF only)

```{r results='asis'}
t1 <- tableby(
  geno_risk ~ Cl + Na + `Na/Cl Ratio` + `Sweat Chloride Group`,
  data = t1_df[t1_df$Diagnosis == "Cystic Fibrosis", ], control = mycontrols,
)
summary(t1,
  pfootnote = T,
  labelTranslations = labels
)
```

### Pairwise comparisons

Pairwise comparisons using Wilcoxon rank sum test with continuity correction

```{r}
pairwise.wilcox.test(t1_df$Cl, t1_df$Diagnosis, p.adjust.method = "fdr")
pairwise.wilcox.test(t1_df$Na, t1_df$Diagnosis, p.adjust.method = "fdr")
pairwise.wilcox.test(t1_df$`Na/Cl Ratio`, t1_df$Diagnosis, p.adjust.method = "fdr")
```

## By sweat chloride group

```{r results='asis'}
t1 <- tableby(
  `Sweat Chloride Group` ~ fe(geno_risk) + fe(Diagnosis) + Cl + Na + `Na/Cl Ratio`,
  data = t1_df, control = mycontrols, simulate.p.value = T
)
summary(t1,
  pfootnote = T,
  labelTranslations = labels
)
```

## By sweat chloride group and diagnosis

### Cystic fibrosis

```{r results='asis'}
t1 <- tableby(`Sweat Chloride Group` ~ Cl + Na + `Na/Cl Ratio`,
  data = t1_df[t1_df$Diagnosis == "Cystic Fibrosis", ], control = mycontrols
)
summary(t1,
  pfootnote = T,
  labelTranslations = labels
)
```

### CFTR-RD or CRMS

```{r results='asis'}
t1 <- tableby(`Sweat Chloride Group` ~ Cl + Na + `Na/Cl Ratio`,
  data = t1_df[t1_df$Diagnosis == "CFTR-RD or CRMS", ],
  control = mycontrols
)
summary(t1,
  pfootnote = T,
  labelTranslations = labels
)
```

### Non-CF

```{r results='asis'}
t1 <- tableby(`Sweat Chloride Group` ~ Cl + Na + `Na/Cl Ratio`,
  data = t1_df[t1_df$Diagnosis == "Non-CF", ], control = mycontrols
)
summary(t1,
  pfootnote = T,
  labelTranslations = labels
)
```

# Variability

## Within occasion

For all participants with more than one sweat test, we used only their first value to calculate the absolute difference (AD) between left and right arm.

```{r}
t1_df$`Cl AD` <- abs(t1_df$Cl_Left - t1_df$Cl_Right)
t1_df$`Na AD` <- abs(t1_df$Na_Left - t1_df$Na_Right)
```

### By diagnosis

```{r results='asis'}
t1 <- tableby(
  Diagnosis ~ `Cl AD` + `Na AD`,
  data = t1_df, control = mycontrols,
)
summary(t1,
  pfootnote = T,
  labelTranslations = labels
)
```

### By sweat chloride group

```{r results='asis'}
t1 <- tableby(
  `Sweat Chloride Group` ~ `Cl AD` + `Na AD`,
  data = t1_df, control = mycontrols
)
summary(t1,
  pfootnote = T,
  labelTranslations = labels
)
```

### By genotype risk

```{r results='asis'}
t1 <- tableby(
  geno_risk ~ `Cl AD` + `Na AD`,
  data = t1_df, control = mycontrols
)
summary(t1,
  pfootnote = T,
  labelTranslations = labels
)
```

## Between occasion

For all participants with more than one sweat test, we compared their first and last values by calculating the absolute difference (AD) between first and last measure.

```{r results='asis'}
# Get first and last values for everyone with more than 1
multiples <- df %>%
  group_by(PatientID) %>%
  filter(n() > 1) %>% # Multiple values only
  filter(row_number() == 1 | row_number() == n()) %>% # First and last
  summarise(
    `Cl AD` = abs(last(Cl) - first(Cl)), # Calculate AD
    `Na AD` = abs(last(Na) - first(Na)),
    Diagnosis = first(Diagnosis),
    `Sweat Chloride Group` = first(`Sweat Chloride Group`),
    geno_risk = first(geno_risk)
  )
```

### By diagnosis

```{r results='asis'}
t1 <- tableby(
  Diagnosis ~ `Cl AD` + `Na AD`,
  data = multiples, control = mycontrols,
)
summary(t1,
  pfootnote = T,
  labelTranslations = labels
)
```

### By sweat chloride group

```{r results='asis'}
t1 <- tableby(
  `Sweat Chloride Group` ~ `Cl AD` + `Na AD`,
  data = multiples, control = mycontrols
)
summary(t1,
  pfootnote = T,
  labelTranslations = labels
)
```

### By genotype risk

```{r results='asis'}
t1 <- tableby(
  geno_risk ~ `Cl AD` + `Na AD`,
  data = multiples, control = mycontrols
)
summary(t1,
  pfootnote = T,
  labelTranslations = labels
)
```

# Cutoff analyses

We performed receiver operating characteristic (ROC) analysis to find a sweat sodium to sweat chloride cutoff that distinguishes between groups. Only the first sweat test from each participant was used.

## Full cohort

The full cohort analyses include all participants.

### Diagnosis

#### ROC

##### Na/Cl Ratio

```{r}
roc_cf <- roc(
  response = t1_df$`Diagnosis`,
  predictor = t1_df$`Na/Cl Ratio`,
  levels = c("CFTR-RD or CRMS", "Cystic Fibrosis"),
  quiet = T
)
coords_cf <- round(coords(roc_cf, "best", best.method = "youden"), 3)

roc_non_cf <- roc(
  response = t1_df$`Diagnosis`,
  predictor = t1_df$`Na/Cl Ratio`,
  levels = c("Non-CF", "CFTR-RD or CRMS"),
  quiet = T
)
coords_non_cf <- round(coords(roc_non_cf, "best", best.method = "youden"), 3)

plot(roc_cf, print.auc = TRUE, col = "blue")
plot(roc_non_cf, print.auc = TRUE, col = "red")
```

The blue curve shows the ROC for distinguishing between CFTR-RD or CRMS vs. CF, and the red is the ROC curve for distinguishing between non-CF vs. CFTR-RD or CRMS. The optimal threshold for distinguishing between CFTR-RD or CRMS vs. CF was `r coords_cf$threshold` (sensitivity = `r coords_cf$sensitivity`, specificity = `r coords_cf$specificity`) based on the Youden index. The optimal threshold for distinguishing between non-CF vs. CFTR-RD or CRMS was `r coords_non_cf$threshold` (sensitivity = `r coords_non_cf$sensitivity`, specificity = `r coords_non_cf$specificity`) based on the Youden index. The mean AUC for the two curves is `r round(mean(c(roc_cf$auc,roc_non_cf$auc)),3)`.

##### Cl Alone

```{r}
roc_cf_cl <- roc(
  response = t1_df$`Diagnosis`,
  predictor = t1_df$Cl,
  levels = c("CFTR-RD or CRMS", "Cystic Fibrosis"),
  quiet = T
)
coords_cf <- round(coords(roc_cf_cl, "best", best.method = "youden"), 3)

roc_non_cf_cl <- roc(
  response = t1_df$`Diagnosis`,
  predictor = t1_df$Cl,
  levels = c("Non-CF", "CFTR-RD or CRMS"),
  quiet = T
)
coords_non_cf <- round(coords(roc_non_cf_cl, "best", best.method = "youden"), 3)

plot(roc_cf_cl, print.auc = TRUE, col = "blue")
plot(roc_non_cf_cl, print.auc = TRUE, col = "red")
```

The blue curve shows the ROC for distinguishing between CFTR-RD or CRMS vs. CF, and the red is the ROC curve for distinguishing between non-CF vs. CFTR-RD or CRMS. The optimal threshold for distinguishing between CFTR-RD or CRMS vs. CF was `r coords_cf$threshold` (sensitivity = `r coords_cf$sensitivity`, specificity = `r coords_cf$specificity`) based on the Youden index. The optimal threshold for distinguishing between non-CF vs. CFTR-RD or CRMS was `r coords_non_cf$threshold` (sensitivity = `r coords_non_cf$sensitivity`, specificity = `r coords_non_cf$specificity`) based on the Youden index. The mean AUC for the two curves is `r round(mean(c(roc_cf$auc,roc_non_cf$auc)),3)`.

##### ROC Comparison

###### CFTR-RD or CRMS vs. CF

```{r}
roc.test(roc_cf, roc_cf_cl)
```

###### Non-CF vs. CFTR-RD or CRMS

```{r}
roc.test(roc_non_cf, roc_non_cf_cl)
```

#### Histogram by group

Vertical blue line indicates the threshold for CFTR-RD or CRMS vs. CF and red indicates the threshold for non-CF vs. CFTR-RD or CRMS. Na/Cl ratio was log-transformed for easier visualization.

```{r warning=FALSE}
ggplot(
  t1_df[!is.na(t1_df$`Diagnosis`), ],
  aes(log(`Na/Cl Ratio`), fill = `Diagnosis`)
) +
  geom_histogram(alpha = 0.3, position = "identity", bins = 50) +
  geom_vline(xintercept = log(coords_cf$threshold), color = "blue") +
  geom_vline(xintercept = log(coords_non_cf$threshold), color = "red") +
  ylab("Count") +
  xlab("ln(Na/Cl Ratio)") +
  theme_bw()
```

### Genotype

Participants with unknown genotype risk were excluded from this analysis.

#### ROC

```{r}
# Re-format diagnosis column
t1_df$`Genotype Risk` <- factor(t1_df$geno_risk,
  levels = c("Not CF", "Low", "High", "Unknown"),
  ordered = T
)
t1_df$`Genotype Risk`[t1_df$`Genotype Risk` == "Unknown"] <- NA
```

```{r}
roc_cf <- roc(
  response = t1_df$`Genotype Risk`,
  predictor = t1_df$`Na/Cl Ratio`,
  levels = c("Low", "High"),
  quiet = T
)
coords_cf <- round(coords(roc_cf, "best", best.method = "youden"), 3)


roc_non_cf <- roc(
  response = t1_df$`Genotype Risk`,
  predictor = t1_df$`Na/Cl Ratio`,
  levels = c("Not CF", "Low"),
  quiet = T
)
coords_non_cf <- round(coords(roc_non_cf, "best", best.method = "youden"), 3)

plot(roc_cf, print.auc = TRUE, col = "blue")
plot(roc_non_cf, print.auc = TRUE, col = "red", print.auc.y = .4, add = TRUE)
```

The blue curve shows the ROC for distinguishing between low vs. high risk, and the red is the ROC curve for distinguishing between non-CF vs. low risk. The optimal threshold for distinguishing between low vs. high risk was `r coords_cf$threshold` (sensitivity = `r coords_cf$sensitivity`, specificity = `r coords_cf$specificity`) based on the Youden index. The optimal threshold for distinguishing between non-CF vs. low risk was `r coords_non_cf$threshold` (sensitivity = `r coords_non_cf$sensitivity`, specificity = `r coords_non_cf$specificity`) based on the Youden index. The mean AUC for the two curves is `r round(mean(c(roc_cf$auc,roc_non_cf$auc)),3)`.

#### Histogram by group

Vertical blue line indicates the threshold for low vs. high risk and red indicates the threshold for non-CF vs. low risk. Na/Cl ratio was log-transformed for easier visualization.

```{r warning=FALSE}
ggplot(
  t1_df[!is.na(t1_df$`Genotype Risk`), ],
  aes(log(`Na/Cl Ratio`), fill = `Genotype Risk`)
) +
  geom_histogram(alpha = 0.3, position = "identity", bins = 50) +
  geom_vline(xintercept = log(coords_cf$threshold), color = "blue") +
  geom_vline(xintercept = log(coords_non_cf$threshold), color = "red") +
  ylab("Count") +
  xlab("ln(Na/Cl Ratio)") +
  theme_bw()
```

## Limited cohort

The limited cohort analyses only included participants with sweat chloride < 60.

### Diagnosis

#### ROC

```{r}
# Exclude those with Cl >= 60
t1_df <- t1_df %>% filter(Cl < 60)
```

```{r}
roc_cf <- roc(
  response = t1_df$`Diagnosis`,
  predictor = t1_df$`Na/Cl Ratio`,
  levels = c("CFTR-RD or CRMS", "Cystic Fibrosis"),
  quiet = T
)
coords_cf <- round(coords(roc_cf, "best", best.method = "youden"), 3)


roc_non_cf <- roc(
  response = t1_df$`Diagnosis`,
  predictor = t1_df$`Na/Cl Ratio`,
  levels = c("Non-CF", "CFTR-RD or CRMS"),
  quiet = T
)
coords_non_cf <- round(coords(roc_non_cf, "best", best.method = "youden"), 3)

plot(roc_cf, print.auc = TRUE, col = "blue")
plot(roc_non_cf, print.auc = TRUE, col = "red", print.auc.y = .4, add = TRUE)
```

The blue curve shows the ROC for distinguishing between CFTR-RD or CRMS vs. CF, and the red is the ROC curve for distinguishing between non-CF vs. CFTR-RD or CRMS. The optimal threshold for distinguishing between CFTR-RD or CRMS vs. CF was `r coords_cf$threshold` (sensitivity = `r coords_cf$sensitivity`, specificity = `r coords_cf$specificity`) based on the Youden index. The optimal threshold for distinguishing between non-CF vs. CFTR-RD or CRMS was `r coords_non_cf$threshold` (sensitivity = `r coords_non_cf$sensitivity`, specificity = `r coords_non_cf$specificity`) based on the Youden index. The mean AUC for the two curves is `r round(mean(c(roc_cf$auc,roc_non_cf$auc)),3)`.

#### Histogram by group

Vertical blue line indicates the threshold for CFTR-RD or CRMS vs. CF and red indicates the threshold for non-CF vs. CFTR-RD or CRMS. Na/Cl ratio was log-transformed for easier visualization.

```{r warning=FALSE}
ggplot(
  t1_df[!is.na(t1_df$`Diagnosis`), ],
  aes(log(`Na/Cl Ratio`), fill = `Diagnosis`)
) +
  geom_histogram(alpha = 0.3, position = "identity", bins = 50) +
  geom_vline(xintercept = log(coords_cf$threshold), color = "blue") +
  geom_vline(xintercept = log(coords_non_cf$threshold), color = "red") +
  ylab("Count") +
  xlab("ln(Na/Cl Ratio)") +
  theme_bw()
```

### Genotype

Participants with unknown genotype risk were excluded from this analysis.

#### ROC

```{r}
roc_cf <- roc(
  response = t1_df$`Genotype Risk`,
  predictor = t1_df$`Na/Cl Ratio`,
  levels = c("Low", "High"),
  quiet = T
)
coords_cf <- round(coords(roc_cf, "best", best.method = "youden"), 3)


roc_non_cf <- roc(
  response = t1_df$`Genotype Risk`,
  predictor = t1_df$`Na/Cl Ratio`,
  levels = c("Not CF", "Low"),
  quiet = T
)
coords_non_cf <- round(coords(roc_non_cf, "best", best.method = "youden"), 3)

plot(roc_cf, print.auc = TRUE, col = "blue")
plot(roc_non_cf, print.auc = TRUE, col = "red", print.auc.y = .4, add = TRUE)
```

The blue curve shows the ROC for distinguishing between low vs. high risk, and the red is the ROC curve for distinguishing between non-CF vs. low risk. The optimal threshold for distinguishing between low vs. high risk was `r coords_cf$threshold` (sensitivity = `r coords_cf$sensitivity`, specificity = `r coords_cf$specificity`) based on the Youden index. The optimal threshold for distinguishing between non-CF vs. low risk was `r coords_non_cf$threshold` (sensitivity = `r coords_non_cf$sensitivity`, specificity = `r coords_non_cf$specificity`) based on the Youden index. The mean AUC for the two curves is `r round(mean(c(roc_cf$auc,roc_non_cf$auc)),3)`.

#### Histogram by group

Vertical blue line indicates the threshold for low vs. high risk and red indicates the threshold for non-CF vs. low risk. Na/Cl ratio was log-transformed for easier visualization.

```{r warning=FALSE}
ggplot(
  t1_df[!is.na(t1_df$`Genotype Risk`), ],
  aes(log(`Na/Cl Ratio`), fill = `Genotype Risk`)
) +
  geom_histogram(alpha = 0.3, position = "identity", bins = 50) +
  geom_vline(xintercept = log(coords_cf$threshold), color = "blue") +
  geom_vline(xintercept = log(coords_non_cf$threshold), color = "red") +
  ylab("Count") +
  xlab("ln(Na/Cl Ratio)") +
  theme_bw()
```
