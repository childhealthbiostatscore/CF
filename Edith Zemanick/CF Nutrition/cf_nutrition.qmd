---
title: "CF Nutrition Pre- and Post-CFTR Modulator"
author: "Tim Vigers"
date: "`r format(Sys.time(), '%d %B %Y')`"
format:
  html:
    toc: true
    toc-depth: 5
    toc-float: true
    code-fold: true
    self-contained: true
editor: visual
---

```{r include=FALSE}
library(readxl)
library(tidyverse)
library(parsedate)
library(arsenal)
```

```{r warning=FALSE}
# Import datasets
vit <- read_excel("/Volumes/Documents/Work/Vigers/CF/Edith Zemanick/CF Nutrition/Data_Raw/Report Vitamins_throughDecember2021_revised20220712.xlsx")
mods <- read_excel("/Volumes/Documents/Work/Vigers/CF/Edith Zemanick/CF Nutrition/Data_Raw/Report CFTR Modulators_throughDecember2021.xlsx")
pfts <- read_excel("/Volumes/Documents/Work/Vigers/CF/Edith Zemanick/CF Nutrition/Data_Raw/Report_PFTs_ThroughDecember2021.xlsx")
lfts <- read_excel("/Volumes/Documents/Work/Vigers/CF/Edith Zemanick/CF Nutrition/Data_Raw/Report_LFTs_ThroughDecember2021.xlsx")
geno <- read_excel("/Volumes/Documents/Work/Vigers/CF/CF Info/Sweat Tests from Internal Database_genotype class_withPancStatus.xlsx", na = ".")
# Format
vit$VitaminA_Retinol <- as.numeric(vit$VitaminA_Retinol)
vit$`Age at Test (years)` <- NULL
vit$Date <- as.Date(vit$Date)
vit$`Vitamin E Gamma` <- NULL
mods$`Earliest Date in Registry` <- as.Date(mods$`Earliest Date in Registry`)
pfts <- pfts %>%
  select(PatientID, Sex, Date, `Height (cm)`:`FEV1 % pred`) %>%
  rename(`Patient ID` = PatientID)
pfts$Date <- as.Date(pfts$Date)
lfts <- lfts %>% select(`Patient ID`, Date:GGTP)
lfts$Date <- as.Date(lfts$Date)
geno <- geno %>%
  select(PatientID, genoRisk, PancreaticStatus) %>%
  distinct() %>%
  rename(
    `Patient ID` = PatientID, `Genotype Risk` = genoRisk,
    `Pancreatic Status` = PancreaticStatus
  )
# Get first modulator and start date
mods <- mods %>%
  filter(Modulator %in% c("Kalydeco", "Trikafta")) %>%
  pivot_wider(
    id_cols = `Patient ID`, names_from = Modulator,
    values_from = c(`Earliest Date in Registry`, `Age at Start (years)`)
  )
mods$Start <- pmin(mods$`Earliest Date in Registry_Trikafta`,
  mods$`Earliest Date in Registry_Kalydeco`,
  na.rm = T
)
mods$tf <- mods$`Earliest Date in Registry_Trikafta` == mods$Start
mods$kf <- mods$`Earliest Date in Registry_Kalydeco` == mods$Start
mods <- mods %>% unite(First, tf, kf)
mods$`Age at Start` <- pmin(mods$`Age at Start (years)_Trikafta`,
  mods$`Age at Start (years)_Kalydeco`,
  na.rm = T
)
mods$First <- factor(mods$First,
  levels = c("FALSE_TRUE", "NA_TRUE", "TRUE_NA"),
  labels = c("Kalydeco", "Kalydeco", "Trikafta")
)
# Combine
vit <- full_join(vit, pfts, by = c("Patient ID", "Date"))
vit <- full_join(vit, lfts, by = c("Patient ID", "Date"))
vit <- left_join(vit, mods %>% select(`Patient ID`, Start, First, `Age at Start`),
  by = "Patient ID"
)
# Get pre vs. post info, time from start
vit$`Pre-/Post-` <- factor(vit$Date >= vit$Start,
  levels = c("FALSE", "TRUE"),
  labels = c("Pre", "Post")
)
vit$`Days from Start` <- as.numeric(difftime(vit$Date, vit$Start, units = "days"))
# Filter out those more than 3 years before start, and within 90 days after start
vit <- vit %>% filter(
  `Days from Start` > -3 * 365,
  `Days from Start` < 0 | `Days from Start` >= 90
)
# Order variables, fill sex
vit <- vit %>%
  select(
    `Patient ID`, Sex, Date, Start, First, `Age at Start`,
    `Pre-/Post-`, `Days from Start`, everything()
  ) %>%
  group_by(`Patient ID`) %>%
  fill(Sex, .direction = "downup")
# Average pre-mod values, get most recent vitamin values and and any other variables within 30 days
pre_ids <- vit %>%
  group_by(`Patient ID`) %>%
  filter(`Pre-/Post-` == "Pre", !is.na(VitaminA_Retinol)) %>%
  mutate(n = n()) %>%
  filter(n >= 2) %>%
  .$`Patient ID` %>%
  unique() # At least two pre measures
pre <- vit %>%
  filter(`Patient ID` %in% pre_ids) %>%
  summarise(
    `First Modulator` = as.character(First[1]), Timepoint = "Pre",
    `Age at Start` = `Age at Start`[1], Sex = Sex[1],
    Start = as.character(Start[1]), `Latest Visit` = NA,
    across(`Days from Start`:GGTP, ~ mean(.x, na.rm = TRUE))
  )
# Get visits within 30 days prior to latest vitamin measure post-CFTR modulator
post_cutoff <- vit %>%
  group_by(`Patient ID`) %>%
  filter(`Pre-/Post-` == "Post", !is.na(VitaminA_Retinol)) %>%
  mutate(latest = max(Date), date_cutoff = latest - lubridate::days(90)) %>%
  select(`Patient ID`, latest, date_cutoff) %>%
  distinct()
vit <- left_join(vit, post_cutoff, by = "Patient ID")
# Summarise visits into one row
post <- vit %>%
  filter(Date >= date_cutoff & Date <= latest) %>%
  arrange(`Patient ID`, Date) %>%
  summarise(
    `First Modulator` = as.character(First[1]), Timepoint = "Post",
    `Age at Start` = `Age at Start`[1], Sex = Sex[1],
    Start = as.character(Start[1]),
    `Latest Visit` = as.character(latest[1]),
    across(
      `Days from Start`:GGTP,
      ~ if (all(is.na(.))) NA else last(na.omit(.))
    )
  ) %>%
  rename()
df <- bind_rows(pre, post) %>%
  mutate_all(~ ifelse(is.nan(.), NA, .))
df$Timepoint <- factor(df$Timepoint, levels = c("Pre", "Post"))
# Pancreatic status and LFTs
df$`Elevated LFTs (2X)` <- factor((!is.na(df$ALT) & df$ALT > 2 * 30) |
  !is.na(df$AST) & df$AST > 2 * 30 |
  !is.na(df$GGTP) & df$GGTP > 2 * 20,
levels = c("TRUE", "FALSE"), labels = c("Yes", "No")
)
df$`Elevated LFTs (2X)`[rowSums(is.na(df[, c("ALT", "AST", "GGTP")])) == 3] <- NA
df$`Elevated LFTs (3X)` <- factor((!is.na(df$ALT) & df$ALT > 3 * 30) |
  !is.na(df$AST) & df$AST > 3 * 30 |
  !is.na(df$GGTP) & df$GGTP > 3 * 20,
levels = c("TRUE", "FALSE"), labels = c("Yes", "No")
)
df$`Elevated LFTs (3X)`[rowSums(is.na(df[, c("ALT", "AST", "GGTP")])) == 3] <- NA
df$`Elevated LFTs (5X)` <- factor((!is.na(df$ALT) & df$ALT > 5 * 30) |
  !is.na(df$AST) & df$AST > 5 * 30 |
  !is.na(df$GGTP) & df$GGTP > 5 * 20,
levels = c("TRUE", "FALSE"), labels = c("Yes", "No")
)
df$`Elevated LFTs (5X)`[rowSums(is.na(df[, c("ALT", "AST", "GGTP")])) == 3] <- NA
# Add genetic info
df <- left_join(df, geno, by = "Patient ID")
# Delete those without paired obs.
df <- df %>%
  group_by(`Patient ID`) %>%
  filter(n() == 2) %>%
  arrange(`Patient ID`, Timepoint)
# Write data so Edith can check
write.csv(df, file = "/Volumes/Documents/Work/Vigers/CF/Edith Zemanick/CF Nutrition/Data_Cleaned/analysis_data.csv", row.names = F, na = "")
write.csv(df[df$`First Modulator` == "Trikafta", ], file = "/Volumes/Documents/Work/Vigers/CF/Edith Zemanick/CF Nutrition/Data_Cleaned/analysis_data_eti_only.csv", row.names = F, na = "")
# Write missing
mrns <- read_excel("/Volumes/Documents/Work/Vigers/CF/CF Info/All Patients with CF or Non-CF_MRNs.xlsx")

miss_post_pft <- df %>%
  filter(Timepoint == "Post", is.na(`FEV1 % pred`)) %>%
  mutate(
    MRN = mrns$MRN[match(`Patient ID`, mrns$PatientID)],
    `Start Plus 90` = parse_date(Start, approx = F) + lubridate::days(90),
    `Latest Minus 30` = parse_date(`Latest Visit`, approx = F) - lubridate::days(30)
  ) %>%
  select(`Patient ID`, MRN, `First Modulator`, Start, `Start Plus 90`, `Latest Visit`, `Latest Minus 30`)

write.csv(miss_post_pft, file = "/Volumes/Documents/Work/Vigers/CF/Edith Zemanick/CF Nutrition/Data_Cleaned/missing_post_pft.csv", row.names = F, na = "")

miss_post_lft <- df %>%
  filter(Timepoint == "Post", is.na(ALT)) %>%
  mutate(
    MRN = mrns$MRN[match(`Patient ID`, mrns$PatientID)],
    `Start Plus 90` = parse_date(Start, approx = F) + lubridate::days(90),
    `Latest Minus 30` = parse_date(`Latest Visit`, approx = F) - lubridate::days(30)
  ) %>%
  select(`Patient ID`, MRN, `First Modulator`, Start, `Start Plus 90`, `Latest Visit`, `Latest Minus 30`)

write.csv(miss_post_lft, file = "/Volumes/Documents/Work/Vigers/CF/Edith Zemanick/CF Nutrition/Data_Cleaned/missing_post_lft.csv", row.names = F, na = "")




miss_pre_pft <- df %>%
  filter(Timepoint == "Pre", is.na(`FEV1 % pred`)) %>%
  mutate(
    MRN = mrns$MRN[match(`Patient ID`, mrns$PatientID)]
  ) %>%
  select(`Patient ID`, MRN, `First Modulator`, Start)

write.csv(miss_pre_pft, file = "/Volumes/Documents/Work/Vigers/CF/Edith Zemanick/CF Nutrition/Data_Cleaned/missing_pre_pft.csv", row.names = F, na = "")

miss_pre_lft <- df %>%
  filter(Timepoint == "Pre", is.na(ALT)) %>%
  mutate(
    MRN = mrns$MRN[match(`Patient ID`, mrns$PatientID)]
  ) %>%
  select(`Patient ID`, MRN, `First Modulator`, Start)

write.csv(miss_pre_lft, file = "/Volumes/Documents/Work/Vigers/CF/Edith Zemanick/CF Nutrition/Data_Cleaned/missing_pre_lft.csv", row.names = F, na = "")
```

# Data Cleaning

-   All vitamin, PFT, and BMI percentile values were converted to numeric, so values such as "LESS THAN 0.4" were marked as missing.

-   We excluded visits more than 3 years prior to effective modulator start and within 90 days after effective modulator start.

-   All values prior to effective modulator start were averaged to calculate the "pre" value. We selected the most recent vitamin values as the "post" value, and included any BMI percentile, FEV1 % predicted, ALT, AST, and GGTP measures within 30 days of that visit.

-   Sex was only included in the PFT datasheet, so those without PFT data were missing this variable.

-   Elevated liver labs were considered at two levels:

    -   ALT, AST, or GGTP 3 times the normal level

    -   ALT, AST, or GGTP 5 times the normal level

-   Normal liver labs were considered:

    -   ALT: 30 U/L

    -   AST: 30 U/L

    -   GGTP: 20 U/L

# Ivacaftor and ETI

## Baseline value grouped by first modulator

```{r results='asis'}
t1 <- tableby(`First Modulator` ~ `Age at Start` + Sex + `ALT` + `AST` + `GGTP` +`Elevated LFTs (2X)`+ `Elevated LFTs (3X)` + `Elevated LFTs (5X)`+`Pancreatic Status`,data = df[df$Timepoint == "Pre", ],numeric.stats = c("Nmiss","medianrange"),numeric.test="kwt")
summary(t1, pfootnote = T)
```

## Pre/post comparison

```{r results='asis'}
p <- paired(Timepoint ~ `VitaminA_Retinol` + `25OH-Vitamin D` + `Vitamin E Alpha` + `FEV1 % pred` + `BMI percentile (CDC)` + `ALT` + `AST` + `GGTP` + `Elevated LFTs (2X)` + `Elevated LFTs (3X)`+`Elevated LFTs (5X)`,data = df, id = `Patient ID`,numeric.stats = c("Nmiss","medianrange"),numeric.test="signed.rank",signed.rank.exact = FALSE)
summary(p, pfootnote = T)
```

## Pre/post comparison by pancreatic status

One participant with unknown pancreatic status was removed in order to calculate p values.

```{r results='asis'}
panc_df = df %>% filter(`Pancreatic Status`!= "Unknown")

p <- paired(Timepoint ~ `VitaminA_Retinol` + `25OH-Vitamin D` + `Vitamin E Alpha` + `FEV1 % pred` + `BMI percentile (CDC)` + `ALT` + `AST` + `Elevated LFTs (3X)` + `Elevated LFTs (5X)`,data = panc_df, id = `Patient ID`,strata = `Pancreatic Status`,numeric.stats = c("Nmiss","medianrange"),numeric.test="signed.rank",signed.rank.exact = FALSE)
summary(p, pfootnote = T)
```

# ETI only

## Pre/post comparison

```{r results='asis'}
p <- paired(Timepoint ~ `VitaminA_Retinol` + `25OH-Vitamin D` + `Vitamin E Alpha` + `FEV1 % pred` + `BMI percentile (CDC)` + `ALT` + `AST` + `GGTP` + `Elevated LFTs (3X)` + `Elevated LFTs (5X)` + `Pancreatic Status`,data = df[df$`First Modulator`=="Trikafta",], id = `Patient ID`,numeric.stats = c("Nmiss","medianrange"),numeric.test="signed.rank",signed.rank.exact = FALSE)
summary(p, pfootnote = T)
```
