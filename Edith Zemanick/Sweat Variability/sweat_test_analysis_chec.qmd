---
title: "CHEC Study Sweat Chloride"
author: "Tim Vigers"
date: "today"
date-format: long
format:
  html:
    toc: true
    toc-depth: 5
    toc-float: true
    code-fold: true
    self-contained: true
    fig-cap-location: top
    fig-width: 9
    fig-height: 7
    page-layout: full
editor: source
execute:
  warning: false
---

```{r setup}
#| include: false
library(Hmisc)
library(tidyverse)
library(readxl)
library(arsenal)
library(ggpubr)
library(lmerTest)
library(performance)
library(gtsummary)
library(gt)
library(patchwork)
library(ggeffects)
home_dir <- switch(Sys.info()["sysname"],
  "Darwin" = "/Users/tim/Library/CloudStorage/OneDrive-TheUniversityofColoradoDenver/Vigers/CF/Edith Zemanick/Sweat Variability",
  "Linux" = "/home/timvigers/OneDrive/Vigers/CF/Edith Zemanick/Sweat Variability"
)
knitr::opts_knit$set(root.dir = home_dir)
```

```{r data cleaning}
# Import CHEC data
chec <- read.csv("./Data_Raw/CHEC sweat sodium and chloride.csv",
  na.strings = c("", "NA")
)
# Only include people with either a pre-modulator or post-modulator sodium
chec <- chec %>% filter(!is.na(swsavg), site != "005 Buffalo, NY CC and Peds")
# Calculate ratios
chec$pre_ratio <- chec$swhsavgpm / chec$swhcavgpm
chec$post_ratio <- chec$swsavg / chec$swcavg
# Factor variable formatting
chec$race_txt <- factor(chec$race_txt,
  levels = c(
    "White", "Black or African American", "American Indian or Alaska Native",
    "Native Hawaiian or Other Pacific Islander", "More than One Race",
    "Unknown or Not Reported"
  )
)
chec$modqual <- factor(chec$modqual,
  levels = c(
    "Ivacaftor", "Lumacaftor / Ivacaftor",
    "Tezacaftor / Ivacaftor", "Elexacaftor / Tezacaftor / Ivacaftor"
  ),
  labels = c("IVA", "LUM/IVA", "TEZ/IVA", "ELX/TEZ/IVA")
)
chec$agecat_txt <- factor(chec$agecat_txt,
  levels = c(
    "2-5 years", "6-11 years", "12-17 years", "18-25 years", ">=26 years"
  )
)
# Long dataset for easier plotting and paired analysis
chec_long <- chec %>%
  rename(
    pre_cl = swhcavgpm, pre_na = swhsavgpm, post_cl = swcavg, post_na = swsavg
  ) %>%
  pivot_longer(c(pre_cl, pre_na, post_cl, post_na, pre_ratio, post_ratio),
    names_to = c("pre_post", ".value"),
    names_pattern = "(.*)_(.*)",
    values_to = "count"
  )
chec_long$pre_post <- factor(chec_long$pre_post,
  levels = c("pre", "post"),
  labels = c("Pre-Modulator", "Post-Modulator")
)
# Set table options
mycontrols <-
  tableby.control(
    numeric.stats = c("N", "Nmiss", "meansd", "medianrange"),
    cat.stats = c("N", "Nmiss", "countpct"), digits = 1
  )
# Labels
label(chec_long$cl) <- "Sweat Cl"
label(chec_long$na) <- "Sweat Na"
label(chec_long$ratio) <- "Sweat Na:Cl"
```

# Tables

## Table 1: Participant demographics by CFTR modulator

```{r results='asis'}
t1 <- tableby(
  modqual ~ sex + kwt(age) + agecat_txt +
    race_txt + genotype_group + swcavg + swhcavgpm + swsavg + swhsavgpm +
    pre_ratio + post_ratio,
  data = chec, cat.test = "fe", simulate.p.value = TRUE, control = mycontrols
)
summary(t1, pfootnote = T)
```

- I think that we currently don't have ethnicity data.

## Table 2: Change in sweat electrolytes

```{r results='asis'}
pt1 <- paired(
  pre_post ~ cl + na +
    signed.rank(ratio, "N", "Nmiss2", "medianq1q3", "range"),
  data = chec_long, id = subject,
  control = paired.control(signed.rank.exact = F)
)
summary(pt1, pfootnote = T)
```

## Table 3: Change in sweat electrolytes by modulator

```{r results='asis'}
pt2 <- paired(
  pre_post ~
    signed.rank(cl, "N", "Nmiss2", "medianq1q3", "range") +
    signed.rank(na, "N", "Nmiss2", "medianq1q3", "range") +
    signed.rank(ratio, "N", "Nmiss2", "medianq1q3", "range"),
  data = chec_long, id = subject, strata = modqual,
  control = paired.control(signed.rank.exact = F)
)
summary(pt2, pfootnote = T)
```

# Histograms and density plots

## Sweat chloride (overall)

### Histogram

```{r}
ggplot(chec_long, aes(x = cl, fill = pre_post)) +
  geom_histogram(alpha = 0.5) +
  theme_bw() +
  scale_fill_manual(values = c("#EFB036", "#3B6790"))
```

### Density

```{r}
ggplot(chec_long, aes(x = cl, fill = pre_post)) +
  geom_density(alpha = 0.5) +
  theme_bw() +
  scale_fill_manual(values = c("#EFB036", "#3B6790"))
```

## Sweat sodium (overall)

### Histogram

```{r}
ggplot(chec_long, aes(x = na, fill = pre_post)) +
  geom_histogram(alpha = 0.5) +
  theme_bw() +
  scale_fill_manual(values = c("#EFB036", "#3B6790"))
```

### Density

```{r}
ggplot(chec_long, aes(x = na, fill = pre_post)) +
  geom_density(alpha = 0.5) +
  theme_bw() +
  scale_fill_manual(values = c("#EFB036", "#3B6790"))
```

## Sweat sodium:chloride ratio (overall)

### Histogram

```{r}
ggplot(chec_long, aes(x = ratio, fill = pre_post)) +
  geom_histogram(alpha = 0.5) +
  theme_bw() +
  scale_fill_manual(values = c("#EFB036", "#3B6790"))
```

### Density

```{r}
ggplot(chec_long, aes(x = ratio, fill = pre_post)) +
  geom_density(alpha = 0.5) +
  theme_bw() +
  scale_fill_manual(values = c("#EFB036", "#3B6790"))
```

## Sweat chloride by modulator

### Histogram

```{r}
ggplot(chec_long, aes(x = cl, fill = pre_post)) +
  geom_histogram(alpha = 0.5) +
  theme_bw() +
  scale_fill_manual(values = c("#EFB036", "#3B6790")) +
  facet_wrap(~modqual)
```

### Density

```{r}
ggplot(chec_long, aes(x = cl, fill = pre_post)) +
  geom_density(alpha = 0.5) +
  theme_bw() +
  scale_fill_manual(values = c("#EFB036", "#3B6790")) +
  facet_wrap(~modqual)
```

## Sweat sodium by modulator

### Histogram

```{r}
ggplot(chec_long, aes(x = na, fill = pre_post)) +
  geom_histogram(alpha = 0.5) +
  theme_bw() +
  scale_fill_manual(values = c("#EFB036", "#3B6790")) +
  facet_wrap(~modqual)
```

### Density

```{r}
ggplot(chec_long, aes(x = na, fill = pre_post)) +
  geom_density(alpha = 0.5) +
  theme_bw() +
  scale_fill_manual(values = c("#EFB036", "#3B6790")) +
  facet_wrap(~modqual)
```

## Sweat sodium:chloride ratio by modulator

### Histogram

```{r}
ggplot(chec_long, aes(x = ratio, fill = pre_post)) +
  geom_histogram(alpha = 0.5) +
  theme_bw() +
  scale_fill_manual(values = c("#EFB036", "#3B6790")) +
  facet_wrap(~modqual)
```

### Density

```{r}
ggplot(chec_long, aes(x = ratio, fill = pre_post)) +
  geom_density(alpha = 0.5) +
  theme_bw() +
  scale_fill_manual(values = c("#EFB036", "#3B6790")) +
  facet_wrap(~modqual)
```

# Boxplots

```{r}
ggplot(chec_long, aes(x = pre_post, y = ratio)) +
  geom_boxplot() +
  geom_signif(
    comparison = list(c("Pre-Modulator", "Post-Modulator")),
    test = "wilcox.test", test.args = list(paired = TRUE, exact = FALSE),
    y_position = 3.5, map_signif_level = function(p) 
      format.pval(p, digits = 3, eps = 0.001)
  ) +
  theme_bw() +
  theme(legend.title = element_blank(), axis.title.x = element_blank()) +
  ylab("Na:Cl Ratio") +
  facet_wrap(~modqual)
```

# Scatterplots and models

To evaluate whether the relationship between pre-modulator sweat chloride and pre-modulator sodium:chloride ratio is logarithmic, we compared three models:

1. A simple linear model with no transformations.
2. A linear model with log-transformed sweat chloride as the outcome.
3. A quadratic model.

The model residuals do *not* appear to be improved by log transforming the outcome. Also, the quadratic model is better than the linear model by BIC, but this does not remain the case when the influential point (CFF ID 1650133) is removed. 

```{r}
pre_model_df <- chec %>%
  select(cffid_first, swhcavgpm, pre_ratio) %>%
  drop_na() %>%
  unique()

m1 <- lm(swhcavgpm ~ pre_ratio, data = pre_model_df)
log_m <- lm(log(swhcavgpm) ~ pre_ratio, data = pre_model_df)
m2 <- lm(swhcavgpm ~ pre_ratio + I(pre_ratio^2), data = pre_model_df)
```

## Linear model assumptions check

```{r}
check_model(m1)
```

## Log model assumptions check

```{r}
check_model(log_m)
```

## Quadratic model assumptions check

```{r}
check_model(m2)
```

## Model predicted values

```{r}
ggplot(pre_model_df, aes(y = swhcavgpm, x = pre_ratio)) +
  geom_point() +
  geom_smooth(method = "lm", se = F, aes(color = "Linear")) +
  geom_smooth(
    method = "lm", formula = y ~ x + I(x^2), se = F,
    aes(color = "Quadratic")
  ) +
  geom_smooth(
    method = "glm", formula = y ~ x, se = F, aes(color = "Log Linear"),
    method.args = list(family = gaussian(link = "log"))
  ) +
  theme_bw() +
  theme(legend.title = element_blank())
```

# Model-based approaches

```{r}
model_df <- chec_long %>%
  select(subject, cl, na, ratio, pre_post) %>%
  drop_na()
model_df$cl = model_df$cl / 10
model_df$na = model_df$na / 10
# From Amalia
m1 <- glm(pre_post ~ cl, data = model_df, family = "binomial")
m2 <- glm(pre_post ~ cl + na, data = model_df, family = "binomial")
m3 <- glm(pre_post ~ cl * na, data = model_df, family = "binomial")
m4 <- glm(pre_post ~ scale(ratio), data = model_df, family = "binomial")
gt(compare_performance(m1, m2, m3, m4, metrics = "common")) %>%
  fmt_number(decimals = 3)
model_df$m1_pred <- factor(predict(m1, type = "response") > 0.5,
  levels = c(F, T), labels = c("pred_pre", "pred_post")
)
model_df$m2_pred <- factor(predict(m2, type = "response") > 0.5,
  levels = c(F, T), labels = c("pred_pre", "pred_post")
)
model_df$m3_pred <- factor(predict(m3, type = "response") > 0.5,
  levels = c(F, T), labels = c("pred_pre", "pred_post")
)
model_df$m4_pred <- factor(predict(m4, type = "response") > 0.5,
  levels = c(F, T), labels = c("pred_pre", "pred_post")
)
# Tim's model
tm <- lmer(cl ~ pre_post * na + (1 | subject), data = model_df)
```

I tried fitting Amalia's models with a random effect for participant, but the random effect variance was 0 and the model estimates are the exact same as a regular logistic model. We think that this is because the correlation in responses is accounted for by the design, so the mixed effects are not necessary. This is worth thinking about a little bit more, but for now we'll go ahead with the simplified logistic models.

Units in the following models are for a 10 unit change in sweat Na or Cl.

## Model 1

```{r}
m1 %>% gtsummary::tbl_regression(exponentiate = T)
table(model_df$pre_post, model_df$m1_pred)
prop.table(table(model_df$pre_post, model_df$m1_pred))
```

## Model 2

```{r}
m2 %>% gtsummary::tbl_regression(exponentiate = T)
table(model_df$pre_post, model_df$m2_pred)
prop.table(table(model_df$pre_post, model_df$m2_pred))
```

## Model 3

```{r}
m3 %>% gtsummary::tbl_regression(exponentiate = T)
table(model_df$pre_post, model_df$m3_pred)
prop.table(table(model_df$pre_post, model_df$m3_pred))
```

## Model 4

```{r}
m4 %>% gtsummary::tbl_regression(exponentiate = T)
```

The model using the ratio alone does not really work due to the fitted probabilities issue.

## Tim's model

```{r}
tm %>% gtsummary::tbl_regression()
plot(predict_response(tm, terms = c("na", "pre_post")))
```

# NACFC

## Normalized ratio by modulator status

```{r results='asis'}
# Check if ratio >= 1.2
chec$post_ratio_1.2 <- chec$post_ratio >= 1.2
label(chec$post_ratio_1.2) <- "Post-Modulator Sweat Na:Cl >= 1.2"
chec$post_cl <- cut(chec$swcavg, c(-Inf, 30, 60, Inf),
  right = F,
  labels = c("< 30", ">= 30 and < 60", ">= 60")
)
label(chec$post_cl) <- "Post-Modulator Sweat Cl Group"
summary(tableby(modqual ~ post_cl + post_ratio + post_ratio_1.2,
  data = chec,
  control = list(
    numeric.stats = c("N", "Nmiss2", "meanCI", "range"),
    cat.stats = c("N", "Nmiss2", "countpct")
  )
), pfootnote = T)
```

## Normalized ratio by modulator status and age

We fit a logistic regression model with post-modulator ratio >= 1.2 as the binary outcome. The model with an interaction term was significantly better than the mode with only main effects (p=0.003).

```{r results='asis'}
m1 <- glm(post_ratio_1.2 ~ modqual + age, data = chec, family = "binomial")
m1 %>% tbl_regression(., intercept = T, exponentiate = T)
```

The main effects suggest that people on LUM/IVA or TEZ/IVA were less likely to have a post-modulator ratio >= 1.2 compared to those on ETI, but there was no difference for those on Ivacaftor, after adjusting for age. Also, there was no effect of age on the odds of having a post-modulator ratio >= 1.2.

## Normalized ratio by post-ETI sweat chloride

```{r results='asis'}
summary(tableby(post_cl ~ post_ratio + post_ratio_1.2,
  data = chec[chec$modqual == "ELX/TEZ/IVA", ],
  control = list(
    numeric.stats = c("N", "Nmiss2", "meanCI", "range"),
    cat.stats = c("N", "Nmiss2", "countpct")
  )
), pfootnote = T)
```

## Scatterplots pre-modulator

```{r}
sp_pre <- chec_long %>%
  filter(pre_post == "Pre-Modulator") %>%
  ggplot(., aes(x = ratio, y = cl)) +
  geom_point() +
  geom_hline(yintercept = 60, color = "red") +
  geom_vline(xintercept = 1.2, color = "red") +
  ylab("Cl") +
  xlab("Na:Cl") +
  theme_bw() +
  facet_wrap(~modqual) +
  ggtitle("Pre-Modulator")
sp_pre
```

## Scatterplots post-modulator

```{r}
sp_post <- chec_long %>%
  filter(pre_post == "Post-Modulator") %>%
  ggplot(., aes(x = ratio, y = cl)) +
  geom_point() +
  geom_hline(yintercept = 60, color = "red") +
  geom_vline(xintercept = 1.2, color = "red") +
  ylab("Cl") +
  xlab("Na:Cl") +
  theme_bw() +
  facet_wrap(~modqual) +
  ggtitle("Post-Modulator")
sp_post
```

## Boxplot

```{r}
plot_df <- chec_long
plot_df$modqual[plot_df$pre_post == "pre"] <- "Pre-Modulator"
plot_df$modqual <- factor(plot_df$modqual,
  levels = c("Pre-Modulator", "IVA", "LUM/IVA", "TEZ/IVA", "ELX/TEZ/IVA")
)
boxp <- ggplot(plot_df, aes(x = modqual, y = ratio)) +
  geom_boxplot() +
  ylab("Na:Cl") +
  theme_bw() +
  theme(axis.title.x = element_blank())
boxp
```

## Combined figures

```{r}
boxp / (sp_pre + sp_post)
sp_pre + sp_post
```

## Change plot

```{r}
ggplot(chec_long, aes(x = pre_post, y = ratio, group = subject)) +
  geom_point(alpha = 0.2) +
  geom_line(alpha = 0.2) +
  ylab("Na:Cl") +
  theme_classic() +
  theme(axis.title.x = element_blank())
```
