---
title: "Home Nighttime Cough Monitoring"
author: "Tim Vigers"
date: "today"
date-format: long
format:
  html:
    toc: true
    toc-depth: 5
    toc-float: true
    code-fold: true
    self-contained: true
    fig-cap-location: top
    page-layout: full
    theme:
      light: flatly
      dark: darkly
editor: source
---

```{r setup}
#| include: false
library(Hmisc)
library(redcapAPI)
library(rspiro)
library(childsds)
library(arsenal)
library(lmerTest)
library(performance)
library(GLMMadaptive)
library(tidyverse)
library(ggstats)
library(corrplot)
library(patchwork)
library(gt)
knitr::opts_knit$set(root.dir = "/home/timvigers/OneDrive/Vigers/CF/Lilah Melzer/Lilah Cough Monitor")
```

```{r data import}
#| include: false
# Import from REDCap
unlockREDCap(c(rcon = "Cough Monitor 23-0382"),
  keyring = "API_KEYs",
  envir = 1,
  url = "https://redcap.ucdenver.edu/api/"
)
df <- exportRecordsTyped(rcon)
```

```{r data cleaning}
#| message: false
#| warning: false
# Import use data
start_end <- read.csv("./Data_Clean/Start and end dates.csv",
  na.strings = ""
)
start_end$Start <- mdy(start_end$Start)
start_end$End <- mdy(start_end$End)
vacations <- read.csv("./Data_Clean/Vacation days.csv",
  na.strings = ""
)
vacations$Vacation.Start <- mdy(vacations$Vacation.Start)
vacations$Vacation.End <- mdy(vacations$Vacation.End)
# Last date should be either the end date in REDCap or the last day with data
pull_date <- mdy("11/05/24")
start_end$End[is.na(start_end$End)] <- pull_date
start_end$End[start_end$End > pull_date] <- pull_date
# Make a grid of everyone's possible dates
dates <- start_end %>%
  rowwise() %>%
  transmute(sid,
    Date = list(seq(Start, End, by = "day"))
  ) %>%
  unnest(Date)
# Import counts
agg_counts <- read.csv(
  "./Data_Raw/Cough_w_TotalCounts_1105_NMDcorrected - Cough_agg_w_count_122324.csv",
  na.strings = c("", "NMD"), header = F
)
# Format aggregated count data
agg_counts <- data.frame(t(agg_counts))
colnames(agg_counts) <- agg_counts[1, ]
agg_counts$`Date/Device` <- NULL
agg_counts$`#nights-monitoring` <- NULL
agg_counts <- agg_counts[-1, ]
colnames(agg_counts)[1] <- "sid"
agg_counts$sid <- sub("FN", "", agg_counts$sid)
# Wide to long, fix dates
agg_counts <- agg_counts %>%
  pivot_longer(
    cols = -one_of("sid"), names_to = "Date", values_to = "Coughs"
  ) %>%
  mutate(
    Date = mdy(Date),
    Coughs = as.numeric(Coughs)
  )
# Merge with all possible dates
agg_counts$sid <- as.numeric(agg_counts$sid)
agg_counts <- left_join(dates, agg_counts)
# Vacations
agg_counts$Vacation <- apply(agg_counts, 1, function(r) {
  id <- as.numeric(r["sid"])
  d <- r["Date"]
  any(d >= vacations$Vacation.Start[vacations$sid == id] &
    d <= vacations$Vacation.End[vacations$sid == id])
})
agg_counts <- agg_counts %>%
  filter(!Vacation | is.na(Vacation)) %>%
  arrange(sid, Date)
agg_counts$Vacation <- NULL
# Sick
sick <- df %>%
  select(sid, pulm_ex_v2, pulm_ex_spec_v2) %>%
  filter(pulm_ex_v2 == "Yes")
sick$pulm_ex_abx_start <- mdy(c("4/17/24", "5/8/24"))
sick$pulm_ex_start <- sick$pulm_ex_abx_start - 7
sick$pulm_ex_end <- sick$pulm_ex_abx_start + 28
# Make a grid of everyone's sick days and merge
sick <- sick %>%
  select(sid, pulm_ex_start, pulm_ex_end) %>%
  rowwise() %>%
  transmute(sid,
    Date = list(seq(pulm_ex_start, pulm_ex_end, by = "day"))
  ) %>%
  unnest(Date) %>%
  mutate(Sick = T)
sick$sid <- as.numeric(sick$sid)
agg_counts <- left_join(agg_counts, sick)
# Format sick column
agg_counts$Sick[is.na(agg_counts$Sick)] <- F
agg_counts$Sick <- factor(agg_counts$Sick,
  levels = c(F, T),
  labels = c("No", "Yes")
)
# Count number of nights
agg_counts <- agg_counts %>%
  group_by(sid) %>%
  mutate(Night = row_number()) %>%
  ungroup()
# Demographics data
df$Diagnosis <- factor(df$redcap_event_name,
  levels = c(
    "Visits (Arm 1: CF)", "Interim (Arm 1: CF)", "Visits (Arm 2: Control)",
    "Interim (Arm 2: Control)"
  ),
  labels = c("CF", "CF", "Non-CF", "Non-CF")
)
df$Diagnosis <- relevel(df$Diagnosis, ref = "Non-CF")
demo <- df %>%
  group_by(sid) %>%
  filter(row_number() == 1) %>%
  select(
    sid, Diagnosis, age_at_consent, height, weight, pre_fev, post_fev,
    nih_sex:nih_ethnicity, mutation1, mutation2,
    cftr_mod, cftr_mod_type, mucolytic:antih
  )
# Calculate FEV1% - rspiro not accepting NA values for gender, which is really
# annoying
fev1 <- demo %>%
  select(sid, age_at_consent, height, weight, nih_sex, pre_fev, post_fev) %>%
  filter(nih_sex %in% c("Male", "Female"))
fev1$pre_fev_pp <- pctpred_GLIgl(fev1$age_at_consent, fev1$height / 100,
  factor(fev1$nih_sex, levels = c("Male", "Female")),
  FEV1 = fev1$pre_fev
)
fev1$post_fev_pp <- pctpred_GLIgl(fev1$age_at_consent, fev1$height / 100,
  factor(fev1$nih_sex, levels = c("Male", "Female")),
  FEV1 = fev1$post_fev
)
fev1$height_perc <- sds(as.numeric(fev1$height),
  age = fev1$age_at_consent, sex = fev1$nih_sex,
  male = "Male", female = "Female", item = "height2_20", ref = cdc.ref,
  type = "perc"
) * 100
fev1$weight_perc <- sds(as.numeric(fev1$weight),
  age = fev1$age_at_consent, sex = fev1$nih_sex,
  male = "Male", female = "Female", item = "weight2_20", ref = cdc.ref,
  type = "perc"
) * 100
demo <-
  left_join(
    demo,
    fev1[, c("sid", "height_perc", "weight_perc", "pre_fev_pp", "post_fev_pp")]
  )
label(demo$pre_fev_pp) <- "Pre-bronchodilator FEV1 % Predicted"
label(demo$pre_fev_pp) <- "Post-bronchodilator FEV1 % Predicted"
label(demo$height_perc) <- "Height %ile"
label(demo$weight_perc) <- "Weight %ile"
# CF genotype
demo$Genotype <-
  factor(rowSums(demo[, c("mutation1", "mutation2")] == "F508del"),
    levels = c(2, 1, 0),
    labels = c("F508del homozygous", "F508del heterozygous", "No F508del")
  )
demo[, grep("mutation", colnames(demo))] <- NULL
# Add group to counts
agg_counts$Diagnosis <-
  demo$Diagnosis[match(agg_counts$sid, as.numeric(as.character(demo$sid)))]
# Import and merge sleep times from Lilah
sleep <- read.csv("./Data_Clean/Total sleep times.csv", na.strings = "")
sleep <- sleep %>%
  select(
    Participant.First.Name..or.any.uniq.identifier.,
    Total.sleep.time..hours.
  ) %>%
  rename(
    sid = Participant.First.Name..or.any.uniq.identifier.,
    total_sleep = Total.sleep.time..hours.
  )
sleep$sid <- as.character(as.numeric(sub("FN", "", sleep$sid)))
label(sleep$total_sleep) <- "Total sleep time (hours)"
demo <- left_join(demo, sleep)
# Order columns
demo <- demo %>%
  select(sid, height_perc, weight_perc, pre_fev_pp, total_sleep, everything()) %>%
  select(-height, -weight, -pre_fev)
# Set table options for the document
mycontrols <-
  tableby.control(
    numeric.stats = c("N", "Nmiss", "medianq1q3", "range"),
    cat.stats = c("N", "Nmiss", "countpct"),
    numeric.test = "kwt"
  )
# Save
write.csv(agg_counts,
  file = "./Data_Clean/cleaned_aggregated_counts.csv",
  na = "", row.names = F
)
```

# Demographics

```{r results='asis'}
#| label: tbl-mean-demo
#| tbl-cap: Participant characteristics
f <- as.formula(paste0("Diagnosis ~", paste0(colnames(demo), collapse = "+")))
f <- update(f, . ~ . - Diagnosis - sid)
t1 <- tableby(f, data = demo, control = mycontrols)
summary(t1, pfootnote = T)
```

# Summary data

```{r results='asis'}
per_person <- agg_counts %>%
  group_by(sid, Diagnosis) %>%
  summarise(
    `Nights` = n(),
    `Nights With Data` = sum(!is.na(Coughs)),
    `Prop. Nights With Data` = sum(!is.na(Coughs)) / n(),
    `Median Coughs per Night` = median(Coughs, na.rm = T),
    .groups = "drop"
  )
# Exclude the people with 0 nights of data
per_person <- per_person %>% filter(`Nights With Data` != 0)
t2 <- tableby(
  Diagnosis ~ `Nights` + `Nights With Data` + `Prop. Nights With Data` +
    `Median Coughs per Night`,
  data = per_person, control = mycontrols
)
summary(t2, pfootnote = T)
```

# Distribution of coughs

```{r}
#| label: fig-coughs-dist
#| fig-cap: Histogram of Coughs Across All Nights
#| warning: false
hist <- ggplot(agg_counts, aes(x = Coughs)) +
  geom_histogram() +
  theme_bw() +
  theme(axis.title.y = element_blank())
hist
ggsave("/home/timvigers/OneDrive/Vigers/CF/Lilah Melzer/Lilah Cough Monitor/Dissemination/Figures/histogram.png",
  plot = hist, width = 9, height = 6, units = "in"
)
```

The distribution of coughs per night is extremely skewed, so coughs per night, etc. are reported as medians rather than means.

# Basic statistics excluding 0s

## Aggregated by person

The comparisons below exclude any nights with missing data OR 0 coughs, as well as periods of sickness. This table could potentially be a little bit confusing because the numbers presented are the median of multiple medians, but the data are still so skewed without 0s that this seemed the best way to aggregate the data.

```{r results='asis'}
#| warning: false
no_0 <- agg_counts %>%
  filter(Sick == "No", !is.na(Coughs)) %>%
  group_by(sid, Diagnosis) %>%
  mutate(`Prop. Non-0 Coughs` = mean(Coughs > 0, na.rm = T)) %>%
  filter(Coughs > 0) %>%
  summarise(
    `Prop. Non-0 Coughs` = `Prop. Non-0 Coughs`[1],
    `Median Coughs` = median(Coughs),
    `Cough IQR` = IQR(Coughs),
    .groups = "drop"
  )
no_0 <- left_join(
  no_0,
  fev1 %>%
    mutate(sid = as.numeric(sid)) %>%
    select(sid, pre_fev_pp, post_fev_pp),
  by = join_by(sid)
)
no_0_t <- tableby(
  Diagnosis ~
    kwt(`Prop. Non-0 Coughs`, "medianq1q3", "range") +
    kwt(`Median Coughs`, "medianq1q3", "range"),
  data = no_0
)
summary(no_0_t, pfootnote = T)
M <- cor.test(no_0$`Median Coughs`, no_0$pre_fev_pp, method = "spearman")
corrplot(cor(no_0 %>% select(`Median Coughs`, pre_fev_pp),
  method = "spearman", use = "pairwise.complete.obs"
))
ggplot(no_0, aes(x = `Median Coughs`, y = pre_fev_pp)) +
  geom_point()
```

Spearman correlation between median coughs and pre-bronchodilator FEV1 was `r round(as.numeric(M$estimate),3)` (p = `r format.pval(M$p.value,eps = 0.001,digits = 3)`).

## Not aggregated 

```{r results='asis'}
#| warning: false
no_0 <- agg_counts %>% filter(Sick == "No", !is.na(Coughs), Coughs > 0)
no_0 <- left_join(
  no_0,
  fev1 %>%
    mutate(sid = as.numeric(sid)) %>%
    select(sid, pre_fev_pp, post_fev_pp),
  by = join_by(sid)
)
no_0_t <- tableby(Diagnosis ~ kwt(Coughs, "medianq1q3", "range"), data = no_0)
summary(no_0_t, pfootnote = T)
```

Spearman correlation between median coughs and pre-bronchodilator FEV1 was `r round(as.numeric(M$estimate),3)` (p = `r format.pval(M$p.value,eps = 0.001,digits = 3)`).

# Coughs over time (aggregated)

```{r}
#| label: fig-coughs-by-night
#| fig-cap: Coughs by nights from start
#| warning: false
ggplot(agg_counts[!is.na(agg_counts$Coughs), ], aes(
  x = Night, y = Coughs, group = factor(sid), color = Diagnosis
)) +
  geom_point(alpha = 0.1) +
  geom_line(alpha = 0.1) +
  geom_smooth(aes(group = Diagnosis)) +
  theme_bw()
```

# Zero-inflated models

We compared several models using BIC. First, we compared a zero-inflated Poisson (ZIP) model with no fixed effects in the zero part of the model to one with time and diagnosis included as fixed effects in the zero part (both parts of the model included a random intercept for participant). The model with the same fixed effects in both parts was better (10088.29 vs. 10071.32).

Next, we compared this model to the same model structure but with a negative binomial distribution (ZINB) rather than Poisson to account for overdispersion in the non-zero part of the model. The ZINB was significantly better than the ZIP model (10071.32 vs. 6810.49).

Finally, we compared the ZINB model with random intercept in both parts of the model to one with an additional random slope in the zero part, one with random slope in the count part, and one with random slope in both parts. The ZINB model with random slope in the non-zero part of the model but only a random intercept in the zero part was better than the simple ZINB model (6810.49 vs. 6753.76). Interestingly, it was also better than the model with a random slope in both parts (6732.82 vs. 6801.86).

```{r}
# Change reference group for easier interpretation
# agg_counts$Diagnosis <- relevel(agg_counts$Diagnosis, ref = "CF")
# Model selection
zip1 <- mixed_model(Coughs ~ Night + Diagnosis,
  data = agg_counts,
  random = ~ 1 | sid, zi_random = ~ 1 | sid,
  family = zi.poisson(), zi_fixed = ~1
)
zip2 <- update(zip1, zi_fixed = ~ Night + Diagnosis)

zinb1 <- update(zip2, family = zi.negative.binomial())

zinb2 <- update(zinb1, random = ~ Night | sid)

zinb3 <- update(zinb1, zi_random = ~ Night | sid)

zinb <- zinb2

s <- summary(zinb)

s$coef_table_zi %>%
  data.frame() %>%
  rownames_to_column() %>%
  gt(caption = "Zero-part coefficients") %>%
  fmt_number(decimals = 3)

s$coef_table %>%
  data.frame() %>%
  rownames_to_column() %>%
  gt(caption = "Count coefficients") %>%
  fmt_number(decimals = 3)
```

For now, the results above are still on the log scale, so a negative value in the estimate column indicates a lower odds ratio or incidence rate ratio. The zero-part coefficients indicate that the odds of having a night with 0 coughs were significantly lower in the CF group (log(OR) = -1.277, OR = 0.279, p = 0.02). In other words, people with CF were more likely to cough than those without CF. However, the count coefficients table indicates that given a night with more than 0 coughs, people with CF coughed at a higher rate than those without CF, but this difference was not statistically significant (log(OR) = 0.591, OR = 1.805, p = 0.082).

## By sick status

To examine the effect of sickness on cough rate, we kept the same random effect structure as above, but added a fixed effect for sick status in both parts of the model.

```{r}
zinb_sick <- update(zinb,
  fixed = Coughs ~ Night + Diagnosis + Sick,
  zi_fixed = ~ Night + Diagnosis + Sick
)

s <- summary(zinb_sick)

s$coef_table_zi %>%
  data.frame() %>%
  rownames_to_column() %>%
  gt(caption = "Zero-part coefficients") %>%
  fmt_number(decimals = 3)

s$coef_table %>%
  data.frame() %>%
  rownames_to_column() %>%
  gt(caption = "Count coefficients") %>%
  fmt_number(decimals = 3)
```

The interpretation of these results is generally the same as above. The zero-part coefficients indicate that people with CF are still more likely to cough than people without CF (log(OR) = -1.301, OR = 0.272, p = 0.018), even after adjusting for sickness. Sickness increased the odds of coughing, but the difference was not statistically significant (log(OR) = 0.693, OR = 1.999, p = 0.346). However, given a night with coughs, sickness increased the rate of cough significantly (log(OR) = 1.244, OR = 3.468, p = 0.011).

# CFQ-R

```{r}
#| message: false
# See SAS scoring instructions (from Quitter's CFQ-R website).docx for
# instructions
df <- df %>%
  group_by(sid) %>%
  fill(c(date_v1_cf, date_v1_hc)) %>%
  ungroup()
# Caregivers of children ages 6-13
# Rename columns so we can use the code from the CFF
cfqr_parent_6_13_names <- list(
  "cfq_r_p_1" = "phys1", "cfq_r_p_2" = "phys2", "cfq_r_p_3" = "phys3",
  "cfq_r_p_4" = "phys4", "cfq_r_p_5" = "phys5", "cfq_r_p_6" = "emot6",
  "cfq_r_p_7" = "emot7", "cfq_r_p_8" = "vital8", "cfq_r_p_9" = "vital9",
  "cfq_r_p_10" = "vital10", "cfq_r_p_11" = "vital11", "cfq_r_p_12" = "vital12",
  "cfq_r_p_13" = "school13", "cfq_r_p_14" = "phys14", "cfq_r_p_15" = "phys15",
  "cfq_r_p_16" = "phys16", "cfq_r_p_17" = "eat17", "cfq_r_p_18" = "treat18",
  "cfq_r_p_19" = "body19", "cfq_r_p_20" = "body20", "cfq_r_p_21" = "body21",
  "cfq_r_p_22" = "health22", "cfq_r_p_23" = "emot23", "cfq_r_p_24" = "health24",
  "cfq_r_p_25" = "emot25", "cfq_r_p_26" = "emot26", "cfq_r_p_27" = "school27",
  "cfq_r_p_28" = "school28", "cfq_r_p_29" = "school29",
  "cfq_r_p_30" = "treat30", "cfq_r_p_31" = "treat31", "cfq_r_p_32" = "health32",
  "cfq_r_p_33" = "weight33", "cfq_r_p_34" = "resp34", "cfq_r_p_35" = "resp35",
  "cfq_r_p_36" = "resp36", "cfq_r_p_37" = "resp37", "cfq_r_p_38" = "resp38",
  "cfq_r_p_39" = "resp39", "cfq_r_p_40" = "resp40", "cfq_r_p_41" = "digest41",
  "cfq_r_p_42" = "digest42", "cfq_r_p_43" = "digest43", "cfq_r_p_44" = "eat44"
)
cfqr_parent_6_13_names <-
  setNames(names(cfqr_parent_6_13_names), cfqr_parent_6_13_names)
# Some items need to be reverse scored
cfqr_parent_6_13_reverse <- c(
  "emot6", "vital10", "vital12", "phys15", "treat31", "health22", "health24",
  "health32", "school28", "resp37"
)
# Do all the calculations!
cfqr_parent_6_13 <- df %>%
  select(
    sid, date_v1_cf, date_v1_hc,
    cfqr_caregivers_613_timestamp, cfq_r_p_1:cfq_r_p_44
  ) %>%
  mutate(
    Date = as.Date(cfqr_caregivers_613_timestamp),
    across(cfq_r_p_1:cfq_r_p_44, ~ as.numeric(.x))
  ) %>%
  rename(all_of(unlist(cfqr_parent_6_13_names))) %>%
  mutate(across(all_of(cfqr_parent_6_13_reverse), ~ 5 - .x)) %>%
  rowwise() %>%
  mutate(
    physical =
      ifelse(
        sum(is.na(c(
          phys1, phys2, phys3, phys4, phys5, phys14, phys15, phys16
        ))) <= 4,
        (mean(c(phys1, phys2, phys3, phys4, phys5, phys14, phys15, phys16)) - 1)
        / 3 * 100, NA
      ),
    emotion =
      ifelse(
        sum(is.na(c(emot6, emot7, emot23, emot25, emot26))) <= 2,
        (mean(c(emot6, emot7, emot23, emot25, emot26)) - 1)
        / 3 * 100, NA
      ),
    vitality =
      ifelse(
        sum(is.na(c(vital8, vital9, vital10, vital11, vital12))) <= 2,
        (mean(c(vital8, vital9, vital10, vital11, vital12)) - 1)
        / 3 * 100, NA
      ),
    school =
      ifelse(
        sum(is.na(c(school13, school27, school28, school29))) <= 2,
        (mean(c(school13, school27, school28, school29)) - 1)
        / 3 * 100, NA
      ),
    eat =
      ifelse(
        sum(is.na(c(eat17, eat44))) == 0,
        (mean(c(eat17, eat44)) - 1)
        / 3 * 100, NA
      ),
    body =
      ifelse(
        sum(is.na(c(body19, body20, body21))) <= 1,
        (mean(c(body19, body20, body21)) - 1)
        / 3 * 100, NA
      ),
    treat =
      ifelse(
        sum(is.na(c(treat18, treat30, treat31))) <= 1,
        (mean(c(treat18, treat30, treat31)) - 1)
        / 3 * 100, NA
      ),
    health =
      ifelse(
        sum(is.na(c(health22, health24, health32))) <= 1,
        (mean(c(health22, health24, health32)) - 1)
        / 3 * 100, NA
      ),
    respirat =
      ifelse(
        sum(is.na(c(resp34, resp35, resp36, resp38, resp39, resp40))) <= 3,
        (mean(c(resp34, resp35, resp36, resp38, resp39, resp40)) - 1)
        / 3 * 100, NA
      ),
    digest =
      ifelse(
        sum(is.na(c(digest41, digest42, digest43))) <= 1,
        (mean(c(digest41, digest42, digest43)) - 1)
        / 3 * 100, NA
      ),
    weight =
      ifelse(
        sum(is.na(c(weight33))) == 0,
        (mean(c(weight33)) - 1)
        / 3 * 100, NA
      )
  ) %>%
  mutate(
    Date = coalesce(Date, date_v1_cf),
    Date = coalesce(Date, date_v1_hc),
    Survey = "CFQ-R Caregivers 6-13"
  ) %>%
  select(
    sid, Survey, Date, physical:weight
  ) %>%
  filter(!if_all(physical:weight, ~ is.na(.)))
# Children aged 6 to 11
cfqr_children_6_11_names <- list(
  "cfq_r_y_1" = "phys1", "cfq_r_y_2" = "phys2", "cfq_r_y_3" = "phys3",
  "cfq_r_y_4" = "phys4", "cfq_r_y_5" = "phys5", "cfq_r_y_6" = "phys6",
  "cfq_r_y_7" = "emot7", "cfq_r_y_8" = "emot8", "cfq_r_y_9" = "emot9",
  "cfq_r_y_10" = "emot10", "cfq_r_y_11" = "emot11", "cfq_r_y_12" = "emot12",
  "cfq_r_y_13" = "emot13", "cfq_r_y_14" = "emot14", "cfq_r_y_15" = "eat15",
  "cfq_r_y_16" = "treat16", "cfq_r_y_17" = "eat17", "cfq_r_y_18" = "treat18",
  "cfq_r_y_19" = "eat19", "cfq_r_y_20" = "social20", "cfq_r_y_21" = "social21",
  "cfq_r_y_22" = "social22", "cfq_r_y_23" = "social23",
  "cfq_r_y_24" = "social24", "cfq_r_y_25" = "social25",
  "cfq_r_y_26" = "social26", "cfq_r_y_27" = "body27", "cfq_r_y_28" = "body28",
  "cfq_r_y_29" = "body29", "cfq_r_y_30" = "treat30", "cfq_r_y_31" = "resp31",
  "cfq_r_y_32" = "resp32", "cfq_r_y_33" = "resp33", "cfq_r_y_34" = "resp34",
  "cfq_r_y_35" = "digest35"
)
cfqr_children_6_11_names <-
  setNames(names(cfqr_children_6_11_names), cfqr_children_6_11_names)
# Some items need to be reverse scored
cfqr_children_6_11_reverse <- c(
  "phys1", "phys2", "phys3", "phys4", "phys5", "emot14", "treat18", "eat19",
  "social20", "social22", "social24", "social26"
)
# Do all the calculations
cfqr_children_6_11 <- df %>%
  select(
    sid, date_v1_cf, date_v1_hc,
    cfqr_children_ages_611_timestamp, cfq_r_y_1:cfq_r_y_35
  ) %>%
  mutate(
    Date = as.Date(cfqr_children_ages_611_timestamp),
    across(cfq_r_y_1:cfq_r_y_35, ~ as.numeric(.x))
  ) %>%
  rename(all_of(unlist(cfqr_children_6_11_names))) %>%
  mutate(across(all_of(cfqr_children_6_11_reverse), ~ 5 - .x)) %>%
  rowwise() %>%
  mutate(
    physical =
      ifelse(
        sum(is.na(c(phys1, phys2, phys3, phys4, phys5, phys6))) <= 3,
        (mean(c(phys1, phys2, phys3, phys4, phys5, phys6)) - 1)
        / 3 * 100, NA
      ),
    emotion =
      ifelse(
        sum(is.na(c(
          emot7, emot8, emot9, emot10, emot11, emot12, emot13, emot14
        ))) <= 4,
        (mean(c(
          emot7, emot8, emot9, emot10, emot11, emot12, emot13, emot14
        )) - 1)
        / 3 * 100, NA
      ),
    social =
      ifelse(
        sum(is.na(c(
          social20, social21, social22, social23, social24, social25, social26
        ))) <= 3,
        (mean(c(
          social20, social21, social22, social23, social24, social25, social26
        )) - 1)
        / 3 * 100, NA
      ),
    eat =
      ifelse(
        sum(is.na(c(eat15, eat17, eat19))) <= 1,
        (mean(c(eat15, eat17, eat19)) - 1)
        / 3 * 100, NA
      ),
    body =
      ifelse(
        sum(is.na(c(body27, body28, body29))) <= 1,
        (mean(c(body27, body28, body29)) - 1)
        / 3 * 100, NA
      ),
    treat =
      ifelse(
        sum(is.na(c(treat16, treat18, treat30))) <= 1,
        (mean(c(treat16, treat18, treat30)) - 1)
        / 3 * 100, NA
      ),
    respirat =
      ifelse(
        sum(is.na(c(resp31, resp32, resp33, resp34))) <= 2,
        (mean(c(resp31, resp32, resp33, resp34)) - 1)
        / 3 * 100, NA
      ),
    digest =
      ifelse(
        sum(is.na(c(digest35))) == 0,
        (mean(c(digest35)) - 1)
        / 3 * 100, NA
      )
  ) %>%
  mutate(
    Date = coalesce(Date, date_v1_cf),
    Date = coalesce(Date, date_v1_hc),
    Survey = "CFQ-R Children Ages 6-11"
  ) %>%
  select(
    sid, Survey, Date, physical:digest
  ) %>%
  filter(!if_all(physical:digest, ~ is.na(.)))
# Children aged 12 to 13
cfqr_children_12_13_names <- list(
  "cfq_r_o1" = "phys1", "cfq_r_o2" = "phys2", "cfq_r_o3" = "phys3",
  "cfq_r_o4" = "phys4", "cfq_r_o5" = "phys5", "cfq_r_o6" = "phys6",
  "cfq_r_o7" = "emot7", "cfq_r_o8" = "emot8", "cfq_r_or9" = "emot9",
  "cfq_r_o10" = "emot10", "cfq_r_o11" = "emot11", "cfq_r_o12" = "emot12",
  "cfq_r_o13" = "emot13", "cfq_r_o14" = "emot14", "cfq_r_o15" = "eat15",
  "cfq_r_o16" = "treat16", "cfq_r_o17" = "eat17", "cfq_r_o18" = "treat18",
  "cfq_r_o19" = "eat19", "cfq_r_o20" = "social20", "cfq_r_o21" = "social21",
  "cfq_r_o22" = "social22", "cfq_r_o23" = "social23", "cfq_r_o24" = "social24",
  "cfq_r_o25" = "social25", "cfq_r_o26" = "social26", "cfq_r_o27" = "body27",
  "cfq_r_o28" = "body28", "cfq_r_o29" = "body29", "cfq_r_o30" = "treat30",
  "cfq_r_o31" = "resp31", "cfq_r_o32" = "resp32", "cfq_r_o33" = "resp33",
  "cfq_r_o34" = "resp34", "cfq_r_o35" = "digest35"
)
cfqr_children_12_13_names <-
  setNames(names(cfqr_children_12_13_names), cfqr_children_12_13_names)
# Some items need to be reverse scored
cfqr_children_12_13_reverse <- c(
  "phys1", "phys2", "phys3", "phys4", "phys5", "emot14", "treat18", "eat19",
  "social20", "social22", "social24", "social26"
)
# Do all the calculations
cfqr_children_12_13 <- df %>%
  select(
    sid, date_v1_cf, date_v1_hc,
    cfqr_children_ages_1213_timestamp, cfq_r_o1:cfq_r_o35
  ) %>%
  mutate(
    Date = as.Date(cfqr_children_ages_1213_timestamp),
    across(cfq_r_o1:cfq_r_o35, ~ as.numeric(.x))
  ) %>%
  rename(all_of(unlist(cfqr_children_12_13_names))) %>%
  mutate(across(all_of(cfqr_children_12_13_reverse), ~ 5 - .x)) %>%
  rowwise() %>%
  mutate(
    physical =
      ifelse(
        sum(is.na(c(phys1, phys2, phys3, phys4, phys5, phys6))) <= 3,
        (mean(c(phys1, phys2, phys3, phys4, phys5, phys6)) - 1)
        / 3 * 100, NA
      ),
    emotion =
      ifelse(
        sum(is.na(c(
          emot7, emot8, emot9, emot10, emot11, emot12, emot13, emot14
        ))) <= 4,
        (mean(c(
          emot7, emot8, emot9, emot10, emot11, emot12, emot13, emot14
        )) - 1)
        / 3 * 100, NA
      ),
    social =
      ifelse(
        sum(is.na(c(
          social20, social21, social22, social23, social24, social25, social26
        ))) <= 3,
        (mean(c(
          social20, social21, social22, social23, social24, social25, social26
        )) - 1)
        / 3 * 100, NA
      ),
    eat =
      ifelse(
        sum(is.na(c(eat15, eat17, eat19))) <= 1,
        (mean(c(eat15, eat17, eat19)) - 1)
        / 3 * 100, NA
      ),
    body =
      ifelse(
        sum(is.na(c(body27, body28, body29))) <= 1,
        (mean(c(body27, body28, body29)) - 1)
        / 3 * 100, NA
      ),
    treat =
      ifelse(
        sum(is.na(c(treat16, treat18, treat30))) <= 1,
        (mean(c(treat16, treat18, treat30)) - 1)
        / 3 * 100, NA
      ),
    respirat =
      ifelse(
        sum(is.na(c(resp31, resp32, resp33, resp34))) <= 2,
        (mean(c(resp31, resp32, resp33, resp34)) - 1)
        / 3 * 100, NA
      ),
    digest =
      ifelse(
        sum(is.na(c(digest35))) == 0,
        (mean(c(digest35)) - 1)
        / 3 * 100, NA
      )
  ) %>%
  mutate(
    Date = coalesce(Date, date_v1_cf),
    Date = coalesce(Date, date_v1_hc),
    Survey = "CFQ-R Children Ages 12-13"
  ) %>%
  select(
    sid, Survey, Date, physical:digest
  ) %>%
  filter(!if_all(physical:digest, ~ is.na(.)))
# Teen/Adult version
cfqr_teens_adults_names <- list(
  "cfq_r_a_1" = "phys1", "cfq_r_a_2" = "phys2", "cfq_r_a_3" = "phys3",
  "cfq_r_a_4" = "phys4", "cfq_r_a_5" = "phys5", "cfq_r_a_6" = "vital6",
  "cfq_r_a_7" = "emot7", "cfq_r_a_8" = "emot8", "cfq_r_a_9" = "vital9",
  "cfq_r_a_10" = "vital10", "cfq_r_a_11" = "vital11", "cfq_r_a_12" = "emot12",
  "cfq_r_a_13" = "phys13", "cfq_r_a_14" = "eat14", "cfq_r_a_15" = "treat15",
  "cfq_r_a_16" = "treat16", "cfq_r_a_17" = "treat17", "cfq_r_a_18" = "health18",
  "cfq_r_a_19" = "phys19", "cfq_r_a_20" = "phys20", "cfq_r_a_21" = "eat21",
  "cfq_r_a_22" = "social22", "cfq_r_a_23" = "social23", "cfq_r_a_24" = "body24",
  "cfq_r_a_25" = "body25", "cfq_r_a_26" = "body26", "cfq_r_a_27" = "social27",
  "cfq_r_a_28" = "social28", "cfq_r_a_29" = "social29",
  "cfq_r_a_30" = "social30", "cfq_r_a_31" = "emot31", "cfq_r_a_32" = "health32",
  "cfq_r_a_33" = "emot33", "cfq_r_a_34" = "health34", "cfq_r_a_35" = "role35",
  "cfq_r_a_36" = "role36", "cfq_r_a_37" = "role37", "cfq_r_a_38" = "role38",
  "cfq_r_a_39" = "weight39", "cfq_r_a_40" = "resp40", "cfq_r_a_41" = "resp41",
  "cfq_r_a_42" = "resp42", "cfq_r_a_43" = "resp43", "cfq_r_a_44" = "resp44",
  "cfq_r_a_45" = "resp45", "cfq_r_a_46" = "resp46", "cfq_r_a_47" = "digest47",
  "cfq_r_a_48" = "digest48", "cfq_r_a_49" = "digest49", "cfq_r_a_50" = "eat50"
)
cfqr_teens_adults_names <-
  setNames(names(cfqr_teens_adults_names), cfqr_teens_adults_names)
# Some items need to be reverse scored
cfqr_teens_adults_reverse <- c(
  "vital6", "vital10", "phys13", "treat15", "treat17", "health18", "social23",
  "social28", "social30", "health32", "health34", "role35", "resp43"
)
# Do all the calculations
cfqr_teens_adults <- df %>%
  select(
    sid, date_v1_cf, date_v1_hc,
    cfqr_adolescents_and_adults_14_years_timestamp, cfq_r_a_1:cfq_r_a_50
  ) %>%
  mutate(
    Date = as.Date(cfqr_adolescents_and_adults_14_years_timestamp),
    across(cfq_r_a_1:cfq_r_a_50, ~ as.numeric(.x))
  ) %>%
  rename(all_of(unlist(cfqr_teens_adults_names))) %>%
  mutate(across(all_of(cfqr_teens_adults_reverse), ~ 5 - .x)) %>%
  rowwise() %>%
  mutate(
    physical =
      ifelse(
        sum(is.na(c(phys1, phys2, phys3, phys4, phys5, phys13, phys19, phys20))) <= 4,
        (mean(c(phys1, phys2, phys3, phys4, phys5, phys13, phys19, phys20)) - 1)
        / 3 * 100, NA
      ),
    role =
      ifelse(
        sum(is.na(c(role35, role36, role37, role38))) <= 2,
        (mean(c(role35, role36, role37, role38)) - 1)
        / 3 * 100, NA
      ),
    vitality =
      ifelse(
        sum(is.na(c(vital6, vital9, vital10, vital11))) <= 2,
        (mean(c(vital6, vital9, vital10, vital11)) - 1)
        / 3 * 100, NA
      ),
    emotion =
      ifelse(
        sum(is.na(c(emot7, emot8, emot12, emot31, emot33))) <= 2,
        (mean(c(emot7, emot8, emot12, emot31, emot33)) - 1)
        / 3 * 100, NA
      ),
    social =
      ifelse(
        sum(is.na(c(
          social22, social23, social27, social28, social29, social30
        ))) <= 3,
        (mean(c(
          social22, social23, social27, social28, social29, social30
        )) - 1)
        / 3 * 100, NA
      ),
    body =
      ifelse(
        sum(is.na(c(body24, body25, body26))) <= 1,
        (mean(c(body24, body25, body26)) - 1)
        / 3 * 100, NA
      ),
    eat =
      ifelse(
        sum(is.na(c(eat14, eat21, eat50))) <= 1,
        (mean(c(eat14, eat21, eat50)) - 1)
        / 3 * 100, NA
      ),
    treat =
      ifelse(
        sum(is.na(c(treat15, treat16, treat17))) <= 1,
        (mean(c(treat15, treat16, treat17)) - 1)
        / 3 * 100, NA
      ),
    health =
      ifelse(
        sum(is.na(c(health18, health32, health34))) <= 1,
        (mean(c(health18, health32, health34)) - 1)
        / 3 * 100, NA
      ),
    weight =
      ifelse(
        sum(is.na(c(weight39))) == 0,
        (mean(c(weight39)) - 1)
        / 3 * 100, NA
      ),
    respirat =
      ifelse(
        sum(is.na(c(resp40, resp41, resp42, resp44, resp45, resp46))) <= 3,
        (mean(c(resp40, resp41, resp42, resp44, resp45, resp46)) - 1)
        / 3 * 100, NA
      ),
    digest =
      ifelse(
        sum(is.na(c(digest47, digest48, digest49))) <= 1,
        (mean(c(digest47, digest48, digest49)) - 1)
        / 3 * 100, NA
      )
  ) %>%
  mutate(
    Date = coalesce(Date, date_v1_cf),
    Date = coalesce(Date, date_v1_hc),
    Survey = "CFQ-R Adolescents and Adults 14 Years"
  ) %>%
  select(
    sid, Survey, Date, physical:digest
  ) %>%
  filter(!if_all(physical:digest, ~ is.na(.)))
# Controls
hc_surveys <- df %>%
  select(
    sid, date_v1_cf, date_v1_hc, hc_pediatric_cough_survey_timestamp, q1:q5
  ) %>%
  mutate(
    Date = as.Date(hc_pediatric_cough_survey_timestamp),
    Date = coalesce(Date, date_v1_cf),
    Date = coalesce(Date, date_v1_hc),
    Survey = "HC Cough Survey"
  ) %>%
  select(
    sid, Survey, Date, q1:q5
  ) %>%
  filter(!if_all(q1:q5, ~ is.na(.)))
hc_surveys$sid <- as.numeric(hc_surveys$sid)
```

## Respiratory scores

I tried to examine the association between respiratory scores and cough using similar ZINB to above, but there just isn't enough data to fit these models. For example, looking at the caregiver surveys, there are only two participants with both survey results and cough data on the same date. The two participants have 8 and 12 dates with data, but by using the model approach we would be excluding 5 participants who each took the survey only once.

A total of `r length(unique(cfqr_children_6_11$sid))` people filled out the CFQ-R for children 6-11, with `r length(unique(cfqr_children_6_11$sid[duplicated(cfqr_children_6_11$sid)]))` filling it out more than once.

A total of `r length(unique(cfqr_children_12_13$sid))` people filled out the CFQ-R for children 12-13, with `r length(unique(cfqr_children_12_13$sid[duplicated(cfqr_children_12_13$sid)]))` filling it out more than once.

A total of `r length(unique(cfqr_teens_adults$sid))` people filled out the CFQ-R for teens and adults, with `r length(unique(cfqr_teens_adults$sid[duplicated(cfqr_teens_adults$sid)]))` filling it out more than once.

A total of `r length(unique(cfqr_parent_6_13$sid))` people filled out the CFQ-R for teens and adults, with `r length(unique(cfqr_parent_6_13$sid[duplicated(cfqr_parent_6_13$sid)]))` filling it out more than once.

## Summary of baseline values

```{r results='asis'}
# Combine CFQ-R into one
cf1 <- cfqr_children_12_13 %>%
  group_by(sid) %>%
  filter(row_number() == 1) %>%
  select(-Date) %>%
  pivot_longer(physical:digest)
cf2 <- cfqr_children_6_11 %>%
  group_by(sid) %>%
  filter(row_number() == 1) %>%
  select(-Date) %>%
  pivot_longer(physical:digest)
cf3 <- cfqr_teens_adults %>%
  group_by(sid) %>%
  filter(row_number() == 1) %>%
  select(-Date) %>%
  pivot_longer(physical:digest)
cf4 <- cfqr_parent_6_13 %>%
  group_by(sid) %>%
  filter(row_number() == 1) %>%
  select(-Date) %>%
  pivot_longer(physical:weight)
# Put together then back to wide
cfqr_baseline <- do.call(rbind, list(cf1, cf2, cf3, cf4))
cfqr_baseline <- cfqr_baseline %>%
  pivot_wider()
t3 <- tableby(
  Survey ~ notest(physical) + notest(emotion) + notest(social) + notest(eat) +
    notest(body) + notest(treat) + notest(respirat) + notest(digest) +
    notest(role) + notest(vitality) + notest(health) + notest(weight) +
    notest(school),
  data = cfqr_baseline, control = mycontrols
)
summary(t3)
```

## Association with coughs

There were no statistically significant correlations between coughs and survey respiratory scores.

# Healthy control surveys

A total of `r length(unique(hc_surveys$sid))` controls filled out the surveys, with `r length(unique(hc_surveys$sid[duplicated(hc_surveys$sid)]))` filling it out more than once.

## Summary of baseline values

```{r results='asis'}
hc <- hc_surveys %>%
  group_by(sid) %>%
  filter(row_number() == 1)
t4 <- tableby(
  ~ notest(q1) + notest(q2) + notest(q3) + notest(q4) +
    notest(q5),
  data = hc, control = mycontrols
)
summary(t4)
```

## Association with coughs

There were no statistically significant correlations between coughs and survey scores.

# Participant figures

```{r}
#| warning: false
cfqr_children_6_11$sid <- as.numeric(cfqr_children_6_11$sid)
cfqr_parent_6_13$sid <- as.numeric(cfqr_parent_6_13$sid)
p38 <- full_join(
  agg_counts,
  cfqr_children_6_11 %>% select(sid, Date, respirat) %>%
    rename(`CFQ-R Children Ages 6-11` = respirat),
  by = join_by(sid, Date)
)
p38 <- full_join(
  p38,
  cfqr_parent_6_13 %>% select(sid, Date, respirat) %>%
    rename(`CFQ-R Caregivers 6-13` = respirat),
  by = join_by(sid, Date)
)
p38 <- p38 %>%
  filter(sid == 38) %>%
  pivot_longer(c(Coughs, `CFQ-R Children Ages 6-11`, `CFQ-R Caregivers 6-13`)) %>%
  filter(!is.na(value))
p38$name <- factor(p38$name,
  levels = c("Coughs", "CFQ-R Children Ages 6-11", "CFQ-R Caregivers 6-13")
)
p38_plot <- ggplot(p38, aes(x = Night, y = value)) +
  geom_point() +
  geom_line() +
  theme_bw() +
  theme(axis.title.y = element_blank()) +
  facet_wrap(~name, nrow = 3, scales = "free")
p38_plot
ggsave("/home/timvigers/OneDrive/Vigers/CF/Lilah Melzer/Lilah Cough Monitor/Dissemination/Figures/participant_38.png",
  plot = p38_plot, width = 9, height = 7, units = "in"
)
```
